

================================================================
== Vivado HLS Report for 'MAJ'
================================================================
* Date:           Sat Apr 10 17:13:31 2021

* Version:        2019.1 (Build 2552052 on Fri May 24 15:28:33 MDT 2019)
* Project:        operation_project
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z020-clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|     1.691|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+----------+
    |  Latency  |  Interval | Pipeline |
    | min | max | min | max |   Type   |
    +-----+-----+-----+-----+----------+
    |    0|    0|    1|    1| function |
    +-----+-----+-----+-----+----------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 0
IsPipeline: 1
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 1


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 1
* Pipeline : 1
  Pipeline-0 : II = 1, D = 1, States = { 1 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.69>
ST_1 : Operation 2 [1/1] (0.00ns)   --->   "%z_read = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %z) nounwind" [sha256_impl.c:130]   --->   Operation 2 'read' 'z_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 3 [1/1] (0.00ns)   --->   "%y_read = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %y) nounwind" [sha256_impl.c:130]   --->   Operation 3 'read' 'y_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 4 [1/1] (0.00ns)   --->   "%x_read = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %x) nounwind" [sha256_impl.c:130]   --->   Operation 4 'read' 'x_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 5 [1/1] (0.00ns)   --->   "%rtl_key_load = load i32* @rtl_key_r, align 4" [sha256_impl.c:132]   --->   Operation 5 'load' 'rtl_key_load' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 6 [1/1] (0.00ns) (grouped into LUT with out node select_ln134)   --->   "%tmp = call i1 @_ssdm_op_BitSelect.i1.i32.i32(i32 %rtl_key_load, i32 4)" [sha256_impl.c:134]   --->   Operation 6 'bitselect' 'tmp' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns) (grouped into LUT with out node xor_ln136_1)   --->   "%xor_ln136 = xor i32 %z_read, %y_read" [sha256_impl.c:136]   --->   Operation 7 'xor' 'xor_ln136' <Predicate = (!tmp)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 8 [1/1] (0.00ns) (grouped into LUT with out node xor_ln136_1)   --->   "%and_ln136 = and i32 %xor_ln136, %x_read" [sha256_impl.c:136]   --->   Operation 8 'and' 'and_ln136' <Predicate = (!tmp)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 9 [1/1] (0.00ns) (grouped into LUT with out node xor_ln136_1)   --->   "%and_ln136_1 = and i32 %z_read, %y_read" [sha256_impl.c:136]   --->   Operation 9 'and' 'and_ln136_1' <Predicate = (!tmp)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 10 [1/1] (0.99ns) (out node of the LUT)   --->   "%xor_ln136_1 = xor i32 %and_ln136, %and_ln136_1" [sha256_impl.c:136]   --->   Operation 10 'xor' 'xor_ln136_1' <Predicate = (!tmp)> <Delay = 0.99> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 11 [1/1] (0.00ns) (grouped into LUT with out node xor_ln142_2)   --->   "%and_ln142 = and i32 %y_read, %x_read" [sha256_impl.c:142]   --->   Operation 11 'and' 'and_ln142' <Predicate = (tmp)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 12 [1/1] (0.00ns) (grouped into LUT with out node xor_ln142_2)   --->   "%or_ln142 = or i32 %z_read, %x_read" [sha256_impl.c:142]   --->   Operation 12 'or' 'or_ln142' <Predicate = (tmp)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 13 [1/1] (0.00ns) (grouped into LUT with out node xor_ln142_2)   --->   "%or_ln142_1 = or i32 %z_read, %y_read" [sha256_impl.c:142]   --->   Operation 13 'or' 'or_ln142_1' <Predicate = (tmp)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 14 [1/1] (0.00ns) (grouped into LUT with out node xor_ln142_2)   --->   "%xor_ln142 = xor i32 %and_ln142, %or_ln142" [sha256_impl.c:142]   --->   Operation 14 'xor' 'xor_ln142' <Predicate = (tmp)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 15 [1/1] (0.00ns) (grouped into LUT with out node xor_ln142_2)   --->   "%xor_ln142_1 = xor i32 %or_ln142_1, -1" [sha256_impl.c:142]   --->   Operation 15 'xor' 'xor_ln142_1' <Predicate = (tmp)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 16 [1/1] (0.99ns) (out node of the LUT)   --->   "%xor_ln142_2 = xor i32 %xor_ln142, %xor_ln142_1" [sha256_impl.c:142]   --->   Operation 16 'xor' 'xor_ln142_2' <Predicate = (tmp)> <Delay = 0.99> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 17 [1/1] (0.69ns) (out node of the LUT)   --->   "%select_ln134 = select i1 %tmp, i32 %xor_ln142_2, i32 %xor_ln136_1" [sha256_impl.c:134]   --->   Operation 17 'select' 'select_ln134' <Predicate = true> <Delay = 0.69> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "ret i32 %select_ln134" [sha256_impl.c:149]   --->   Operation 18 'ret' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Binding
============================================================
STG Binding: 
---------------- STG Properties BEGIN ----------------
- Is combinational: 1
- Is one-state seq: 0
- Is datapath-only: 0
- Is pipelined: 1
- Is top level: 0
Port [ Return ] is wired: 1; IO mode=ap_ctrl_hs:ce=0
Port [ x]:  wired=1; compound=0; hidden=0; nouse=0; global=0; static=0; extern=0; dir=0; type=0; pingpong=0; private_global=0; IO mode=ap_none:ce=0
Port [ y]:  wired=1; compound=0; hidden=0; nouse=0; global=0; static=0; extern=0; dir=0; type=0; pingpong=0; private_global=0; IO mode=ap_none:ce=0
Port [ z]:  wired=1; compound=0; hidden=0; nouse=0; global=0; static=0; extern=0; dir=0; type=0; pingpong=0; private_global=0; IO mode=ap_none:ce=0
Port [ rtl_key_r]:  wired=1; compound=0; hidden=0; nouse=0; global=1; static=1; extern=0; dir=0; type=0; pingpong=0; private_global=0; linkage=7; visibility=0; IO mode=ap_none:ce=0
---------------- STG Properties END ------------------

---------------- Datapath Model BEGIN ----------------

<LifeTime>
<method=bitvector/>
z_read       (read     ) [ 00]
y_read       (read     ) [ 00]
x_read       (read     ) [ 00]
rtl_key_load (load     ) [ 00]
tmp          (bitselect) [ 01]
xor_ln136    (xor      ) [ 00]
and_ln136    (and      ) [ 00]
and_ln136_1  (and      ) [ 00]
xor_ln136_1  (xor      ) [ 00]
and_ln142    (and      ) [ 00]
or_ln142     (or       ) [ 00]
or_ln142_1   (or       ) [ 00]
xor_ln142    (xor      ) [ 00]
xor_ln142_1  (xor      ) [ 00]
xor_ln142_2  (xor      ) [ 00]
select_ln134 (select   ) [ 00]
ret_ln149    (ret      ) [ 00]
</LifeTime>

<model>

<comp_list>
<comp id="0" class="1000" name="x">
<pin_list>
<pin id="1" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="x"/></StgValue>
</bind>
</comp>

<comp id="2" class="1000" name="y">
<pin_list>
<pin id="3" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="y"/></StgValue>
</bind>
</comp>

<comp id="4" class="1000" name="z">
<pin_list>
<pin id="5" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="z"/></StgValue>
</bind>
</comp>

<comp id="6" class="1000" name="rtl_key_r">
<pin_list>
<pin id="7" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="rtl_key_r"/></StgValue>
</bind>
</comp>

<comp id="8" class="1001" name="const_8">
<pin_list>
<pin id="9" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_Read.ap_auto.i32"/></StgValue>
</bind>
</comp>

<comp id="10" class="1001" name="const_10">
<pin_list>
<pin id="11" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_BitSelect.i1.i32.i32"/></StgValue>
</bind>
</comp>

<comp id="12" class="1001" name="const_12">
<pin_list>
<pin id="13" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="14" class="1001" name="const_14">
<pin_list>
<pin id="15" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="16" class="1004" name="z_read_read_fu_16">
<pin_list>
<pin id="17" dir="0" index="0" bw="32" slack="0"/>
<pin id="18" dir="0" index="1" bw="32" slack="0"/>
<pin id="19" dir="1" index="2" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="read(1150) " fcode="read"/>
<opset="z_read/1 "/>
</bind>
</comp>

<comp id="22" class="1004" name="y_read_read_fu_22">
<pin_list>
<pin id="23" dir="0" index="0" bw="32" slack="0"/>
<pin id="24" dir="0" index="1" bw="32" slack="0"/>
<pin id="25" dir="1" index="2" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="read(1150) " fcode="read"/>
<opset="y_read/1 "/>
</bind>
</comp>

<comp id="28" class="1004" name="x_read_read_fu_28">
<pin_list>
<pin id="29" dir="0" index="0" bw="32" slack="0"/>
<pin id="30" dir="0" index="1" bw="32" slack="0"/>
<pin id="31" dir="1" index="2" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="read(1150) " fcode="read"/>
<opset="x_read/1 "/>
</bind>
</comp>

<comp id="34" class="1004" name="rtl_key_load_load_fu_34">
<pin_list>
<pin id="35" dir="0" index="0" bw="32" slack="0"/>
<pin id="36" dir="1" index="1" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="load(27) " fcode="load"/>
<opset="rtl_key_load/1 "/>
</bind>
</comp>

<comp id="38" class="1004" name="tmp_fu_38">
<pin_list>
<pin id="39" dir="0" index="0" bw="1" slack="0"/>
<pin id="40" dir="0" index="1" bw="32" slack="0"/>
<pin id="41" dir="0" index="2" bw="4" slack="0"/>
<pin id="42" dir="1" index="3" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="bitselect(1000) " fcode="bitselect"/>
<opset="tmp/1 "/>
</bind>
</comp>

<comp id="46" class="1004" name="xor_ln136_fu_46">
<pin_list>
<pin id="47" dir="0" index="0" bw="32" slack="0"/>
<pin id="48" dir="0" index="1" bw="32" slack="0"/>
<pin id="49" dir="1" index="2" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="xor(25) " fcode="xor"/>
<opset="xor_ln136/1 "/>
</bind>
</comp>

<comp id="52" class="1004" name="and_ln136_fu_52">
<pin_list>
<pin id="53" dir="0" index="0" bw="32" slack="0"/>
<pin id="54" dir="0" index="1" bw="32" slack="0"/>
<pin id="55" dir="1" index="2" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="and(23) " fcode="and"/>
<opset="and_ln136/1 "/>
</bind>
</comp>

<comp id="58" class="1004" name="and_ln136_1_fu_58">
<pin_list>
<pin id="59" dir="0" index="0" bw="32" slack="0"/>
<pin id="60" dir="0" index="1" bw="32" slack="0"/>
<pin id="61" dir="1" index="2" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="and(23) " fcode="and"/>
<opset="and_ln136_1/1 "/>
</bind>
</comp>

<comp id="64" class="1004" name="xor_ln136_1_fu_64">
<pin_list>
<pin id="65" dir="0" index="0" bw="32" slack="0"/>
<pin id="66" dir="0" index="1" bw="32" slack="0"/>
<pin id="67" dir="1" index="2" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="xor(25) " fcode="xor"/>
<opset="xor_ln136_1/1 "/>
</bind>
</comp>

<comp id="70" class="1004" name="and_ln142_fu_70">
<pin_list>
<pin id="71" dir="0" index="0" bw="32" slack="0"/>
<pin id="72" dir="0" index="1" bw="32" slack="0"/>
<pin id="73" dir="1" index="2" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="and(23) " fcode="and"/>
<opset="and_ln142/1 "/>
</bind>
</comp>

<comp id="76" class="1004" name="or_ln142_fu_76">
<pin_list>
<pin id="77" dir="0" index="0" bw="32" slack="0"/>
<pin id="78" dir="0" index="1" bw="32" slack="0"/>
<pin id="79" dir="1" index="2" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="or(24) " fcode="or"/>
<opset="or_ln142/1 "/>
</bind>
</comp>

<comp id="82" class="1004" name="or_ln142_1_fu_82">
<pin_list>
<pin id="83" dir="0" index="0" bw="32" slack="0"/>
<pin id="84" dir="0" index="1" bw="32" slack="0"/>
<pin id="85" dir="1" index="2" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="or(24) " fcode="or"/>
<opset="or_ln142_1/1 "/>
</bind>
</comp>

<comp id="88" class="1004" name="xor_ln142_fu_88">
<pin_list>
<pin id="89" dir="0" index="0" bw="32" slack="0"/>
<pin id="90" dir="0" index="1" bw="32" slack="0"/>
<pin id="91" dir="1" index="2" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="xor(25) " fcode="xor"/>
<opset="xor_ln142/1 "/>
</bind>
</comp>

<comp id="94" class="1004" name="xor_ln142_1_fu_94">
<pin_list>
<pin id="95" dir="0" index="0" bw="32" slack="0"/>
<pin id="96" dir="0" index="1" bw="1" slack="0"/>
<pin id="97" dir="1" index="2" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="xor(25) " fcode="xor"/>
<opset="xor_ln142_1/1 "/>
</bind>
</comp>

<comp id="100" class="1004" name="xor_ln142_2_fu_100">
<pin_list>
<pin id="101" dir="0" index="0" bw="32" slack="0"/>
<pin id="102" dir="0" index="1" bw="32" slack="0"/>
<pin id="103" dir="1" index="2" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="xor(25) " fcode="xor"/>
<opset="xor_ln142_2/1 "/>
</bind>
</comp>

<comp id="106" class="1004" name="select_ln134_fu_106">
<pin_list>
<pin id="107" dir="0" index="0" bw="1" slack="0"/>
<pin id="108" dir="0" index="1" bw="32" slack="0"/>
<pin id="109" dir="0" index="2" bw="32" slack="0"/>
<pin id="110" dir="1" index="3" bw="32" slack="2147483647"/>
</pin_list>
<bind>
<opcode="select(49) " fcode="select"/>
<opset="select_ln134/1 "/>
</bind>
</comp>

</comp_list>

<net_list>
<net id="20"><net_src comp="8" pin="0"/><net_sink comp="16" pin=0"/></net>

<net id="21"><net_src comp="4" pin="0"/><net_sink comp="16" pin=1"/></net>

<net id="26"><net_src comp="8" pin="0"/><net_sink comp="22" pin=0"/></net>

<net id="27"><net_src comp="2" pin="0"/><net_sink comp="22" pin=1"/></net>

<net id="32"><net_src comp="8" pin="0"/><net_sink comp="28" pin=0"/></net>

<net id="33"><net_src comp="0" pin="0"/><net_sink comp="28" pin=1"/></net>

<net id="37"><net_src comp="6" pin="0"/><net_sink comp="34" pin=0"/></net>

<net id="43"><net_src comp="10" pin="0"/><net_sink comp="38" pin=0"/></net>

<net id="44"><net_src comp="34" pin="1"/><net_sink comp="38" pin=1"/></net>

<net id="45"><net_src comp="12" pin="0"/><net_sink comp="38" pin=2"/></net>

<net id="50"><net_src comp="16" pin="2"/><net_sink comp="46" pin=0"/></net>

<net id="51"><net_src comp="22" pin="2"/><net_sink comp="46" pin=1"/></net>

<net id="56"><net_src comp="46" pin="2"/><net_sink comp="52" pin=0"/></net>

<net id="57"><net_src comp="28" pin="2"/><net_sink comp="52" pin=1"/></net>

<net id="62"><net_src comp="16" pin="2"/><net_sink comp="58" pin=0"/></net>

<net id="63"><net_src comp="22" pin="2"/><net_sink comp="58" pin=1"/></net>

<net id="68"><net_src comp="52" pin="2"/><net_sink comp="64" pin=0"/></net>

<net id="69"><net_src comp="58" pin="2"/><net_sink comp="64" pin=1"/></net>

<net id="74"><net_src comp="22" pin="2"/><net_sink comp="70" pin=0"/></net>

<net id="75"><net_src comp="28" pin="2"/><net_sink comp="70" pin=1"/></net>

<net id="80"><net_src comp="16" pin="2"/><net_sink comp="76" pin=0"/></net>

<net id="81"><net_src comp="28" pin="2"/><net_sink comp="76" pin=1"/></net>

<net id="86"><net_src comp="16" pin="2"/><net_sink comp="82" pin=0"/></net>

<net id="87"><net_src comp="22" pin="2"/><net_sink comp="82" pin=1"/></net>

<net id="92"><net_src comp="70" pin="2"/><net_sink comp="88" pin=0"/></net>

<net id="93"><net_src comp="76" pin="2"/><net_sink comp="88" pin=1"/></net>

<net id="98"><net_src comp="82" pin="2"/><net_sink comp="94" pin=0"/></net>

<net id="99"><net_src comp="14" pin="0"/><net_sink comp="94" pin=1"/></net>

<net id="104"><net_src comp="88" pin="2"/><net_sink comp="100" pin=0"/></net>

<net id="105"><net_src comp="94" pin="2"/><net_sink comp="100" pin=1"/></net>

<net id="111"><net_src comp="38" pin="3"/><net_sink comp="106" pin=0"/></net>

<net id="112"><net_src comp="100" pin="2"/><net_sink comp="106" pin=1"/></net>

<net id="113"><net_src comp="64" pin="2"/><net_sink comp="106" pin=2"/></net>

</net_list>

</model> 
---------------- Datapath Model END ------------------

* FSMD analyzer results:
  - Output states:
 - Input state : 
	Port: MAJ : x | {1 }
	Port: MAJ : y | {1 }
	Port: MAJ : z | {1 }
	Port: MAJ : rtl_key_r | {1 }
  - Chain level:
	State 1
		tmp : 1
		ret_ln149 : 1


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================

* Functional unit list:
|----------|---------------------|---------|---------|
| Operation|   Functional Unit   |    FF   |   LUT   |
|----------|---------------------|---------|---------|
|          |   xor_ln136_fu_46   |    0    |    32   |
|          |  xor_ln136_1_fu_64  |    0    |    32   |
|    xor   |   xor_ln142_fu_88   |    0    |    32   |
|          |  xor_ln142_1_fu_94  |    0    |    32   |
|          |  xor_ln142_2_fu_100 |    0    |    32   |
|----------|---------------------|---------|---------|
|          |   and_ln136_fu_52   |    0    |    32   |
|    and   |  and_ln136_1_fu_58  |    0    |    32   |
|          |   and_ln142_fu_70   |    0    |    32   |
|----------|---------------------|---------|---------|
|    or    |    or_ln142_fu_76   |    0    |    32   |
|          |   or_ln142_1_fu_82  |    0    |    32   |
|----------|---------------------|---------|---------|
|  select  | select_ln134_fu_106 |    0    |    32   |
|----------|---------------------|---------|---------|
|          |  z_read_read_fu_16  |    0    |    0    |
|   read   |  y_read_read_fu_22  |    0    |    0    |
|          |  x_read_read_fu_28  |    0    |    0    |
|----------|---------------------|---------|---------|
| bitselect|      tmp_fu_38      |    0    |    0    |
|----------|---------------------|---------|---------|
|   Total  |                     |    0    |   352   |
|----------|---------------------|---------|---------|

Memories:
N/A

* Register list:
N/A

* Multiplexer (MUX) list: 
|--------|------|------|------|--------|
|  Comp  |  Pin | Size |  BW  | S x BW |
|--------|------|------|------|--------|
|  Total |      |      |      |    0   |
|--------|------|------|------|--------|



* Summary:
+-----------+--------+--------+
|           |   FF   |   LUT  |
+-----------+--------+--------+
|  Function |    0   |   352  |
|   Memory  |    -   |    -   |
|Multiplexer|    -   |    -   |
|  Register |    -   |    -   |
+-----------+--------+--------+
|   Total   |    0   |   352  |
+-----------+--------+--------+
