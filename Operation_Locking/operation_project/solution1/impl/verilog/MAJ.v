// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module MAJ (
        ap_ready,
        x,
        y,
        z,
        rtl_key_r,
        ap_return
);


output   ap_ready;
input  [31:0] x;
input  [31:0] y;
input  [31:0] z;
input  [31:0] rtl_key_r;
output  [31:0] ap_return;

wire   [31:0] xor_ln136_fu_46_p2;
wire   [31:0] and_ln136_fu_52_p2;
wire   [31:0] and_ln136_1_fu_58_p2;
wire   [31:0] and_ln142_fu_70_p2;
wire   [31:0] or_ln142_fu_76_p2;
wire   [31:0] or_ln142_1_fu_82_p2;
wire   [31:0] xor_ln142_fu_88_p2;
wire   [31:0] xor_ln142_1_fu_94_p2;
wire   [0:0] tmp_fu_38_p3;
wire   [31:0] xor_ln142_2_fu_100_p2;
wire   [31:0] xor_ln136_1_fu_64_p2;

assign and_ln136_1_fu_58_p2 = (z & y);

assign and_ln136_fu_52_p2 = (xor_ln136_fu_46_p2 & x);

assign and_ln142_fu_70_p2 = (y & x);

assign ap_ready = 1'b1;

assign ap_return = ((tmp_fu_38_p3[0:0] === 1'b1) ? xor_ln142_2_fu_100_p2 : xor_ln136_1_fu_64_p2);

assign or_ln142_1_fu_82_p2 = (z | y);

assign or_ln142_fu_76_p2 = (z | x);

assign tmp_fu_38_p3 = rtl_key_r[32'd4];

assign xor_ln136_1_fu_64_p2 = (and_ln136_fu_52_p2 ^ and_ln136_1_fu_58_p2);

assign xor_ln136_fu_46_p2 = (z ^ y);

assign xor_ln142_1_fu_94_p2 = (or_ln142_1_fu_82_p2 ^ 32'd4294967295);

assign xor_ln142_2_fu_100_p2 = (xor_ln142_fu_88_p2 ^ xor_ln142_1_fu_94_p2);

assign xor_ln142_fu_88_p2 = (or_ln142_fu_76_p2 ^ and_ln142_fu_70_p2);

endmodule //MAJ
