// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "SIG0.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic SIG0::ap_const_logic_1 = sc_dt::Log_1;
const bool SIG0::ap_const_boolean_1 = true;
const sc_lv<1> SIG0::ap_const_lv1_0 = "0";
const sc_lv<1> SIG0::ap_const_lv1_1 = "1";
const sc_lv<32> SIG0::ap_const_lv32_1 = "1";
const sc_lv<32> SIG0::ap_const_lv32_6 = "110";
const sc_lv<32> SIG0::ap_const_lv32_19 = "11001";
const sc_lv<32> SIG0::ap_const_lv32_1F = "11111";
const sc_lv<32> SIG0::ap_const_lv32_7 = "111";
const sc_lv<32> SIG0::ap_const_lv32_E = "1110";
const sc_lv<32> SIG0::ap_const_lv32_12 = "10010";
const sc_lv<32> SIG0::ap_const_lv32_3 = "11";
const sc_lv<32> SIG0::ap_const_lv32_1A = "11010";
const sc_lv<32> SIG0::ap_const_lv32_18 = "11000";
const sc_lv<32> SIG0::ap_const_lv32_8 = "1000";
const sc_logic SIG0::ap_const_logic_0 = sc_dt::Log_0;

SIG0::SIG0(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_phi_mux_p_0_phi_fu_73_p4);
    sensitive << ( xor_ln202_1_fu_223_p2 );
    sensitive << ( tmp_fu_83_p3 );
    sensitive << ( xor_ln207_fu_334_p2 );

    SC_METHOD(thread_ap_ready);

    SC_METHOD(thread_ap_return);
    sensitive << ( ap_phi_mux_p_0_phi_fu_73_p4 );

    SC_METHOD(thread_lshr_ln53_4_fu_155_p4);
    sensitive << ( x );

    SC_METHOD(thread_lshr_ln53_5_fu_234_p4);
    sensitive << ( x );

    SC_METHOD(thread_lshr_ln53_6_fu_286_p4);
    sensitive << ( x );

    SC_METHOD(thread_lshr_ln57_4_fu_173_p4);
    sensitive << ( x );

    SC_METHOD(thread_lshr_ln57_5_fu_252_p4);
    sensitive << ( x );

    SC_METHOD(thread_lshr_ln57_6_fu_304_p4);
    sensitive << ( x );

    SC_METHOD(thread_lshr_ln7_fu_121_p4);
    sensitive << ( x );

    SC_METHOD(thread_lshr_ln8_fu_203_p4);
    sensitive << ( x );

    SC_METHOD(thread_lshr_ln_fu_103_p4);
    sensitive << ( x );

    SC_METHOD(thread_or_ln2_fu_135_p3);
    sensitive << ( trunc_ln57_5_fu_131_p1 );
    sensitive << ( lshr_ln7_fu_121_p4 );

    SC_METHOD(thread_or_ln53_4_fu_165_p3);
    sensitive << ( trunc_ln53_6_fu_151_p1 );
    sensitive << ( lshr_ln53_4_fu_155_p4 );

    SC_METHOD(thread_or_ln53_5_fu_244_p3);
    sensitive << ( trunc_ln53_fu_230_p1 );
    sensitive << ( lshr_ln53_5_fu_234_p4 );

    SC_METHOD(thread_or_ln53_6_fu_296_p3);
    sensitive << ( trunc_ln53_4_fu_282_p1 );
    sensitive << ( lshr_ln53_6_fu_286_p4 );

    SC_METHOD(thread_or_ln57_4_fu_187_p3);
    sensitive << ( trunc_ln57_6_fu_183_p1 );
    sensitive << ( lshr_ln57_4_fu_173_p4 );

    SC_METHOD(thread_or_ln57_5_fu_266_p3);
    sensitive << ( trunc_ln57_fu_262_p1 );
    sensitive << ( lshr_ln57_5_fu_252_p4 );

    SC_METHOD(thread_or_ln57_6_fu_318_p3);
    sensitive << ( trunc_ln57_4_fu_314_p1 );
    sensitive << ( lshr_ln57_6_fu_304_p4 );

    SC_METHOD(thread_or_ln_fu_113_p3);
    sensitive << ( trunc_ln53_5_fu_99_p1 );
    sensitive << ( lshr_ln_fu_103_p4 );

    SC_METHOD(thread_select_ln51_4_fu_195_p3);
    sensitive << ( tmp_3_fu_91_p3 );
    sensitive << ( or_ln57_4_fu_187_p3 );
    sensitive << ( or_ln53_4_fu_165_p3 );

    SC_METHOD(thread_select_ln51_5_fu_274_p3);
    sensitive << ( tmp_3_fu_91_p3 );
    sensitive << ( or_ln57_5_fu_266_p3 );
    sensitive << ( or_ln53_5_fu_244_p3 );

    SC_METHOD(thread_select_ln51_6_fu_326_p3);
    sensitive << ( tmp_3_fu_91_p3 );
    sensitive << ( or_ln57_6_fu_318_p3 );
    sensitive << ( or_ln53_6_fu_296_p3 );

    SC_METHOD(thread_select_ln51_fu_143_p3);
    sensitive << ( tmp_3_fu_91_p3 );
    sensitive << ( or_ln2_fu_135_p3 );
    sensitive << ( or_ln_fu_113_p3 );

    SC_METHOD(thread_tmp_3_fu_91_p3);
    sensitive << ( rtl_key_r );

    SC_METHOD(thread_tmp_fu_83_p3);
    sensitive << ( rtl_key_r );

    SC_METHOD(thread_trunc_ln53_4_fu_282_p1);
    sensitive << ( x );

    SC_METHOD(thread_trunc_ln53_5_fu_99_p1);
    sensitive << ( x );

    SC_METHOD(thread_trunc_ln53_6_fu_151_p1);
    sensitive << ( x );

    SC_METHOD(thread_trunc_ln53_fu_230_p1);
    sensitive << ( x );

    SC_METHOD(thread_trunc_ln57_4_fu_314_p1);
    sensitive << ( x );

    SC_METHOD(thread_trunc_ln57_5_fu_131_p1);
    sensitive << ( x );

    SC_METHOD(thread_trunc_ln57_6_fu_183_p1);
    sensitive << ( x );

    SC_METHOD(thread_trunc_ln57_fu_262_p1);
    sensitive << ( x );

    SC_METHOD(thread_xor_ln202_1_fu_223_p2);
    sensitive << ( xor_ln202_fu_217_p2 );
    sensitive << ( select_ln51_fu_143_p3 );

    SC_METHOD(thread_xor_ln202_fu_217_p2);
    sensitive << ( zext_ln202_fu_213_p1 );
    sensitive << ( select_ln51_4_fu_195_p3 );

    SC_METHOD(thread_xor_ln207_fu_334_p2);
    sensitive << ( select_ln51_6_fu_326_p3 );
    sensitive << ( select_ln51_5_fu_274_p3 );

    SC_METHOD(thread_zext_ln202_fu_213_p1);
    sensitive << ( lshr_ln8_fu_203_p4 );

    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "SIG0_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, x, "(port)x");
    sc_trace(mVcdFile, rtl_key_r, "(port)rtl_key_r");
    sc_trace(mVcdFile, ap_return, "(port)ap_return");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, xor_ln202_1_fu_223_p2, "xor_ln202_1_fu_223_p2");
    sc_trace(mVcdFile, ap_phi_mux_p_0_phi_fu_73_p4, "ap_phi_mux_p_0_phi_fu_73_p4");
    sc_trace(mVcdFile, tmp_fu_83_p3, "tmp_fu_83_p3");
    sc_trace(mVcdFile, xor_ln207_fu_334_p2, "xor_ln207_fu_334_p2");
    sc_trace(mVcdFile, trunc_ln53_5_fu_99_p1, "trunc_ln53_5_fu_99_p1");
    sc_trace(mVcdFile, lshr_ln_fu_103_p4, "lshr_ln_fu_103_p4");
    sc_trace(mVcdFile, trunc_ln57_5_fu_131_p1, "trunc_ln57_5_fu_131_p1");
    sc_trace(mVcdFile, lshr_ln7_fu_121_p4, "lshr_ln7_fu_121_p4");
    sc_trace(mVcdFile, tmp_3_fu_91_p3, "tmp_3_fu_91_p3");
    sc_trace(mVcdFile, or_ln2_fu_135_p3, "or_ln2_fu_135_p3");
    sc_trace(mVcdFile, or_ln_fu_113_p3, "or_ln_fu_113_p3");
    sc_trace(mVcdFile, trunc_ln53_6_fu_151_p1, "trunc_ln53_6_fu_151_p1");
    sc_trace(mVcdFile, lshr_ln53_4_fu_155_p4, "lshr_ln53_4_fu_155_p4");
    sc_trace(mVcdFile, trunc_ln57_6_fu_183_p1, "trunc_ln57_6_fu_183_p1");
    sc_trace(mVcdFile, lshr_ln57_4_fu_173_p4, "lshr_ln57_4_fu_173_p4");
    sc_trace(mVcdFile, or_ln57_4_fu_187_p3, "or_ln57_4_fu_187_p3");
    sc_trace(mVcdFile, or_ln53_4_fu_165_p3, "or_ln53_4_fu_165_p3");
    sc_trace(mVcdFile, lshr_ln8_fu_203_p4, "lshr_ln8_fu_203_p4");
    sc_trace(mVcdFile, zext_ln202_fu_213_p1, "zext_ln202_fu_213_p1");
    sc_trace(mVcdFile, select_ln51_4_fu_195_p3, "select_ln51_4_fu_195_p3");
    sc_trace(mVcdFile, xor_ln202_fu_217_p2, "xor_ln202_fu_217_p2");
    sc_trace(mVcdFile, select_ln51_fu_143_p3, "select_ln51_fu_143_p3");
    sc_trace(mVcdFile, trunc_ln53_fu_230_p1, "trunc_ln53_fu_230_p1");
    sc_trace(mVcdFile, lshr_ln53_5_fu_234_p4, "lshr_ln53_5_fu_234_p4");
    sc_trace(mVcdFile, trunc_ln57_fu_262_p1, "trunc_ln57_fu_262_p1");
    sc_trace(mVcdFile, lshr_ln57_5_fu_252_p4, "lshr_ln57_5_fu_252_p4");
    sc_trace(mVcdFile, or_ln57_5_fu_266_p3, "or_ln57_5_fu_266_p3");
    sc_trace(mVcdFile, or_ln53_5_fu_244_p3, "or_ln53_5_fu_244_p3");
    sc_trace(mVcdFile, trunc_ln53_4_fu_282_p1, "trunc_ln53_4_fu_282_p1");
    sc_trace(mVcdFile, lshr_ln53_6_fu_286_p4, "lshr_ln53_6_fu_286_p4");
    sc_trace(mVcdFile, trunc_ln57_4_fu_314_p1, "trunc_ln57_4_fu_314_p1");
    sc_trace(mVcdFile, lshr_ln57_6_fu_304_p4, "lshr_ln57_6_fu_304_p4");
    sc_trace(mVcdFile, or_ln57_6_fu_318_p3, "or_ln57_6_fu_318_p3");
    sc_trace(mVcdFile, or_ln53_6_fu_296_p3, "or_ln53_6_fu_296_p3");
    sc_trace(mVcdFile, select_ln51_6_fu_326_p3, "select_ln51_6_fu_326_p3");
    sc_trace(mVcdFile, select_ln51_5_fu_274_p3, "select_ln51_5_fu_274_p3");
#endif

    }
}

SIG0::~SIG0() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void SIG0::thread_ap_phi_mux_p_0_phi_fu_73_p4() {
    if (esl_seteq<1,1,1>(tmp_fu_83_p3.read(), ap_const_lv1_1)) {
        ap_phi_mux_p_0_phi_fu_73_p4 = xor_ln207_fu_334_p2.read();
    } else if (esl_seteq<1,1,1>(tmp_fu_83_p3.read(), ap_const_lv1_0)) {
        ap_phi_mux_p_0_phi_fu_73_p4 = xor_ln202_1_fu_223_p2.read();
    } else {
        ap_phi_mux_p_0_phi_fu_73_p4 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void SIG0::thread_ap_ready() {
    ap_ready = ap_const_logic_1;
}

void SIG0::thread_ap_return() {
    ap_return = ap_phi_mux_p_0_phi_fu_73_p4.read();
}

void SIG0::thread_lshr_ln53_4_fu_155_p4() {
    lshr_ln53_4_fu_155_p4 = x.read().range(31, 14);
}

void SIG0::thread_lshr_ln53_5_fu_234_p4() {
    lshr_ln53_5_fu_234_p4 = x.read().range(31, 26);
}

void SIG0::thread_lshr_ln53_6_fu_286_p4() {
    lshr_ln53_6_fu_286_p4 = x.read().range(31, 24);
}

void SIG0::thread_lshr_ln57_4_fu_173_p4() {
    lshr_ln57_4_fu_173_p4 = x.read().range(31, 18);
}

void SIG0::thread_lshr_ln57_5_fu_252_p4() {
    lshr_ln57_5_fu_252_p4 = x.read().range(31, 6);
}

void SIG0::thread_lshr_ln57_6_fu_304_p4() {
    lshr_ln57_6_fu_304_p4 = x.read().range(31, 8);
}

void SIG0::thread_lshr_ln7_fu_121_p4() {
    lshr_ln7_fu_121_p4 = x.read().range(31, 7);
}

void SIG0::thread_lshr_ln8_fu_203_p4() {
    lshr_ln8_fu_203_p4 = x.read().range(31, 3);
}

void SIG0::thread_lshr_ln_fu_103_p4() {
    lshr_ln_fu_103_p4 = x.read().range(31, 25);
}

void SIG0::thread_or_ln2_fu_135_p3() {
    or_ln2_fu_135_p3 = esl_concat<7,25>(trunc_ln57_5_fu_131_p1.read(), lshr_ln7_fu_121_p4.read());
}

void SIG0::thread_or_ln53_4_fu_165_p3() {
    or_ln53_4_fu_165_p3 = esl_concat<14,18>(trunc_ln53_6_fu_151_p1.read(), lshr_ln53_4_fu_155_p4.read());
}

void SIG0::thread_or_ln53_5_fu_244_p3() {
    or_ln53_5_fu_244_p3 = esl_concat<26,6>(trunc_ln53_fu_230_p1.read(), lshr_ln53_5_fu_234_p4.read());
}

void SIG0::thread_or_ln53_6_fu_296_p3() {
    or_ln53_6_fu_296_p3 = esl_concat<24,8>(trunc_ln53_4_fu_282_p1.read(), lshr_ln53_6_fu_286_p4.read());
}

void SIG0::thread_or_ln57_4_fu_187_p3() {
    or_ln57_4_fu_187_p3 = esl_concat<18,14>(trunc_ln57_6_fu_183_p1.read(), lshr_ln57_4_fu_173_p4.read());
}

void SIG0::thread_or_ln57_5_fu_266_p3() {
    or_ln57_5_fu_266_p3 = esl_concat<6,26>(trunc_ln57_fu_262_p1.read(), lshr_ln57_5_fu_252_p4.read());
}

void SIG0::thread_or_ln57_6_fu_318_p3() {
    or_ln57_6_fu_318_p3 = esl_concat<8,24>(trunc_ln57_4_fu_314_p1.read(), lshr_ln57_6_fu_304_p4.read());
}

void SIG0::thread_or_ln_fu_113_p3() {
    or_ln_fu_113_p3 = esl_concat<25,7>(trunc_ln53_5_fu_99_p1.read(), lshr_ln_fu_103_p4.read());
}

void SIG0::thread_select_ln51_4_fu_195_p3() {
    select_ln51_4_fu_195_p3 = (!tmp_3_fu_91_p3.read()[0].is_01())? sc_lv<32>(): ((tmp_3_fu_91_p3.read()[0].to_bool())? or_ln57_4_fu_187_p3.read(): or_ln53_4_fu_165_p3.read());
}

void SIG0::thread_select_ln51_5_fu_274_p3() {
    select_ln51_5_fu_274_p3 = (!tmp_3_fu_91_p3.read()[0].is_01())? sc_lv<32>(): ((tmp_3_fu_91_p3.read()[0].to_bool())? or_ln57_5_fu_266_p3.read(): or_ln53_5_fu_244_p3.read());
}

void SIG0::thread_select_ln51_6_fu_326_p3() {
    select_ln51_6_fu_326_p3 = (!tmp_3_fu_91_p3.read()[0].is_01())? sc_lv<32>(): ((tmp_3_fu_91_p3.read()[0].to_bool())? or_ln57_6_fu_318_p3.read(): or_ln53_6_fu_296_p3.read());
}

void SIG0::thread_select_ln51_fu_143_p3() {
    select_ln51_fu_143_p3 = (!tmp_3_fu_91_p3.read()[0].is_01())? sc_lv<32>(): ((tmp_3_fu_91_p3.read()[0].to_bool())? or_ln2_fu_135_p3.read(): or_ln_fu_113_p3.read());
}

void SIG0::thread_tmp_3_fu_91_p3() {
    tmp_3_fu_91_p3 = rtl_key_r.read().range(6, 6);
}

void SIG0::thread_tmp_fu_83_p3() {
    tmp_fu_83_p3 = rtl_key_r.read().range(1, 1);
}

void SIG0::thread_trunc_ln53_4_fu_282_p1() {
    trunc_ln53_4_fu_282_p1 = x.read().range(24-1, 0);
}

void SIG0::thread_trunc_ln53_5_fu_99_p1() {
    trunc_ln53_5_fu_99_p1 = x.read().range(25-1, 0);
}

void SIG0::thread_trunc_ln53_6_fu_151_p1() {
    trunc_ln53_6_fu_151_p1 = x.read().range(14-1, 0);
}

void SIG0::thread_trunc_ln53_fu_230_p1() {
    trunc_ln53_fu_230_p1 = x.read().range(26-1, 0);
}

void SIG0::thread_trunc_ln57_4_fu_314_p1() {
    trunc_ln57_4_fu_314_p1 = x.read().range(8-1, 0);
}

void SIG0::thread_trunc_ln57_5_fu_131_p1() {
    trunc_ln57_5_fu_131_p1 = x.read().range(7-1, 0);
}

void SIG0::thread_trunc_ln57_6_fu_183_p1() {
    trunc_ln57_6_fu_183_p1 = x.read().range(18-1, 0);
}

void SIG0::thread_trunc_ln57_fu_262_p1() {
    trunc_ln57_fu_262_p1 = x.read().range(6-1, 0);
}

void SIG0::thread_xor_ln202_1_fu_223_p2() {
    xor_ln202_1_fu_223_p2 = (xor_ln202_fu_217_p2.read() ^ select_ln51_fu_143_p3.read());
}

void SIG0::thread_xor_ln202_fu_217_p2() {
    xor_ln202_fu_217_p2 = (zext_ln202_fu_213_p1.read() ^ select_ln51_4_fu_195_p3.read());
}

void SIG0::thread_xor_ln207_fu_334_p2() {
    xor_ln207_fu_334_p2 = (select_ln51_6_fu_326_p3.read() ^ select_ln51_5_fu_274_p3.read());
}

void SIG0::thread_zext_ln202_fu_213_p1() {
    zext_ln202_fu_213_p1 = esl_zext<32,29>(lshr_ln8_fu_203_p4.read());
}

}

