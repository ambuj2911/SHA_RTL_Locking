// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "SIG1.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic SIG1::ap_const_logic_1 = sc_dt::Log_1;
const bool SIG1::ap_const_boolean_1 = true;
const sc_lv<1> SIG1::ap_const_lv1_0 = "0";
const sc_lv<1> SIG1::ap_const_lv1_1 = "1";
const sc_lv<32> SIG1::ap_const_lv32_6 = "110";
const sc_lv<32> SIG1::ap_const_lv32_19 = "11001";
const sc_lv<32> SIG1::ap_const_lv32_1F = "11111";
const sc_lv<32> SIG1::ap_const_lv32_7 = "111";
const sc_lv<32> SIG1::ap_const_lv32_E = "1110";
const sc_lv<32> SIG1::ap_const_lv32_12 = "10010";
const sc_lv<32> SIG1::ap_const_lv32_3 = "11";
const sc_lv<32> SIG1::ap_const_lv32_F = "1111";
const sc_lv<32> SIG1::ap_const_lv32_11 = "10001";
const sc_lv<32> SIG1::ap_const_lv32_D = "1101";
const sc_lv<32> SIG1::ap_const_lv32_13 = "10011";
const sc_lv<32> SIG1::ap_const_lv32_A = "1010";
const sc_logic SIG1::ap_const_logic_0 = sc_dt::Log_0;

SIG1::SIG1(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_phi_mux_p_0_phi_fu_77_p4);
    sensitive << ( xor_ln228_1_fu_223_p2 );
    sensitive << ( temp_fu_87_p1 );
    sensitive << ( xor_ln232_1_fu_354_p2 );

    SC_METHOD(thread_ap_ready);

    SC_METHOD(thread_ap_return);
    sensitive << ( ap_phi_mux_p_0_phi_fu_77_p4 );

    SC_METHOD(thread_lshr_ln4_fu_252_p4);
    sensitive << ( x );

    SC_METHOD(thread_lshr_ln53_1_fu_286_p4);
    sensitive << ( x );

    SC_METHOD(thread_lshr_ln53_2_fu_103_p4);
    sensitive << ( x );

    SC_METHOD(thread_lshr_ln53_3_fu_155_p4);
    sensitive << ( x );

    SC_METHOD(thread_lshr_ln57_1_fu_304_p4);
    sensitive << ( x );

    SC_METHOD(thread_lshr_ln57_2_fu_121_p4);
    sensitive << ( x );

    SC_METHOD(thread_lshr_ln57_3_fu_173_p4);
    sensitive << ( x );

    SC_METHOD(thread_lshr_ln5_fu_334_p4);
    sensitive << ( x );

    SC_METHOD(thread_lshr_ln6_fu_203_p4);
    sensitive << ( x );

    SC_METHOD(thread_lshr_ln_fu_234_p4);
    sensitive << ( x );

    SC_METHOD(thread_or_ln1_fu_266_p3);
    sensitive << ( trunc_ln57_fu_262_p1 );
    sensitive << ( lshr_ln4_fu_252_p4 );

    SC_METHOD(thread_or_ln53_1_fu_296_p3);
    sensitive << ( trunc_ln53_1_fu_282_p1 );
    sensitive << ( lshr_ln53_1_fu_286_p4 );

    SC_METHOD(thread_or_ln53_2_fu_113_p3);
    sensitive << ( trunc_ln53_2_fu_99_p1 );
    sensitive << ( lshr_ln53_2_fu_103_p4 );

    SC_METHOD(thread_or_ln53_3_fu_165_p3);
    sensitive << ( trunc_ln53_3_fu_151_p1 );
    sensitive << ( lshr_ln53_3_fu_155_p4 );

    SC_METHOD(thread_or_ln57_1_fu_318_p3);
    sensitive << ( trunc_ln57_1_fu_314_p1 );
    sensitive << ( lshr_ln57_1_fu_304_p4 );

    SC_METHOD(thread_or_ln57_2_fu_135_p3);
    sensitive << ( trunc_ln57_2_fu_131_p1 );
    sensitive << ( lshr_ln57_2_fu_121_p4 );

    SC_METHOD(thread_or_ln57_3_fu_187_p3);
    sensitive << ( trunc_ln57_3_fu_183_p1 );
    sensitive << ( lshr_ln57_3_fu_173_p4 );

    SC_METHOD(thread_or_ln_fu_244_p3);
    sensitive << ( trunc_ln53_fu_230_p1 );
    sensitive << ( lshr_ln_fu_234_p4 );

    SC_METHOD(thread_select_ln51_1_fu_326_p3);
    sensitive << ( tmp_fu_91_p3 );
    sensitive << ( or_ln57_1_fu_318_p3 );
    sensitive << ( or_ln53_1_fu_296_p3 );

    SC_METHOD(thread_select_ln51_2_fu_143_p3);
    sensitive << ( tmp_fu_91_p3 );
    sensitive << ( or_ln57_2_fu_135_p3 );
    sensitive << ( or_ln53_2_fu_113_p3 );

    SC_METHOD(thread_select_ln51_3_fu_195_p3);
    sensitive << ( tmp_fu_91_p3 );
    sensitive << ( or_ln57_3_fu_187_p3 );
    sensitive << ( or_ln53_3_fu_165_p3 );

    SC_METHOD(thread_select_ln51_fu_274_p3);
    sensitive << ( tmp_fu_91_p3 );
    sensitive << ( or_ln1_fu_266_p3 );
    sensitive << ( or_ln_fu_244_p3 );

    SC_METHOD(thread_temp_fu_87_p1);
    sensitive << ( rtl_key_r );

    SC_METHOD(thread_tmp_fu_91_p3);
    sensitive << ( rtl_key_r );

    SC_METHOD(thread_trunc_ln53_1_fu_282_p1);
    sensitive << ( x );

    SC_METHOD(thread_trunc_ln53_2_fu_99_p1);
    sensitive << ( x );

    SC_METHOD(thread_trunc_ln53_3_fu_151_p1);
    sensitive << ( x );

    SC_METHOD(thread_trunc_ln53_fu_230_p1);
    sensitive << ( x );

    SC_METHOD(thread_trunc_ln57_1_fu_314_p1);
    sensitive << ( x );

    SC_METHOD(thread_trunc_ln57_2_fu_131_p1);
    sensitive << ( x );

    SC_METHOD(thread_trunc_ln57_3_fu_183_p1);
    sensitive << ( x );

    SC_METHOD(thread_trunc_ln57_fu_262_p1);
    sensitive << ( x );

    SC_METHOD(thread_xor_ln228_1_fu_223_p2);
    sensitive << ( xor_ln228_fu_217_p2 );
    sensitive << ( select_ln51_2_fu_143_p3 );

    SC_METHOD(thread_xor_ln228_fu_217_p2);
    sensitive << ( zext_ln228_fu_213_p1 );
    sensitive << ( select_ln51_3_fu_195_p3 );

    SC_METHOD(thread_xor_ln232_1_fu_354_p2);
    sensitive << ( xor_ln232_fu_348_p2 );
    sensitive << ( select_ln51_fu_274_p3 );

    SC_METHOD(thread_xor_ln232_fu_348_p2);
    sensitive << ( zext_ln232_fu_344_p1 );
    sensitive << ( select_ln51_1_fu_326_p3 );

    SC_METHOD(thread_zext_ln228_fu_213_p1);
    sensitive << ( lshr_ln6_fu_203_p4 );

    SC_METHOD(thread_zext_ln232_fu_344_p1);
    sensitive << ( lshr_ln5_fu_334_p4 );

    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "SIG1_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, x, "(port)x");
    sc_trace(mVcdFile, rtl_key_r, "(port)rtl_key_r");
    sc_trace(mVcdFile, ap_return, "(port)ap_return");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, xor_ln228_1_fu_223_p2, "xor_ln228_1_fu_223_p2");
    sc_trace(mVcdFile, ap_phi_mux_p_0_phi_fu_77_p4, "ap_phi_mux_p_0_phi_fu_77_p4");
    sc_trace(mVcdFile, temp_fu_87_p1, "temp_fu_87_p1");
    sc_trace(mVcdFile, xor_ln232_1_fu_354_p2, "xor_ln232_1_fu_354_p2");
    sc_trace(mVcdFile, trunc_ln53_2_fu_99_p1, "trunc_ln53_2_fu_99_p1");
    sc_trace(mVcdFile, lshr_ln53_2_fu_103_p4, "lshr_ln53_2_fu_103_p4");
    sc_trace(mVcdFile, trunc_ln57_2_fu_131_p1, "trunc_ln57_2_fu_131_p1");
    sc_trace(mVcdFile, lshr_ln57_2_fu_121_p4, "lshr_ln57_2_fu_121_p4");
    sc_trace(mVcdFile, tmp_fu_91_p3, "tmp_fu_91_p3");
    sc_trace(mVcdFile, or_ln57_2_fu_135_p3, "or_ln57_2_fu_135_p3");
    sc_trace(mVcdFile, or_ln53_2_fu_113_p3, "or_ln53_2_fu_113_p3");
    sc_trace(mVcdFile, trunc_ln53_3_fu_151_p1, "trunc_ln53_3_fu_151_p1");
    sc_trace(mVcdFile, lshr_ln53_3_fu_155_p4, "lshr_ln53_3_fu_155_p4");
    sc_trace(mVcdFile, trunc_ln57_3_fu_183_p1, "trunc_ln57_3_fu_183_p1");
    sc_trace(mVcdFile, lshr_ln57_3_fu_173_p4, "lshr_ln57_3_fu_173_p4");
    sc_trace(mVcdFile, or_ln57_3_fu_187_p3, "or_ln57_3_fu_187_p3");
    sc_trace(mVcdFile, or_ln53_3_fu_165_p3, "or_ln53_3_fu_165_p3");
    sc_trace(mVcdFile, lshr_ln6_fu_203_p4, "lshr_ln6_fu_203_p4");
    sc_trace(mVcdFile, zext_ln228_fu_213_p1, "zext_ln228_fu_213_p1");
    sc_trace(mVcdFile, select_ln51_3_fu_195_p3, "select_ln51_3_fu_195_p3");
    sc_trace(mVcdFile, xor_ln228_fu_217_p2, "xor_ln228_fu_217_p2");
    sc_trace(mVcdFile, select_ln51_2_fu_143_p3, "select_ln51_2_fu_143_p3");
    sc_trace(mVcdFile, trunc_ln53_fu_230_p1, "trunc_ln53_fu_230_p1");
    sc_trace(mVcdFile, lshr_ln_fu_234_p4, "lshr_ln_fu_234_p4");
    sc_trace(mVcdFile, trunc_ln57_fu_262_p1, "trunc_ln57_fu_262_p1");
    sc_trace(mVcdFile, lshr_ln4_fu_252_p4, "lshr_ln4_fu_252_p4");
    sc_trace(mVcdFile, or_ln1_fu_266_p3, "or_ln1_fu_266_p3");
    sc_trace(mVcdFile, or_ln_fu_244_p3, "or_ln_fu_244_p3");
    sc_trace(mVcdFile, trunc_ln53_1_fu_282_p1, "trunc_ln53_1_fu_282_p1");
    sc_trace(mVcdFile, lshr_ln53_1_fu_286_p4, "lshr_ln53_1_fu_286_p4");
    sc_trace(mVcdFile, trunc_ln57_1_fu_314_p1, "trunc_ln57_1_fu_314_p1");
    sc_trace(mVcdFile, lshr_ln57_1_fu_304_p4, "lshr_ln57_1_fu_304_p4");
    sc_trace(mVcdFile, or_ln57_1_fu_318_p3, "or_ln57_1_fu_318_p3");
    sc_trace(mVcdFile, or_ln53_1_fu_296_p3, "or_ln53_1_fu_296_p3");
    sc_trace(mVcdFile, lshr_ln5_fu_334_p4, "lshr_ln5_fu_334_p4");
    sc_trace(mVcdFile, zext_ln232_fu_344_p1, "zext_ln232_fu_344_p1");
    sc_trace(mVcdFile, select_ln51_1_fu_326_p3, "select_ln51_1_fu_326_p3");
    sc_trace(mVcdFile, xor_ln232_fu_348_p2, "xor_ln232_fu_348_p2");
    sc_trace(mVcdFile, select_ln51_fu_274_p3, "select_ln51_fu_274_p3");
#endif

    }
}

SIG1::~SIG1() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void SIG1::thread_ap_phi_mux_p_0_phi_fu_77_p4() {
    if (esl_seteq<1,1,1>(temp_fu_87_p1.read(), ap_const_lv1_1)) {
        ap_phi_mux_p_0_phi_fu_77_p4 = xor_ln232_1_fu_354_p2.read();
    } else if (esl_seteq<1,1,1>(temp_fu_87_p1.read(), ap_const_lv1_0)) {
        ap_phi_mux_p_0_phi_fu_77_p4 = xor_ln228_1_fu_223_p2.read();
    } else {
        ap_phi_mux_p_0_phi_fu_77_p4 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void SIG1::thread_ap_ready() {
    ap_ready = ap_const_logic_1;
}

void SIG1::thread_ap_return() {
    ap_return = ap_phi_mux_p_0_phi_fu_77_p4.read();
}

void SIG1::thread_lshr_ln4_fu_252_p4() {
    lshr_ln4_fu_252_p4 = x.read().range(31, 17);
}

void SIG1::thread_lshr_ln53_1_fu_286_p4() {
    lshr_ln53_1_fu_286_p4 = x.read().range(31, 13);
}

void SIG1::thread_lshr_ln53_2_fu_103_p4() {
    lshr_ln53_2_fu_103_p4 = x.read().range(31, 25);
}

void SIG1::thread_lshr_ln53_3_fu_155_p4() {
    lshr_ln53_3_fu_155_p4 = x.read().range(31, 14);
}

void SIG1::thread_lshr_ln57_1_fu_304_p4() {
    lshr_ln57_1_fu_304_p4 = x.read().range(31, 19);
}

void SIG1::thread_lshr_ln57_2_fu_121_p4() {
    lshr_ln57_2_fu_121_p4 = x.read().range(31, 7);
}

void SIG1::thread_lshr_ln57_3_fu_173_p4() {
    lshr_ln57_3_fu_173_p4 = x.read().range(31, 18);
}

void SIG1::thread_lshr_ln5_fu_334_p4() {
    lshr_ln5_fu_334_p4 = x.read().range(31, 10);
}

void SIG1::thread_lshr_ln6_fu_203_p4() {
    lshr_ln6_fu_203_p4 = x.read().range(31, 3);
}

void SIG1::thread_lshr_ln_fu_234_p4() {
    lshr_ln_fu_234_p4 = x.read().range(31, 15);
}

void SIG1::thread_or_ln1_fu_266_p3() {
    or_ln1_fu_266_p3 = esl_concat<17,15>(trunc_ln57_fu_262_p1.read(), lshr_ln4_fu_252_p4.read());
}

void SIG1::thread_or_ln53_1_fu_296_p3() {
    or_ln53_1_fu_296_p3 = esl_concat<13,19>(trunc_ln53_1_fu_282_p1.read(), lshr_ln53_1_fu_286_p4.read());
}

void SIG1::thread_or_ln53_2_fu_113_p3() {
    or_ln53_2_fu_113_p3 = esl_concat<25,7>(trunc_ln53_2_fu_99_p1.read(), lshr_ln53_2_fu_103_p4.read());
}

void SIG1::thread_or_ln53_3_fu_165_p3() {
    or_ln53_3_fu_165_p3 = esl_concat<14,18>(trunc_ln53_3_fu_151_p1.read(), lshr_ln53_3_fu_155_p4.read());
}

void SIG1::thread_or_ln57_1_fu_318_p3() {
    or_ln57_1_fu_318_p3 = esl_concat<19,13>(trunc_ln57_1_fu_314_p1.read(), lshr_ln57_1_fu_304_p4.read());
}

void SIG1::thread_or_ln57_2_fu_135_p3() {
    or_ln57_2_fu_135_p3 = esl_concat<7,25>(trunc_ln57_2_fu_131_p1.read(), lshr_ln57_2_fu_121_p4.read());
}

void SIG1::thread_or_ln57_3_fu_187_p3() {
    or_ln57_3_fu_187_p3 = esl_concat<18,14>(trunc_ln57_3_fu_183_p1.read(), lshr_ln57_3_fu_173_p4.read());
}

void SIG1::thread_or_ln_fu_244_p3() {
    or_ln_fu_244_p3 = esl_concat<15,17>(trunc_ln53_fu_230_p1.read(), lshr_ln_fu_234_p4.read());
}

void SIG1::thread_select_ln51_1_fu_326_p3() {
    select_ln51_1_fu_326_p3 = (!tmp_fu_91_p3.read()[0].is_01())? sc_lv<32>(): ((tmp_fu_91_p3.read()[0].to_bool())? or_ln57_1_fu_318_p3.read(): or_ln53_1_fu_296_p3.read());
}

void SIG1::thread_select_ln51_2_fu_143_p3() {
    select_ln51_2_fu_143_p3 = (!tmp_fu_91_p3.read()[0].is_01())? sc_lv<32>(): ((tmp_fu_91_p3.read()[0].to_bool())? or_ln57_2_fu_135_p3.read(): or_ln53_2_fu_113_p3.read());
}

void SIG1::thread_select_ln51_3_fu_195_p3() {
    select_ln51_3_fu_195_p3 = (!tmp_fu_91_p3.read()[0].is_01())? sc_lv<32>(): ((tmp_fu_91_p3.read()[0].to_bool())? or_ln57_3_fu_187_p3.read(): or_ln53_3_fu_165_p3.read());
}

void SIG1::thread_select_ln51_fu_274_p3() {
    select_ln51_fu_274_p3 = (!tmp_fu_91_p3.read()[0].is_01())? sc_lv<32>(): ((tmp_fu_91_p3.read()[0].to_bool())? or_ln1_fu_266_p3.read(): or_ln_fu_244_p3.read());
}

void SIG1::thread_temp_fu_87_p1() {
    temp_fu_87_p1 = rtl_key_r.read().range(1-1, 0);
}

void SIG1::thread_tmp_fu_91_p3() {
    tmp_fu_91_p3 = rtl_key_r.read().range(6, 6);
}

void SIG1::thread_trunc_ln53_1_fu_282_p1() {
    trunc_ln53_1_fu_282_p1 = x.read().range(13-1, 0);
}

void SIG1::thread_trunc_ln53_2_fu_99_p1() {
    trunc_ln53_2_fu_99_p1 = x.read().range(25-1, 0);
}

void SIG1::thread_trunc_ln53_3_fu_151_p1() {
    trunc_ln53_3_fu_151_p1 = x.read().range(14-1, 0);
}

void SIG1::thread_trunc_ln53_fu_230_p1() {
    trunc_ln53_fu_230_p1 = x.read().range(15-1, 0);
}

void SIG1::thread_trunc_ln57_1_fu_314_p1() {
    trunc_ln57_1_fu_314_p1 = x.read().range(19-1, 0);
}

void SIG1::thread_trunc_ln57_2_fu_131_p1() {
    trunc_ln57_2_fu_131_p1 = x.read().range(7-1, 0);
}

void SIG1::thread_trunc_ln57_3_fu_183_p1() {
    trunc_ln57_3_fu_183_p1 = x.read().range(18-1, 0);
}

void SIG1::thread_trunc_ln57_fu_262_p1() {
    trunc_ln57_fu_262_p1 = x.read().range(17-1, 0);
}

void SIG1::thread_xor_ln228_1_fu_223_p2() {
    xor_ln228_1_fu_223_p2 = (xor_ln228_fu_217_p2.read() ^ select_ln51_2_fu_143_p3.read());
}

void SIG1::thread_xor_ln228_fu_217_p2() {
    xor_ln228_fu_217_p2 = (zext_ln228_fu_213_p1.read() ^ select_ln51_3_fu_195_p3.read());
}

void SIG1::thread_xor_ln232_1_fu_354_p2() {
    xor_ln232_1_fu_354_p2 = (xor_ln232_fu_348_p2.read() ^ select_ln51_fu_274_p3.read());
}

void SIG1::thread_xor_ln232_fu_348_p2() {
    xor_ln232_fu_348_p2 = (zext_ln232_fu_344_p1.read() ^ select_ln51_1_fu_326_p3.read());
}

void SIG1::thread_zext_ln228_fu_213_p1() {
    zext_ln228_fu_213_p1 = esl_zext<32,29>(lshr_ln6_fu_203_p4.read());
}

void SIG1::thread_zext_ln232_fu_344_p1() {
    zext_ln232_fu_344_p1 = esl_zext<32,22>(lshr_ln5_fu_334_p4.read());
}

}

