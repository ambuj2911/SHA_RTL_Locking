

================================================================
== Vivado HLS Report for 'sha256_transform'
================================================================
* Date:           Sat Apr 10 18:02:23 2021

* Version:        2019.1 (Build 2552052 on Fri May 24 15:28:33 MDT 2019)
* Project:        opdp
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z020-clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|     8.742|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+----------+
    |  Latency  |  Interval | Pipeline |
    | min | max | min | max |   Type   |
    +-----+-----+-----+-----+----------+
    |  164|  164|    8|    8| function |
    +-----+-----+-----+-----+----------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 0
IsPipeline: 1
IsRtlPipelined: 1
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 8, depth = 165


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 165
* Pipeline : 1
  Pipeline-0 : II = 8, D = 165, States = {}
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 8 
8 --> 9 
9 --> 10 
10 --> 11 
11 --> 12 
12 --> 13 
13 --> 14 
14 --> 15 
15 --> 16 
16 --> 17 
17 --> 18 
18 --> 19 
19 --> 20 
20 --> 21 
21 --> 22 
22 --> 23 
23 --> 24 
24 --> 25 
25 --> 26 
26 --> 27 
27 --> 28 
28 --> 29 
29 --> 30 
30 --> 31 
31 --> 32 
32 --> 33 
33 --> 34 
34 --> 35 
35 --> 36 
36 --> 37 
37 --> 38 
38 --> 39 
39 --> 40 
40 --> 41 
41 --> 42 
42 --> 43 
43 --> 44 
44 --> 45 
45 --> 46 
46 --> 47 
47 --> 48 
48 --> 49 
49 --> 50 
50 --> 51 
51 --> 52 
52 --> 53 
53 --> 54 
54 --> 55 
55 --> 56 
56 --> 57 
57 --> 58 
58 --> 59 
59 --> 60 
60 --> 61 
61 --> 62 
62 --> 63 
63 --> 64 
64 --> 65 
65 --> 66 
66 --> 67 
67 --> 68 
68 --> 69 
69 --> 70 
70 --> 71 
71 --> 72 
72 --> 73 
73 --> 74 
74 --> 75 
75 --> 76 
76 --> 77 
77 --> 78 
78 --> 79 
79 --> 80 
80 --> 81 
81 --> 82 
82 --> 83 
83 --> 84 
84 --> 85 
85 --> 86 
86 --> 87 
87 --> 88 
88 --> 89 
89 --> 90 
90 --> 91 
91 --> 92 
92 --> 93 
93 --> 94 
94 --> 95 
95 --> 96 
96 --> 97 
97 --> 98 
98 --> 99 
99 --> 100 
100 --> 101 
101 --> 102 
102 --> 103 
103 --> 104 
104 --> 105 
105 --> 106 
106 --> 107 
107 --> 108 
108 --> 109 
109 --> 110 
110 --> 111 
111 --> 112 
112 --> 113 
113 --> 114 
114 --> 115 
115 --> 116 
116 --> 117 
117 --> 118 
118 --> 119 
119 --> 120 
120 --> 121 
121 --> 122 
122 --> 123 
123 --> 124 
124 --> 125 
125 --> 126 
126 --> 127 
127 --> 128 
128 --> 129 
129 --> 130 
130 --> 131 
131 --> 132 
132 --> 133 
133 --> 134 
134 --> 135 
135 --> 136 
136 --> 137 
137 --> 138 
138 --> 139 
139 --> 140 
140 --> 141 
141 --> 142 
142 --> 143 
143 --> 144 
144 --> 145 
145 --> 146 
146 --> 147 
147 --> 148 
148 --> 149 
149 --> 150 
150 --> 151 
151 --> 152 
152 --> 153 
153 --> 154 
154 --> 155 
155 --> 156 
156 --> 157 
157 --> 158 
158 --> 159 
159 --> 160 
160 --> 161 
161 --> 162 
162 --> 163 
163 --> 164 
164 --> 165 
165 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 3.75>
ST_1 : Operation 166 [1/1] (0.00ns)   --->   "%ctx_state_6_read_1 = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %ctx_state_6_read)" [sha256_impl.c:246]   --->   Operation 166 'read' 'ctx_state_6_read_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 167 [1/1] (0.00ns)   --->   "%ctx_state_5_read_1 = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %ctx_state_5_read)" [sha256_impl.c:246]   --->   Operation 167 'read' 'ctx_state_5_read_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 168 [1/1] (0.00ns)   --->   "%ctx_state_4_read_1 = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %ctx_state_4_read)" [sha256_impl.c:246]   --->   Operation 168 'read' 'ctx_state_4_read_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 169 [1/1] (0.00ns)   --->   "%ctx_state_2_read_1 = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %ctx_state_2_read)" [sha256_impl.c:246]   --->   Operation 169 'read' 'ctx_state_2_read_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 170 [1/1] (0.00ns)   --->   "%ctx_state_1_read_1 = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %ctx_state_1_read)" [sha256_impl.c:246]   --->   Operation 170 'read' 'ctx_state_1_read_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 171 [1/1] (0.00ns)   --->   "%ctx_state_0_read_1 = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %ctx_state_0_read)" [sha256_impl.c:246]   --->   Operation 171 'read' 'ctx_state_0_read_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 172 [1/1] (0.00ns)   --->   "%data_0_addr = getelementptr [16 x i8]* %data_0, i64 0, i64 0" [sha256_impl.c:252]   --->   Operation 172 'getelementptr' 'data_0_addr' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 173 [2/2] (2.32ns)   --->   "%data_0_load = load i8* %data_0_addr, align 1" [sha256_impl.c:252]   --->   Operation 173 'load' 'data_0_load' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_1 : Operation 174 [1/1] (0.00ns)   --->   "%data_1_addr = getelementptr [16 x i8]* %data_1, i64 0, i64 0" [sha256_impl.c:252]   --->   Operation 174 'getelementptr' 'data_1_addr' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 175 [2/2] (2.32ns)   --->   "%data_1_load = load i8* %data_1_addr, align 1" [sha256_impl.c:252]   --->   Operation 175 'load' 'data_1_load' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_1 : Operation 176 [1/1] (0.00ns)   --->   "%data_2_addr = getelementptr [16 x i8]* %data_2, i64 0, i64 0" [sha256_impl.c:252]   --->   Operation 176 'getelementptr' 'data_2_addr' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 177 [2/2] (2.32ns)   --->   "%data_2_load = load i8* %data_2_addr, align 1" [sha256_impl.c:252]   --->   Operation 177 'load' 'data_2_load' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_1 : Operation 178 [1/1] (0.00ns)   --->   "%data_3_addr = getelementptr [16 x i8]* %data_3, i64 0, i64 0" [sha256_impl.c:252]   --->   Operation 178 'getelementptr' 'data_3_addr' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 179 [2/2] (2.32ns)   --->   "%data_3_load = load i8* %data_3_addr, align 1" [sha256_impl.c:252]   --->   Operation 179 'load' 'data_3_load' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_1 : Operation 180 [1/1] (0.00ns)   --->   "%data_0_addr_1 = getelementptr [16 x i8]* %data_0, i64 0, i64 1" [sha256_impl.c:252]   --->   Operation 180 'getelementptr' 'data_0_addr_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 181 [2/2] (2.32ns)   --->   "%data_0_load_1 = load i8* %data_0_addr_1, align 1" [sha256_impl.c:252]   --->   Operation 181 'load' 'data_0_load_1' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_1 : Operation 182 [1/1] (0.00ns)   --->   "%data_1_addr_1 = getelementptr [16 x i8]* %data_1, i64 0, i64 1" [sha256_impl.c:252]   --->   Operation 182 'getelementptr' 'data_1_addr_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 183 [2/2] (2.32ns)   --->   "%data_1_load_1 = load i8* %data_1_addr_1, align 1" [sha256_impl.c:252]   --->   Operation 183 'load' 'data_1_load_1' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_1 : Operation 184 [1/1] (0.00ns)   --->   "%data_2_addr_1 = getelementptr [16 x i8]* %data_2, i64 0, i64 1" [sha256_impl.c:252]   --->   Operation 184 'getelementptr' 'data_2_addr_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 185 [2/2] (2.32ns)   --->   "%data_2_load_1 = load i8* %data_2_addr_1, align 1" [sha256_impl.c:252]   --->   Operation 185 'load' 'data_2_load_1' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_1 : Operation 186 [1/1] (0.00ns)   --->   "%data_3_addr_1 = getelementptr [16 x i8]* %data_3, i64 0, i64 1" [sha256_impl.c:252]   --->   Operation 186 'getelementptr' 'data_3_addr_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 187 [2/2] (2.32ns)   --->   "%data_3_load_1 = load i8* %data_3_addr_1, align 1" [sha256_impl.c:252]   --->   Operation 187 'load' 'data_3_load_1' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_1 : Operation 188 [1/1] (0.00ns)   --->   "%dp_key_load = load i32* @dp_key_r, align 4" [sha256_impl.c:269]   --->   Operation 188 'load' 'dp_key_load' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 189 [1/1] (0.00ns)   --->   "%trunc_ln269 = trunc i32 %dp_key_load to i1" [sha256_impl.c:269]   --->   Operation 189 'trunc' 'trunc_ln269' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 190 [1/1] (3.75ns)   --->   "%tmp_48 = call fastcc i32 @EP1(i32 %ctx_state_4_read_1)" [sha256_impl.c:273]   --->   Operation 190 'call' 'tmp_48' <Predicate = (trunc_ln269)> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_1 : Operation 191 [1/1] (2.97ns)   --->   "%tmp_49 = call fastcc i32 @CH(i32 %ctx_state_4_read_1, i32 %ctx_state_5_read_1, i32 %ctx_state_6_read_1)" [sha256_impl.c:273]   --->   Operation 191 'call' 'tmp_49' <Predicate = (trunc_ln269)> <Delay = 2.97> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_1 : Operation 192 [1/1] (3.75ns)   --->   "%tmp_50 = call fastcc i32 @EP0(i32 %ctx_state_0_read_1)" [sha256_impl.c:275]   --->   Operation 192 'call' 'tmp_50' <Predicate = (trunc_ln269)> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_1 : Operation 193 [1/1] (1.69ns)   --->   "%tmp_51 = call fastcc i32 @MAJ(i32 %ctx_state_0_read_1, i32 %ctx_state_1_read_1, i32 %ctx_state_2_read_1)" [sha256_impl.c:275]   --->   Operation 193 'call' 'tmp_51' <Predicate = (trunc_ln269)> <Delay = 1.69> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 2 <SV = 1> <Delay = 6.69>
ST_2 : Operation 194 [1/2] (2.32ns)   --->   "%data_0_load = load i8* %data_0_addr, align 1" [sha256_impl.c:252]   --->   Operation 194 'load' 'data_0_load' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_2 : Operation 195 [1/2] (2.32ns)   --->   "%data_1_load = load i8* %data_1_addr, align 1" [sha256_impl.c:252]   --->   Operation 195 'load' 'data_1_load' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_2 : Operation 196 [1/2] (2.32ns)   --->   "%data_2_load = load i8* %data_2_addr, align 1" [sha256_impl.c:252]   --->   Operation 196 'load' 'data_2_load' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_2 : Operation 197 [1/2] (2.32ns)   --->   "%data_3_load = load i8* %data_3_addr, align 1" [sha256_impl.c:252]   --->   Operation 197 'load' 'data_3_load' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_2 : Operation 198 [1/1] (0.00ns)   --->   "%m_0 = call i32 @_ssdm_op_BitConcatenate.i32.i8.i8.i8.i8(i8 %data_0_load, i8 %data_1_load, i8 %data_2_load, i8 %data_3_load)" [sha256_impl.c:252]   --->   Operation 198 'bitconcatenate' 'm_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 199 [1/2] (2.32ns)   --->   "%data_0_load_1 = load i8* %data_0_addr_1, align 1" [sha256_impl.c:252]   --->   Operation 199 'load' 'data_0_load_1' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_2 : Operation 200 [1/2] (2.32ns)   --->   "%data_1_load_1 = load i8* %data_1_addr_1, align 1" [sha256_impl.c:252]   --->   Operation 200 'load' 'data_1_load_1' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_2 : Operation 201 [1/2] (2.32ns)   --->   "%data_2_load_1 = load i8* %data_2_addr_1, align 1" [sha256_impl.c:252]   --->   Operation 201 'load' 'data_2_load_1' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_2 : Operation 202 [1/2] (2.32ns)   --->   "%data_3_load_1 = load i8* %data_3_addr_1, align 1" [sha256_impl.c:252]   --->   Operation 202 'load' 'data_3_load_1' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_2 : Operation 203 [1/1] (0.00ns)   --->   "%m_1 = call i32 @_ssdm_op_BitConcatenate.i32.i8.i8.i8.i8(i8 %data_0_load_1, i8 %data_1_load_1, i8 %data_2_load_1, i8 %data_3_load_1)" [sha256_impl.c:252]   --->   Operation 203 'bitconcatenate' 'm_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 204 [1/1] (0.00ns)   --->   "%data_0_addr_2 = getelementptr [16 x i8]* %data_0, i64 0, i64 2" [sha256_impl.c:252]   --->   Operation 204 'getelementptr' 'data_0_addr_2' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 205 [2/2] (2.32ns)   --->   "%data_0_load_2 = load i8* %data_0_addr_2, align 1" [sha256_impl.c:252]   --->   Operation 205 'load' 'data_0_load_2' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_2 : Operation 206 [1/1] (0.00ns)   --->   "%data_1_addr_2 = getelementptr [16 x i8]* %data_1, i64 0, i64 2" [sha256_impl.c:252]   --->   Operation 206 'getelementptr' 'data_1_addr_2' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 207 [2/2] (2.32ns)   --->   "%data_1_load_2 = load i8* %data_1_addr_2, align 1" [sha256_impl.c:252]   --->   Operation 207 'load' 'data_1_load_2' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_2 : Operation 208 [1/1] (0.00ns)   --->   "%data_2_addr_2 = getelementptr [16 x i8]* %data_2, i64 0, i64 2" [sha256_impl.c:252]   --->   Operation 208 'getelementptr' 'data_2_addr_2' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 209 [2/2] (2.32ns)   --->   "%data_2_load_2 = load i8* %data_2_addr_2, align 1" [sha256_impl.c:252]   --->   Operation 209 'load' 'data_2_load_2' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_2 : Operation 210 [1/1] (0.00ns)   --->   "%data_3_addr_2 = getelementptr [16 x i8]* %data_3, i64 0, i64 2" [sha256_impl.c:252]   --->   Operation 210 'getelementptr' 'data_3_addr_2' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 211 [2/2] (2.32ns)   --->   "%data_3_load_2 = load i8* %data_3_addr_2, align 1" [sha256_impl.c:252]   --->   Operation 211 'load' 'data_3_load_2' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_2 : Operation 212 [1/1] (0.00ns)   --->   "%data_0_addr_3 = getelementptr [16 x i8]* %data_0, i64 0, i64 3" [sha256_impl.c:252]   --->   Operation 212 'getelementptr' 'data_0_addr_3' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 213 [2/2] (2.32ns)   --->   "%data_0_load_3 = load i8* %data_0_addr_3, align 1" [sha256_impl.c:252]   --->   Operation 213 'load' 'data_0_load_3' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_2 : Operation 214 [1/1] (0.00ns)   --->   "%data_1_addr_3 = getelementptr [16 x i8]* %data_1, i64 0, i64 3" [sha256_impl.c:252]   --->   Operation 214 'getelementptr' 'data_1_addr_3' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 215 [2/2] (2.32ns)   --->   "%data_1_load_3 = load i8* %data_1_addr_3, align 1" [sha256_impl.c:252]   --->   Operation 215 'load' 'data_1_load_3' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_2 : Operation 216 [1/1] (0.00ns)   --->   "%data_2_addr_3 = getelementptr [16 x i8]* %data_2, i64 0, i64 3" [sha256_impl.c:252]   --->   Operation 216 'getelementptr' 'data_2_addr_3' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 217 [2/2] (2.32ns)   --->   "%data_2_load_3 = load i8* %data_2_addr_3, align 1" [sha256_impl.c:252]   --->   Operation 217 'load' 'data_2_load_3' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_2 : Operation 218 [1/1] (0.00ns)   --->   "%data_3_addr_3 = getelementptr [16 x i8]* %data_3, i64 0, i64 3" [sha256_impl.c:252]   --->   Operation 218 'getelementptr' 'data_3_addr_3' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 219 [2/2] (2.32ns)   --->   "%data_3_load_3 = load i8* %data_3_addr_3, align 1" [sha256_impl.c:252]   --->   Operation 219 'load' 'data_3_load_3' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_2 : Operation 220 [1/1] (3.75ns)   --->   "%tmp_1 = call fastcc i32 @SIG0(i32 %m_1)" [sha256_impl.c:256]   --->   Operation 220 'call' 'tmp_1' <Predicate = true> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_2 : Operation 221 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln273_1 = add i32 %m_0, 1116352408" [sha256_impl.c:273]   --->   Operation 221 'add' 'add_ln273_1' <Predicate = (trunc_ln269)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 222 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%add_ln273_2 = add i32 %add_ln273_1, %tmp_48" [sha256_impl.c:273]   --->   Operation 222 'add' 'add_ln273_2' <Predicate = (trunc_ln269)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>

State 3 <SV = 2> <Delay = 8.74>
ST_3 : Operation 223 [1/1] (0.00ns)   --->   "%ctx_state_7_read_1 = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %ctx_state_7_read)" [sha256_impl.c:246]   --->   Operation 223 'read' 'ctx_state_7_read_1' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 224 [1/1] (0.00ns)   --->   "%ctx_state_3_read_1 = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %ctx_state_3_read)" [sha256_impl.c:246]   --->   Operation 224 'read' 'ctx_state_3_read_1' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 225 [1/2] (2.32ns)   --->   "%data_0_load_2 = load i8* %data_0_addr_2, align 1" [sha256_impl.c:252]   --->   Operation 225 'load' 'data_0_load_2' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_3 : Operation 226 [1/2] (2.32ns)   --->   "%data_1_load_2 = load i8* %data_1_addr_2, align 1" [sha256_impl.c:252]   --->   Operation 226 'load' 'data_1_load_2' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_3 : Operation 227 [1/2] (2.32ns)   --->   "%data_2_load_2 = load i8* %data_2_addr_2, align 1" [sha256_impl.c:252]   --->   Operation 227 'load' 'data_2_load_2' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_3 : Operation 228 [1/2] (2.32ns)   --->   "%data_3_load_2 = load i8* %data_3_addr_2, align 1" [sha256_impl.c:252]   --->   Operation 228 'load' 'data_3_load_2' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_3 : Operation 229 [1/1] (0.00ns)   --->   "%m_2 = call i32 @_ssdm_op_BitConcatenate.i32.i8.i8.i8.i8(i8 %data_0_load_2, i8 %data_1_load_2, i8 %data_2_load_2, i8 %data_3_load_2)" [sha256_impl.c:252]   --->   Operation 229 'bitconcatenate' 'm_2' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 230 [1/2] (2.32ns)   --->   "%data_0_load_3 = load i8* %data_0_addr_3, align 1" [sha256_impl.c:252]   --->   Operation 230 'load' 'data_0_load_3' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_3 : Operation 231 [1/2] (2.32ns)   --->   "%data_1_load_3 = load i8* %data_1_addr_3, align 1" [sha256_impl.c:252]   --->   Operation 231 'load' 'data_1_load_3' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_3 : Operation 232 [1/2] (2.32ns)   --->   "%data_2_load_3 = load i8* %data_2_addr_3, align 1" [sha256_impl.c:252]   --->   Operation 232 'load' 'data_2_load_3' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_3 : Operation 233 [1/2] (2.32ns)   --->   "%data_3_load_3 = load i8* %data_3_addr_3, align 1" [sha256_impl.c:252]   --->   Operation 233 'load' 'data_3_load_3' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_3 : Operation 234 [1/1] (0.00ns)   --->   "%m_3 = call i32 @_ssdm_op_BitConcatenate.i32.i8.i8.i8.i8(i8 %data_0_load_3, i8 %data_1_load_3, i8 %data_2_load_3, i8 %data_3_load_3)" [sha256_impl.c:252]   --->   Operation 234 'bitconcatenate' 'm_3' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 235 [1/1] (0.00ns)   --->   "%data_0_addr_4 = getelementptr [16 x i8]* %data_0, i64 0, i64 4" [sha256_impl.c:252]   --->   Operation 235 'getelementptr' 'data_0_addr_4' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 236 [2/2] (2.32ns)   --->   "%data_0_load_4 = load i8* %data_0_addr_4, align 1" [sha256_impl.c:252]   --->   Operation 236 'load' 'data_0_load_4' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_3 : Operation 237 [1/1] (0.00ns)   --->   "%data_1_addr_4 = getelementptr [16 x i8]* %data_1, i64 0, i64 4" [sha256_impl.c:252]   --->   Operation 237 'getelementptr' 'data_1_addr_4' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 238 [2/2] (2.32ns)   --->   "%data_1_load_4 = load i8* %data_1_addr_4, align 1" [sha256_impl.c:252]   --->   Operation 238 'load' 'data_1_load_4' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_3 : Operation 239 [1/1] (0.00ns)   --->   "%data_2_addr_4 = getelementptr [16 x i8]* %data_2, i64 0, i64 4" [sha256_impl.c:252]   --->   Operation 239 'getelementptr' 'data_2_addr_4' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 240 [2/2] (2.32ns)   --->   "%data_2_load_4 = load i8* %data_2_addr_4, align 1" [sha256_impl.c:252]   --->   Operation 240 'load' 'data_2_load_4' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_3 : Operation 241 [1/1] (0.00ns)   --->   "%data_3_addr_4 = getelementptr [16 x i8]* %data_3, i64 0, i64 4" [sha256_impl.c:252]   --->   Operation 241 'getelementptr' 'data_3_addr_4' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 242 [2/2] (2.32ns)   --->   "%data_3_load_4 = load i8* %data_3_addr_4, align 1" [sha256_impl.c:252]   --->   Operation 242 'load' 'data_3_load_4' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_3 : Operation 243 [1/1] (0.00ns)   --->   "%data_0_addr_5 = getelementptr [16 x i8]* %data_0, i64 0, i64 5" [sha256_impl.c:252]   --->   Operation 243 'getelementptr' 'data_0_addr_5' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 244 [2/2] (2.32ns)   --->   "%data_0_load_5 = load i8* %data_0_addr_5, align 1" [sha256_impl.c:252]   --->   Operation 244 'load' 'data_0_load_5' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_3 : Operation 245 [1/1] (0.00ns)   --->   "%data_1_addr_5 = getelementptr [16 x i8]* %data_1, i64 0, i64 5" [sha256_impl.c:252]   --->   Operation 245 'getelementptr' 'data_1_addr_5' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 246 [2/2] (2.32ns)   --->   "%data_1_load_5 = load i8* %data_1_addr_5, align 1" [sha256_impl.c:252]   --->   Operation 246 'load' 'data_1_load_5' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_3 : Operation 247 [1/1] (0.00ns)   --->   "%data_2_addr_5 = getelementptr [16 x i8]* %data_2, i64 0, i64 5" [sha256_impl.c:252]   --->   Operation 247 'getelementptr' 'data_2_addr_5' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 248 [2/2] (2.32ns)   --->   "%data_2_load_5 = load i8* %data_2_addr_5, align 1" [sha256_impl.c:252]   --->   Operation 248 'load' 'data_2_load_5' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_3 : Operation 249 [1/1] (0.00ns)   --->   "%data_3_addr_5 = getelementptr [16 x i8]* %data_3, i64 0, i64 5" [sha256_impl.c:252]   --->   Operation 249 'getelementptr' 'data_3_addr_5' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 250 [2/2] (2.32ns)   --->   "%data_3_load_5 = load i8* %data_3_addr_5, align 1" [sha256_impl.c:252]   --->   Operation 250 'load' 'data_3_load_5' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_3 : Operation 251 [1/1] (3.75ns)   --->   "%tmp_1_1 = call fastcc i32 @SIG0(i32 %m_2)" [sha256_impl.c:256]   --->   Operation 251 'call' 'tmp_1_1' <Predicate = true> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_3 : Operation 252 [1/1] (3.75ns)   --->   "%tmp_1_2 = call fastcc i32 @SIG0(i32 %m_3)" [sha256_impl.c:256]   --->   Operation 252 'call' 'tmp_1_2' <Predicate = true> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_3 : Operation 253 [1/1] (1.76ns)   --->   "br i1 %trunc_ln269, label %1, label %0" [sha256_impl.c:271]   --->   Operation 253 'br' <Predicate = true> <Delay = 1.76>
ST_3 : Operation 254 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln273 = add i32 %tmp_49, %ctx_state_7_read_1" [sha256_impl.c:273]   --->   Operation 254 'add' 'add_ln273' <Predicate = (trunc_ln269)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 255 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%add_ln273_3 = add i32 %add_ln273_2, %add_ln273" [sha256_impl.c:273]   --->   Operation 255 'add' 'add_ln273_3' <Predicate = (trunc_ln269)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 256 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln283_64 = add i32 %add_ln273_3, %tmp_51" [sha256_impl.c:283]   --->   Operation 256 'add' 'add_ln283_64' <Predicate = (trunc_ln269)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 257 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%add_ln283 = add i32 %add_ln283_64, %tmp_50" [sha256_impl.c:283]   --->   Operation 257 'add' 'add_ln283' <Predicate = (trunc_ln269)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>

State 4 <SV = 3> <Delay = 8.07>
ST_4 : Operation 258 [1/2] (2.32ns)   --->   "%data_0_load_4 = load i8* %data_0_addr_4, align 1" [sha256_impl.c:252]   --->   Operation 258 'load' 'data_0_load_4' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_4 : Operation 259 [1/2] (2.32ns)   --->   "%data_1_load_4 = load i8* %data_1_addr_4, align 1" [sha256_impl.c:252]   --->   Operation 259 'load' 'data_1_load_4' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_4 : Operation 260 [1/2] (2.32ns)   --->   "%data_2_load_4 = load i8* %data_2_addr_4, align 1" [sha256_impl.c:252]   --->   Operation 260 'load' 'data_2_load_4' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_4 : Operation 261 [1/2] (2.32ns)   --->   "%data_3_load_4 = load i8* %data_3_addr_4, align 1" [sha256_impl.c:252]   --->   Operation 261 'load' 'data_3_load_4' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_4 : Operation 262 [1/1] (0.00ns)   --->   "%m_4 = call i32 @_ssdm_op_BitConcatenate.i32.i8.i8.i8.i8(i8 %data_0_load_4, i8 %data_1_load_4, i8 %data_2_load_4, i8 %data_3_load_4)" [sha256_impl.c:252]   --->   Operation 262 'bitconcatenate' 'm_4' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 263 [1/2] (2.32ns)   --->   "%data_0_load_5 = load i8* %data_0_addr_5, align 1" [sha256_impl.c:252]   --->   Operation 263 'load' 'data_0_load_5' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_4 : Operation 264 [1/2] (2.32ns)   --->   "%data_1_load_5 = load i8* %data_1_addr_5, align 1" [sha256_impl.c:252]   --->   Operation 264 'load' 'data_1_load_5' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_4 : Operation 265 [1/2] (2.32ns)   --->   "%data_2_load_5 = load i8* %data_2_addr_5, align 1" [sha256_impl.c:252]   --->   Operation 265 'load' 'data_2_load_5' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_4 : Operation 266 [1/2] (2.32ns)   --->   "%data_3_load_5 = load i8* %data_3_addr_5, align 1" [sha256_impl.c:252]   --->   Operation 266 'load' 'data_3_load_5' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_4 : Operation 267 [1/1] (0.00ns)   --->   "%m_5 = call i32 @_ssdm_op_BitConcatenate.i32.i8.i8.i8.i8(i8 %data_0_load_5, i8 %data_1_load_5, i8 %data_2_load_5, i8 %data_3_load_5)" [sha256_impl.c:252]   --->   Operation 267 'bitconcatenate' 'm_5' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 268 [1/1] (0.00ns)   --->   "%data_0_addr_6 = getelementptr [16 x i8]* %data_0, i64 0, i64 6" [sha256_impl.c:252]   --->   Operation 268 'getelementptr' 'data_0_addr_6' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 269 [2/2] (2.32ns)   --->   "%data_0_load_6 = load i8* %data_0_addr_6, align 1" [sha256_impl.c:252]   --->   Operation 269 'load' 'data_0_load_6' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_4 : Operation 270 [1/1] (0.00ns)   --->   "%data_1_addr_6 = getelementptr [16 x i8]* %data_1, i64 0, i64 6" [sha256_impl.c:252]   --->   Operation 270 'getelementptr' 'data_1_addr_6' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 271 [2/2] (2.32ns)   --->   "%data_1_load_6 = load i8* %data_1_addr_6, align 1" [sha256_impl.c:252]   --->   Operation 271 'load' 'data_1_load_6' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_4 : Operation 272 [1/1] (0.00ns)   --->   "%data_2_addr_6 = getelementptr [16 x i8]* %data_2, i64 0, i64 6" [sha256_impl.c:252]   --->   Operation 272 'getelementptr' 'data_2_addr_6' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 273 [2/2] (2.32ns)   --->   "%data_2_load_6 = load i8* %data_2_addr_6, align 1" [sha256_impl.c:252]   --->   Operation 273 'load' 'data_2_load_6' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_4 : Operation 274 [1/1] (0.00ns)   --->   "%data_3_addr_6 = getelementptr [16 x i8]* %data_3, i64 0, i64 6" [sha256_impl.c:252]   --->   Operation 274 'getelementptr' 'data_3_addr_6' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 275 [2/2] (2.32ns)   --->   "%data_3_load_6 = load i8* %data_3_addr_6, align 1" [sha256_impl.c:252]   --->   Operation 275 'load' 'data_3_load_6' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_4 : Operation 276 [1/1] (0.00ns)   --->   "%data_0_addr_7 = getelementptr [16 x i8]* %data_0, i64 0, i64 7" [sha256_impl.c:252]   --->   Operation 276 'getelementptr' 'data_0_addr_7' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 277 [2/2] (2.32ns)   --->   "%data_0_load_7 = load i8* %data_0_addr_7, align 1" [sha256_impl.c:252]   --->   Operation 277 'load' 'data_0_load_7' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_4 : Operation 278 [1/1] (0.00ns)   --->   "%data_1_addr_7 = getelementptr [16 x i8]* %data_1, i64 0, i64 7" [sha256_impl.c:252]   --->   Operation 278 'getelementptr' 'data_1_addr_7' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 279 [2/2] (2.32ns)   --->   "%data_1_load_7 = load i8* %data_1_addr_7, align 1" [sha256_impl.c:252]   --->   Operation 279 'load' 'data_1_load_7' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_4 : Operation 280 [1/1] (0.00ns)   --->   "%data_2_addr_7 = getelementptr [16 x i8]* %data_2, i64 0, i64 7" [sha256_impl.c:252]   --->   Operation 280 'getelementptr' 'data_2_addr_7' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 281 [2/2] (2.32ns)   --->   "%data_2_load_7 = load i8* %data_2_addr_7, align 1" [sha256_impl.c:252]   --->   Operation 281 'load' 'data_2_load_7' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_4 : Operation 282 [1/1] (0.00ns)   --->   "%data_3_addr_7 = getelementptr [16 x i8]* %data_3, i64 0, i64 7" [sha256_impl.c:252]   --->   Operation 282 'getelementptr' 'data_3_addr_7' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 283 [2/2] (2.32ns)   --->   "%data_3_load_7 = load i8* %data_3_addr_7, align 1" [sha256_impl.c:252]   --->   Operation 283 'load' 'data_3_load_7' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_4 : Operation 284 [1/1] (3.75ns)   --->   "%tmp_1_3 = call fastcc i32 @SIG0(i32 %m_4)" [sha256_impl.c:256]   --->   Operation 284 'call' 'tmp_1_3' <Predicate = true> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_4 : Operation 285 [1/1] (3.75ns)   --->   "%tmp_1_4 = call fastcc i32 @SIG0(i32 %m_5)" [sha256_impl.c:256]   --->   Operation 285 'call' 'tmp_1_4' <Predicate = true> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_4 : Operation 286 [1/1] (2.55ns)   --->   "%add_ln279 = add i32 %add_ln273_3, %ctx_state_3_read_1" [sha256_impl.c:279]   --->   Operation 286 'add' 'add_ln279' <Predicate = (trunc_ln269)> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 287 [1/1] (1.76ns)   --->   "br label %0" [sha256_impl.c:285]   --->   Operation 287 'br' <Predicate = (trunc_ln269)> <Delay = 1.76>
ST_4 : Operation 288 [1/1] (0.00ns)   --->   "%f_1_0 = phi i32 [ %ctx_state_4_read_1, %1 ], [ %ctx_state_3_read_1, %.preheader.preheader ]" [sha256_impl.c:246]   --->   Operation 288 'phi' 'f_1_0' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 289 [1/1] (0.00ns)   --->   "%e_1_0 = phi i32 [ %add_ln279, %1 ], [ %ctx_state_3_read_1, %.preheader.preheader ]" [sha256_impl.c:279]   --->   Operation 289 'phi' 'e_1_0' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 290 [1/1] (0.00ns)   --->   "%c_1_0 = phi i32 [ %ctx_state_1_read_1, %1 ], [ 0, %.preheader.preheader ]" [sha256_impl.c:246]   --->   Operation 290 'phi' 'c_1_0' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 291 [1/1] (0.00ns)   --->   "%b_1_0 = phi i32 [ %ctx_state_0_read_1, %1 ], [ 0, %.preheader.preheader ]" [sha256_impl.c:246]   --->   Operation 291 'phi' 'b_1_0' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 292 [1/1] (0.00ns)   --->   "%a_1_0 = phi i32 [ %add_ln283, %1 ], [ 0, %.preheader.preheader ]" [sha256_impl.c:283]   --->   Operation 292 'phi' 'a_1_0' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 293 [1/1] (1.76ns)   --->   "br i1 %trunc_ln269, label %3, label %2" [sha256_impl.c:271]   --->   Operation 293 'br' <Predicate = true> <Delay = 1.76>
ST_4 : Operation 294 [1/1] (3.75ns)   --->   "%tmp_2_1 = call fastcc i32 @EP1(i32 %e_1_0)" [sha256_impl.c:273]   --->   Operation 294 'call' 'tmp_2_1' <Predicate = (trunc_ln269)> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_4 : Operation 295 [1/1] (2.97ns)   --->   "%tmp_3_1 = call fastcc i32 @CH(i32 %e_1_0, i32 %f_1_0, i32 %ctx_state_5_read_1)" [sha256_impl.c:273]   --->   Operation 295 'call' 'tmp_3_1' <Predicate = (trunc_ln269)> <Delay = 2.97> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_4 : Operation 296 [1/1] (3.75ns)   --->   "%tmp_4_1 = call fastcc i32 @EP0(i32 %a_1_0)" [sha256_impl.c:275]   --->   Operation 296 'call' 'tmp_4_1' <Predicate = (trunc_ln269)> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_4 : Operation 297 [1/1] (1.69ns)   --->   "%tmp_5_1 = call fastcc i32 @MAJ(i32 %a_1_0, i32 %b_1_0, i32 %c_1_0)" [sha256_impl.c:275]   --->   Operation 297 'call' 'tmp_5_1' <Predicate = (trunc_ln269)> <Delay = 1.69> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 5 <SV = 4> <Delay = 8.74>
ST_5 : Operation 298 [1/2] (2.32ns)   --->   "%data_0_load_6 = load i8* %data_0_addr_6, align 1" [sha256_impl.c:252]   --->   Operation 298 'load' 'data_0_load_6' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_5 : Operation 299 [1/2] (2.32ns)   --->   "%data_1_load_6 = load i8* %data_1_addr_6, align 1" [sha256_impl.c:252]   --->   Operation 299 'load' 'data_1_load_6' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_5 : Operation 300 [1/2] (2.32ns)   --->   "%data_2_load_6 = load i8* %data_2_addr_6, align 1" [sha256_impl.c:252]   --->   Operation 300 'load' 'data_2_load_6' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_5 : Operation 301 [1/2] (2.32ns)   --->   "%data_3_load_6 = load i8* %data_3_addr_6, align 1" [sha256_impl.c:252]   --->   Operation 301 'load' 'data_3_load_6' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_5 : Operation 302 [1/1] (0.00ns)   --->   "%m_6 = call i32 @_ssdm_op_BitConcatenate.i32.i8.i8.i8.i8(i8 %data_0_load_6, i8 %data_1_load_6, i8 %data_2_load_6, i8 %data_3_load_6)" [sha256_impl.c:252]   --->   Operation 302 'bitconcatenate' 'm_6' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 303 [1/2] (2.32ns)   --->   "%data_0_load_7 = load i8* %data_0_addr_7, align 1" [sha256_impl.c:252]   --->   Operation 303 'load' 'data_0_load_7' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_5 : Operation 304 [1/2] (2.32ns)   --->   "%data_1_load_7 = load i8* %data_1_addr_7, align 1" [sha256_impl.c:252]   --->   Operation 304 'load' 'data_1_load_7' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_5 : Operation 305 [1/2] (2.32ns)   --->   "%data_2_load_7 = load i8* %data_2_addr_7, align 1" [sha256_impl.c:252]   --->   Operation 305 'load' 'data_2_load_7' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_5 : Operation 306 [1/2] (2.32ns)   --->   "%data_3_load_7 = load i8* %data_3_addr_7, align 1" [sha256_impl.c:252]   --->   Operation 306 'load' 'data_3_load_7' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_5 : Operation 307 [1/1] (0.00ns)   --->   "%m_7 = call i32 @_ssdm_op_BitConcatenate.i32.i8.i8.i8.i8(i8 %data_0_load_7, i8 %data_1_load_7, i8 %data_2_load_7, i8 %data_3_load_7)" [sha256_impl.c:252]   --->   Operation 307 'bitconcatenate' 'm_7' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 308 [1/1] (0.00ns)   --->   "%data_0_addr_8 = getelementptr [16 x i8]* %data_0, i64 0, i64 8" [sha256_impl.c:252]   --->   Operation 308 'getelementptr' 'data_0_addr_8' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 309 [2/2] (2.32ns)   --->   "%data_0_load_8 = load i8* %data_0_addr_8, align 1" [sha256_impl.c:252]   --->   Operation 309 'load' 'data_0_load_8' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_5 : Operation 310 [1/1] (0.00ns)   --->   "%data_1_addr_8 = getelementptr [16 x i8]* %data_1, i64 0, i64 8" [sha256_impl.c:252]   --->   Operation 310 'getelementptr' 'data_1_addr_8' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 311 [2/2] (2.32ns)   --->   "%data_1_load_8 = load i8* %data_1_addr_8, align 1" [sha256_impl.c:252]   --->   Operation 311 'load' 'data_1_load_8' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_5 : Operation 312 [1/1] (0.00ns)   --->   "%data_2_addr_8 = getelementptr [16 x i8]* %data_2, i64 0, i64 8" [sha256_impl.c:252]   --->   Operation 312 'getelementptr' 'data_2_addr_8' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 313 [2/2] (2.32ns)   --->   "%data_2_load_8 = load i8* %data_2_addr_8, align 1" [sha256_impl.c:252]   --->   Operation 313 'load' 'data_2_load_8' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_5 : Operation 314 [1/1] (0.00ns)   --->   "%data_3_addr_8 = getelementptr [16 x i8]* %data_3, i64 0, i64 8" [sha256_impl.c:252]   --->   Operation 314 'getelementptr' 'data_3_addr_8' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 315 [2/2] (2.32ns)   --->   "%data_3_load_8 = load i8* %data_3_addr_8, align 1" [sha256_impl.c:252]   --->   Operation 315 'load' 'data_3_load_8' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_5 : Operation 316 [1/1] (0.00ns)   --->   "%data_0_addr_9 = getelementptr [16 x i8]* %data_0, i64 0, i64 9" [sha256_impl.c:252]   --->   Operation 316 'getelementptr' 'data_0_addr_9' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 317 [2/2] (2.32ns)   --->   "%data_0_load_9 = load i8* %data_0_addr_9, align 1" [sha256_impl.c:252]   --->   Operation 317 'load' 'data_0_load_9' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_5 : Operation 318 [1/1] (0.00ns)   --->   "%data_1_addr_9 = getelementptr [16 x i8]* %data_1, i64 0, i64 9" [sha256_impl.c:252]   --->   Operation 318 'getelementptr' 'data_1_addr_9' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 319 [2/2] (2.32ns)   --->   "%data_1_load_9 = load i8* %data_1_addr_9, align 1" [sha256_impl.c:252]   --->   Operation 319 'load' 'data_1_load_9' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_5 : Operation 320 [1/1] (0.00ns)   --->   "%data_2_addr_9 = getelementptr [16 x i8]* %data_2, i64 0, i64 9" [sha256_impl.c:252]   --->   Operation 320 'getelementptr' 'data_2_addr_9' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 321 [2/2] (2.32ns)   --->   "%data_2_load_9 = load i8* %data_2_addr_9, align 1" [sha256_impl.c:252]   --->   Operation 321 'load' 'data_2_load_9' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_5 : Operation 322 [1/1] (0.00ns)   --->   "%data_3_addr_9 = getelementptr [16 x i8]* %data_3, i64 0, i64 9" [sha256_impl.c:252]   --->   Operation 322 'getelementptr' 'data_3_addr_9' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 323 [2/2] (2.32ns)   --->   "%data_3_load_9 = load i8* %data_3_addr_9, align 1" [sha256_impl.c:252]   --->   Operation 323 'load' 'data_3_load_9' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_5 : Operation 324 [1/1] (3.75ns)   --->   "%tmp_1_5 = call fastcc i32 @SIG0(i32 %m_6)" [sha256_impl.c:256]   --->   Operation 324 'call' 'tmp_1_5' <Predicate = true> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_5 : Operation 325 [1/1] (3.75ns)   --->   "%tmp_1_6 = call fastcc i32 @SIG0(i32 %m_7)" [sha256_impl.c:256]   --->   Operation 325 'call' 'tmp_1_6' <Predicate = true> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_5 : Operation 326 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln273_4 = add i32 %tmp_3_1, %ctx_state_6_read_1" [sha256_impl.c:273]   --->   Operation 326 'add' 'add_ln273_4' <Predicate = (trunc_ln269)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_5 : Operation 327 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln273_5 = add i32 %m_1, 1899447441" [sha256_impl.c:273]   --->   Operation 327 'add' 'add_ln273_5' <Predicate = (trunc_ln269)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_5 : Operation 328 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%add_ln273_6 = add i32 %add_ln273_5, %tmp_2_1" [sha256_impl.c:273]   --->   Operation 328 'add' 'add_ln273_6' <Predicate = (trunc_ln269)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_5 : Operation 329 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%add_ln273_7 = add i32 %add_ln273_6, %add_ln273_4" [sha256_impl.c:273]   --->   Operation 329 'add' 'add_ln273_7' <Predicate = (trunc_ln269)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>

State 6 <SV = 5> <Delay = 7.83>
ST_6 : Operation 330 [1/2] (2.32ns)   --->   "%data_0_load_8 = load i8* %data_0_addr_8, align 1" [sha256_impl.c:252]   --->   Operation 330 'load' 'data_0_load_8' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_6 : Operation 331 [1/2] (2.32ns)   --->   "%data_1_load_8 = load i8* %data_1_addr_8, align 1" [sha256_impl.c:252]   --->   Operation 331 'load' 'data_1_load_8' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_6 : Operation 332 [1/2] (2.32ns)   --->   "%data_2_load_8 = load i8* %data_2_addr_8, align 1" [sha256_impl.c:252]   --->   Operation 332 'load' 'data_2_load_8' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_6 : Operation 333 [1/2] (2.32ns)   --->   "%data_3_load_8 = load i8* %data_3_addr_8, align 1" [sha256_impl.c:252]   --->   Operation 333 'load' 'data_3_load_8' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_6 : Operation 334 [1/1] (0.00ns)   --->   "%m_8 = call i32 @_ssdm_op_BitConcatenate.i32.i8.i8.i8.i8(i8 %data_0_load_8, i8 %data_1_load_8, i8 %data_2_load_8, i8 %data_3_load_8)" [sha256_impl.c:252]   --->   Operation 334 'bitconcatenate' 'm_8' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 335 [1/2] (2.32ns)   --->   "%data_0_load_9 = load i8* %data_0_addr_9, align 1" [sha256_impl.c:252]   --->   Operation 335 'load' 'data_0_load_9' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_6 : Operation 336 [1/2] (2.32ns)   --->   "%data_1_load_9 = load i8* %data_1_addr_9, align 1" [sha256_impl.c:252]   --->   Operation 336 'load' 'data_1_load_9' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_6 : Operation 337 [1/2] (2.32ns)   --->   "%data_2_load_9 = load i8* %data_2_addr_9, align 1" [sha256_impl.c:252]   --->   Operation 337 'load' 'data_2_load_9' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_6 : Operation 338 [1/2] (2.32ns)   --->   "%data_3_load_9 = load i8* %data_3_addr_9, align 1" [sha256_impl.c:252]   --->   Operation 338 'load' 'data_3_load_9' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_6 : Operation 339 [1/1] (0.00ns)   --->   "%m_9 = call i32 @_ssdm_op_BitConcatenate.i32.i8.i8.i8.i8(i8 %data_0_load_9, i8 %data_1_load_9, i8 %data_2_load_9, i8 %data_3_load_9)" [sha256_impl.c:252]   --->   Operation 339 'bitconcatenate' 'm_9' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 340 [1/1] (0.00ns)   --->   "%data_0_addr_10 = getelementptr [16 x i8]* %data_0, i64 0, i64 10" [sha256_impl.c:252]   --->   Operation 340 'getelementptr' 'data_0_addr_10' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 341 [2/2] (2.32ns)   --->   "%data_0_load_10 = load i8* %data_0_addr_10, align 1" [sha256_impl.c:252]   --->   Operation 341 'load' 'data_0_load_10' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_6 : Operation 342 [1/1] (0.00ns)   --->   "%data_1_addr_10 = getelementptr [16 x i8]* %data_1, i64 0, i64 10" [sha256_impl.c:252]   --->   Operation 342 'getelementptr' 'data_1_addr_10' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 343 [2/2] (2.32ns)   --->   "%data_1_load_10 = load i8* %data_1_addr_10, align 1" [sha256_impl.c:252]   --->   Operation 343 'load' 'data_1_load_10' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_6 : Operation 344 [1/1] (0.00ns)   --->   "%data_2_addr_10 = getelementptr [16 x i8]* %data_2, i64 0, i64 10" [sha256_impl.c:252]   --->   Operation 344 'getelementptr' 'data_2_addr_10' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 345 [2/2] (2.32ns)   --->   "%data_2_load_10 = load i8* %data_2_addr_10, align 1" [sha256_impl.c:252]   --->   Operation 345 'load' 'data_2_load_10' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_6 : Operation 346 [1/1] (0.00ns)   --->   "%data_3_addr_10 = getelementptr [16 x i8]* %data_3, i64 0, i64 10" [sha256_impl.c:252]   --->   Operation 346 'getelementptr' 'data_3_addr_10' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 347 [2/2] (2.32ns)   --->   "%data_3_load_10 = load i8* %data_3_addr_10, align 1" [sha256_impl.c:252]   --->   Operation 347 'load' 'data_3_load_10' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_6 : Operation 348 [1/1] (0.00ns)   --->   "%data_0_addr_11 = getelementptr [16 x i8]* %data_0, i64 0, i64 11" [sha256_impl.c:252]   --->   Operation 348 'getelementptr' 'data_0_addr_11' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 349 [2/2] (2.32ns)   --->   "%data_0_load_11 = load i8* %data_0_addr_11, align 1" [sha256_impl.c:252]   --->   Operation 349 'load' 'data_0_load_11' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_6 : Operation 350 [1/1] (0.00ns)   --->   "%data_1_addr_11 = getelementptr [16 x i8]* %data_1, i64 0, i64 11" [sha256_impl.c:252]   --->   Operation 350 'getelementptr' 'data_1_addr_11' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 351 [2/2] (2.32ns)   --->   "%data_1_load_11 = load i8* %data_1_addr_11, align 1" [sha256_impl.c:252]   --->   Operation 351 'load' 'data_1_load_11' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_6 : Operation 352 [1/1] (0.00ns)   --->   "%data_2_addr_11 = getelementptr [16 x i8]* %data_2, i64 0, i64 11" [sha256_impl.c:252]   --->   Operation 352 'getelementptr' 'data_2_addr_11' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 353 [2/2] (2.32ns)   --->   "%data_2_load_11 = load i8* %data_2_addr_11, align 1" [sha256_impl.c:252]   --->   Operation 353 'load' 'data_2_load_11' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_6 : Operation 354 [1/1] (0.00ns)   --->   "%data_3_addr_11 = getelementptr [16 x i8]* %data_3, i64 0, i64 11" [sha256_impl.c:252]   --->   Operation 354 'getelementptr' 'data_3_addr_11' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 355 [2/2] (2.32ns)   --->   "%data_3_load_11 = load i8* %data_3_addr_11, align 1" [sha256_impl.c:252]   --->   Operation 355 'load' 'data_3_load_11' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_6 : Operation 356 [1/1] (3.75ns)   --->   "%tmp_1_7 = call fastcc i32 @SIG0(i32 %m_8)" [sha256_impl.c:256]   --->   Operation 356 'call' 'tmp_1_7' <Predicate = true> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_6 : Operation 357 [1/1] (3.75ns)   --->   "%tmp_1_8 = call fastcc i32 @SIG0(i32 %m_9)" [sha256_impl.c:256]   --->   Operation 357 'call' 'tmp_1_8' <Predicate = true> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_6 : Operation 358 [1/1] (2.55ns)   --->   "%add_ln279_1 = add i32 %add_ln273_7, %ctx_state_2_read_1" [sha256_impl.c:279]   --->   Operation 358 'add' 'add_ln279_1' <Predicate = (trunc_ln269)> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 359 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln283_65 = add i32 %add_ln273_7, %tmp_5_1" [sha256_impl.c:283]   --->   Operation 359 'add' 'add_ln283_65' <Predicate = (trunc_ln269)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_6 : Operation 360 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%add_ln283_1 = add i32 %add_ln283_65, %tmp_4_1" [sha256_impl.c:283]   --->   Operation 360 'add' 'add_ln283_1' <Predicate = (trunc_ln269)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_6 : Operation 361 [1/1] (1.76ns)   --->   "br label %2" [sha256_impl.c:285]   --->   Operation 361 'br' <Predicate = (trunc_ln269)> <Delay = 1.76>
ST_6 : Operation 362 [1/1] (0.00ns)   --->   "%c_1_1 = phi i32 [ %b_1_0, %3 ], [ 0, %0 ]" [sha256_impl.c:246]   --->   Operation 362 'phi' 'c_1_1' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 363 [1/1] (0.00ns)   --->   "%b_1_1 = phi i32 [ %a_1_0, %3 ], [ 0, %0 ]" [sha256_impl.c:283]   --->   Operation 363 'phi' 'b_1_1' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 364 [1/1] (0.00ns)   --->   "%a_1_1 = phi i32 [ %add_ln283_1, %3 ], [ 0, %0 ]" [sha256_impl.c:283]   --->   Operation 364 'phi' 'a_1_1' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 365 [1/1] (1.76ns)   --->   "br i1 %trunc_ln269, label %5, label %4" [sha256_impl.c:271]   --->   Operation 365 'br' <Predicate = true> <Delay = 1.76>
ST_6 : Operation 366 [1/1] (1.69ns)   --->   "%tmp_5_2 = call fastcc i32 @MAJ(i32 %a_1_1, i32 %b_1_1, i32 %c_1_1)" [sha256_impl.c:275]   --->   Operation 366 'call' 'tmp_5_2' <Predicate = (trunc_ln269)> <Delay = 1.69> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 7 <SV = 6> <Delay = 8.12>
ST_7 : Operation 367 [1/2] (2.32ns)   --->   "%data_0_load_10 = load i8* %data_0_addr_10, align 1" [sha256_impl.c:252]   --->   Operation 367 'load' 'data_0_load_10' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_7 : Operation 368 [1/2] (2.32ns)   --->   "%data_1_load_10 = load i8* %data_1_addr_10, align 1" [sha256_impl.c:252]   --->   Operation 368 'load' 'data_1_load_10' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_7 : Operation 369 [1/2] (2.32ns)   --->   "%data_2_load_10 = load i8* %data_2_addr_10, align 1" [sha256_impl.c:252]   --->   Operation 369 'load' 'data_2_load_10' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_7 : Operation 370 [1/2] (2.32ns)   --->   "%data_3_load_10 = load i8* %data_3_addr_10, align 1" [sha256_impl.c:252]   --->   Operation 370 'load' 'data_3_load_10' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_7 : Operation 371 [1/1] (0.00ns)   --->   "%m_10 = call i32 @_ssdm_op_BitConcatenate.i32.i8.i8.i8.i8(i8 %data_0_load_10, i8 %data_1_load_10, i8 %data_2_load_10, i8 %data_3_load_10)" [sha256_impl.c:252]   --->   Operation 371 'bitconcatenate' 'm_10' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 372 [1/2] (2.32ns)   --->   "%data_0_load_11 = load i8* %data_0_addr_11, align 1" [sha256_impl.c:252]   --->   Operation 372 'load' 'data_0_load_11' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_7 : Operation 373 [1/2] (2.32ns)   --->   "%data_1_load_11 = load i8* %data_1_addr_11, align 1" [sha256_impl.c:252]   --->   Operation 373 'load' 'data_1_load_11' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_7 : Operation 374 [1/2] (2.32ns)   --->   "%data_2_load_11 = load i8* %data_2_addr_11, align 1" [sha256_impl.c:252]   --->   Operation 374 'load' 'data_2_load_11' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_7 : Operation 375 [1/2] (2.32ns)   --->   "%data_3_load_11 = load i8* %data_3_addr_11, align 1" [sha256_impl.c:252]   --->   Operation 375 'load' 'data_3_load_11' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_7 : Operation 376 [1/1] (0.00ns)   --->   "%m_11 = call i32 @_ssdm_op_BitConcatenate.i32.i8.i8.i8.i8(i8 %data_0_load_11, i8 %data_1_load_11, i8 %data_2_load_11, i8 %data_3_load_11)" [sha256_impl.c:252]   --->   Operation 376 'bitconcatenate' 'm_11' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 377 [1/1] (0.00ns)   --->   "%data_0_addr_12 = getelementptr [16 x i8]* %data_0, i64 0, i64 12" [sha256_impl.c:252]   --->   Operation 377 'getelementptr' 'data_0_addr_12' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 378 [2/2] (2.32ns)   --->   "%data_0_load_12 = load i8* %data_0_addr_12, align 1" [sha256_impl.c:252]   --->   Operation 378 'load' 'data_0_load_12' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_7 : Operation 379 [1/1] (0.00ns)   --->   "%data_1_addr_12 = getelementptr [16 x i8]* %data_1, i64 0, i64 12" [sha256_impl.c:252]   --->   Operation 379 'getelementptr' 'data_1_addr_12' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 380 [2/2] (2.32ns)   --->   "%data_1_load_12 = load i8* %data_1_addr_12, align 1" [sha256_impl.c:252]   --->   Operation 380 'load' 'data_1_load_12' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_7 : Operation 381 [1/1] (0.00ns)   --->   "%data_2_addr_12 = getelementptr [16 x i8]* %data_2, i64 0, i64 12" [sha256_impl.c:252]   --->   Operation 381 'getelementptr' 'data_2_addr_12' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 382 [2/2] (2.32ns)   --->   "%data_2_load_12 = load i8* %data_2_addr_12, align 1" [sha256_impl.c:252]   --->   Operation 382 'load' 'data_2_load_12' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_7 : Operation 383 [1/1] (0.00ns)   --->   "%data_3_addr_12 = getelementptr [16 x i8]* %data_3, i64 0, i64 12" [sha256_impl.c:252]   --->   Operation 383 'getelementptr' 'data_3_addr_12' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 384 [2/2] (2.32ns)   --->   "%data_3_load_12 = load i8* %data_3_addr_12, align 1" [sha256_impl.c:252]   --->   Operation 384 'load' 'data_3_load_12' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_7 : Operation 385 [1/1] (0.00ns)   --->   "%data_0_addr_13 = getelementptr [16 x i8]* %data_0, i64 0, i64 13" [sha256_impl.c:252]   --->   Operation 385 'getelementptr' 'data_0_addr_13' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 386 [2/2] (2.32ns)   --->   "%data_0_load_13 = load i8* %data_0_addr_13, align 1" [sha256_impl.c:252]   --->   Operation 386 'load' 'data_0_load_13' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_7 : Operation 387 [1/1] (0.00ns)   --->   "%data_1_addr_13 = getelementptr [16 x i8]* %data_1, i64 0, i64 13" [sha256_impl.c:252]   --->   Operation 387 'getelementptr' 'data_1_addr_13' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 388 [2/2] (2.32ns)   --->   "%data_1_load_13 = load i8* %data_1_addr_13, align 1" [sha256_impl.c:252]   --->   Operation 388 'load' 'data_1_load_13' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_7 : Operation 389 [1/1] (0.00ns)   --->   "%data_2_addr_13 = getelementptr [16 x i8]* %data_2, i64 0, i64 13" [sha256_impl.c:252]   --->   Operation 389 'getelementptr' 'data_2_addr_13' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 390 [2/2] (2.32ns)   --->   "%data_2_load_13 = load i8* %data_2_addr_13, align 1" [sha256_impl.c:252]   --->   Operation 390 'load' 'data_2_load_13' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_7 : Operation 391 [1/1] (0.00ns)   --->   "%data_3_addr_13 = getelementptr [16 x i8]* %data_3, i64 0, i64 13" [sha256_impl.c:252]   --->   Operation 391 'getelementptr' 'data_3_addr_13' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 392 [2/2] (2.32ns)   --->   "%data_3_load_13 = load i8* %data_3_addr_13, align 1" [sha256_impl.c:252]   --->   Operation 392 'load' 'data_3_load_13' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_7 : Operation 393 [1/1] (3.75ns)   --->   "%tmp_1_9 = call fastcc i32 @SIG0(i32 %m_10)" [sha256_impl.c:256]   --->   Operation 393 'call' 'tmp_1_9' <Predicate = true> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_7 : Operation 394 [1/1] (3.75ns)   --->   "%tmp_1_s = call fastcc i32 @SIG0(i32 %m_11)" [sha256_impl.c:256]   --->   Operation 394 'call' 'tmp_1_s' <Predicate = true> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_7 : Operation 395 [1/1] (0.00ns)   --->   "%f_1_1 = phi i32 [ %e_1_0, %3 ], [ %ctx_state_2_read_1, %0 ]" [sha256_impl.c:279]   --->   Operation 395 'phi' 'f_1_1' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 396 [1/1] (0.00ns)   --->   "%e_1_1 = phi i32 [ %add_ln279_1, %3 ], [ %ctx_state_2_read_1, %0 ]" [sha256_impl.c:279]   --->   Operation 396 'phi' 'e_1_1' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 397 [1/1] (3.75ns)   --->   "%tmp_2_2 = call fastcc i32 @EP1(i32 %e_1_1)" [sha256_impl.c:273]   --->   Operation 397 'call' 'tmp_2_2' <Predicate = (trunc_ln269)> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_7 : Operation 398 [1/1] (2.97ns)   --->   "%tmp_3_2 = call fastcc i32 @CH(i32 %e_1_1, i32 %f_1_1, i32 %f_1_0)" [sha256_impl.c:273]   --->   Operation 398 'call' 'tmp_3_2' <Predicate = (trunc_ln269)> <Delay = 2.97> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_7 : Operation 399 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln273_9 = add i32 %tmp_2_2, %m_2" [sha256_impl.c:273]   --->   Operation 399 'add' 'add_ln273_9' <Predicate = (trunc_ln269)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_7 : Operation 400 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%add_ln273_10 = add i32 %add_ln273_9, %ctx_state_5_read_1" [sha256_impl.c:273]   --->   Operation 400 'add' 'add_ln273_10' <Predicate = (trunc_ln269)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_7 : Operation 401 [1/1] (3.75ns)   --->   "%tmp_4_2 = call fastcc i32 @EP0(i32 %a_1_1)" [sha256_impl.c:275]   --->   Operation 401 'call' 'tmp_4_2' <Predicate = (trunc_ln269)> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 8 <SV = 7> <Delay = 8.74>
ST_8 : Operation 402 [1/2] (2.32ns)   --->   "%data_0_load_12 = load i8* %data_0_addr_12, align 1" [sha256_impl.c:252]   --->   Operation 402 'load' 'data_0_load_12' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_8 : Operation 403 [1/2] (2.32ns)   --->   "%data_1_load_12 = load i8* %data_1_addr_12, align 1" [sha256_impl.c:252]   --->   Operation 403 'load' 'data_1_load_12' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_8 : Operation 404 [1/2] (2.32ns)   --->   "%data_2_load_12 = load i8* %data_2_addr_12, align 1" [sha256_impl.c:252]   --->   Operation 404 'load' 'data_2_load_12' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_8 : Operation 405 [1/2] (2.32ns)   --->   "%data_3_load_12 = load i8* %data_3_addr_12, align 1" [sha256_impl.c:252]   --->   Operation 405 'load' 'data_3_load_12' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_8 : Operation 406 [1/1] (0.00ns)   --->   "%m_12 = call i32 @_ssdm_op_BitConcatenate.i32.i8.i8.i8.i8(i8 %data_0_load_12, i8 %data_1_load_12, i8 %data_2_load_12, i8 %data_3_load_12)" [sha256_impl.c:252]   --->   Operation 406 'bitconcatenate' 'm_12' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 407 [1/2] (2.32ns)   --->   "%data_0_load_13 = load i8* %data_0_addr_13, align 1" [sha256_impl.c:252]   --->   Operation 407 'load' 'data_0_load_13' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_8 : Operation 408 [1/2] (2.32ns)   --->   "%data_1_load_13 = load i8* %data_1_addr_13, align 1" [sha256_impl.c:252]   --->   Operation 408 'load' 'data_1_load_13' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_8 : Operation 409 [1/2] (2.32ns)   --->   "%data_2_load_13 = load i8* %data_2_addr_13, align 1" [sha256_impl.c:252]   --->   Operation 409 'load' 'data_2_load_13' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_8 : Operation 410 [1/2] (2.32ns)   --->   "%data_3_load_13 = load i8* %data_3_addr_13, align 1" [sha256_impl.c:252]   --->   Operation 410 'load' 'data_3_load_13' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_8 : Operation 411 [1/1] (0.00ns)   --->   "%m_13 = call i32 @_ssdm_op_BitConcatenate.i32.i8.i8.i8.i8(i8 %data_0_load_13, i8 %data_1_load_13, i8 %data_2_load_13, i8 %data_3_load_13)" [sha256_impl.c:252]   --->   Operation 411 'bitconcatenate' 'm_13' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 412 [1/1] (0.00ns)   --->   "%data_0_addr_14 = getelementptr [16 x i8]* %data_0, i64 0, i64 14" [sha256_impl.c:252]   --->   Operation 412 'getelementptr' 'data_0_addr_14' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 413 [2/2] (2.32ns)   --->   "%data_0_load_14 = load i8* %data_0_addr_14, align 1" [sha256_impl.c:252]   --->   Operation 413 'load' 'data_0_load_14' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_8 : Operation 414 [1/1] (0.00ns)   --->   "%data_1_addr_14 = getelementptr [16 x i8]* %data_1, i64 0, i64 14" [sha256_impl.c:252]   --->   Operation 414 'getelementptr' 'data_1_addr_14' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 415 [2/2] (2.32ns)   --->   "%data_1_load_14 = load i8* %data_1_addr_14, align 1" [sha256_impl.c:252]   --->   Operation 415 'load' 'data_1_load_14' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_8 : Operation 416 [1/1] (0.00ns)   --->   "%data_2_addr_14 = getelementptr [16 x i8]* %data_2, i64 0, i64 14" [sha256_impl.c:252]   --->   Operation 416 'getelementptr' 'data_2_addr_14' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 417 [2/2] (2.32ns)   --->   "%data_2_load_14 = load i8* %data_2_addr_14, align 1" [sha256_impl.c:252]   --->   Operation 417 'load' 'data_2_load_14' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_8 : Operation 418 [1/1] (0.00ns)   --->   "%data_3_addr_14 = getelementptr [16 x i8]* %data_3, i64 0, i64 14" [sha256_impl.c:252]   --->   Operation 418 'getelementptr' 'data_3_addr_14' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 419 [2/2] (2.32ns)   --->   "%data_3_load_14 = load i8* %data_3_addr_14, align 1" [sha256_impl.c:252]   --->   Operation 419 'load' 'data_3_load_14' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_8 : Operation 420 [1/1] (0.00ns)   --->   "%data_0_addr_15 = getelementptr [16 x i8]* %data_0, i64 0, i64 15" [sha256_impl.c:252]   --->   Operation 420 'getelementptr' 'data_0_addr_15' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 421 [2/2] (2.32ns)   --->   "%data_0_load_15 = load i8* %data_0_addr_15, align 1" [sha256_impl.c:252]   --->   Operation 421 'load' 'data_0_load_15' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_8 : Operation 422 [1/1] (0.00ns)   --->   "%data_1_addr_15 = getelementptr [16 x i8]* %data_1, i64 0, i64 15" [sha256_impl.c:252]   --->   Operation 422 'getelementptr' 'data_1_addr_15' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 423 [2/2] (2.32ns)   --->   "%data_1_load_15 = load i8* %data_1_addr_15, align 1" [sha256_impl.c:252]   --->   Operation 423 'load' 'data_1_load_15' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_8 : Operation 424 [1/1] (0.00ns)   --->   "%data_2_addr_15 = getelementptr [16 x i8]* %data_2, i64 0, i64 15" [sha256_impl.c:252]   --->   Operation 424 'getelementptr' 'data_2_addr_15' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 425 [2/2] (2.32ns)   --->   "%data_2_load_15 = load i8* %data_2_addr_15, align 1" [sha256_impl.c:252]   --->   Operation 425 'load' 'data_2_load_15' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_8 : Operation 426 [1/1] (0.00ns)   --->   "%data_3_addr_15 = getelementptr [16 x i8]* %data_3, i64 0, i64 15" [sha256_impl.c:252]   --->   Operation 426 'getelementptr' 'data_3_addr_15' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 427 [2/2] (2.32ns)   --->   "%data_3_load_15 = load i8* %data_3_addr_15, align 1" [sha256_impl.c:252]   --->   Operation 427 'load' 'data_3_load_15' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_8 : Operation 428 [1/1] (3.75ns)   --->   "%tmp_1_10 = call fastcc i32 @SIG0(i32 %m_12)" [sha256_impl.c:256]   --->   Operation 428 'call' 'tmp_1_10' <Predicate = true> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_8 : Operation 429 [1/1] (3.75ns)   --->   "%tmp_1_11 = call fastcc i32 @SIG0(i32 %m_13)" [sha256_impl.c:256]   --->   Operation 429 'call' 'tmp_1_11' <Predicate = true> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_8 : Operation 430 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln273_8 = add i32 %tmp_3_2, -1245643825" [sha256_impl.c:273]   --->   Operation 430 'add' 'add_ln273_8' <Predicate = (trunc_ln269)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_8 : Operation 431 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%add_ln273_11 = add i32 %add_ln273_10, %add_ln273_8" [sha256_impl.c:273]   --->   Operation 431 'add' 'add_ln273_11' <Predicate = (trunc_ln269)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_8 : Operation 432 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln283_66 = add i32 %add_ln273_11, %tmp_5_2" [sha256_impl.c:283]   --->   Operation 432 'add' 'add_ln283_66' <Predicate = (trunc_ln269)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_8 : Operation 433 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%add_ln283_2 = add i32 %add_ln283_66, %tmp_4_2" [sha256_impl.c:283]   --->   Operation 433 'add' 'add_ln283_2' <Predicate = (trunc_ln269)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>

State 9 <SV = 8> <Delay = 8.62>
ST_9 : Operation 434 [1/2] (2.32ns)   --->   "%data_0_load_14 = load i8* %data_0_addr_14, align 1" [sha256_impl.c:252]   --->   Operation 434 'load' 'data_0_load_14' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_9 : Operation 435 [1/2] (2.32ns)   --->   "%data_1_load_14 = load i8* %data_1_addr_14, align 1" [sha256_impl.c:252]   --->   Operation 435 'load' 'data_1_load_14' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_9 : Operation 436 [1/2] (2.32ns)   --->   "%data_2_load_14 = load i8* %data_2_addr_14, align 1" [sha256_impl.c:252]   --->   Operation 436 'load' 'data_2_load_14' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_9 : Operation 437 [1/2] (2.32ns)   --->   "%data_3_load_14 = load i8* %data_3_addr_14, align 1" [sha256_impl.c:252]   --->   Operation 437 'load' 'data_3_load_14' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_9 : Operation 438 [1/1] (0.00ns)   --->   "%m_14 = call i32 @_ssdm_op_BitConcatenate.i32.i8.i8.i8.i8(i8 %data_0_load_14, i8 %data_1_load_14, i8 %data_2_load_14, i8 %data_3_load_14)" [sha256_impl.c:252]   --->   Operation 438 'bitconcatenate' 'm_14' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 439 [1/2] (2.32ns)   --->   "%data_0_load_15 = load i8* %data_0_addr_15, align 1" [sha256_impl.c:252]   --->   Operation 439 'load' 'data_0_load_15' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_9 : Operation 440 [1/2] (2.32ns)   --->   "%data_1_load_15 = load i8* %data_1_addr_15, align 1" [sha256_impl.c:252]   --->   Operation 440 'load' 'data_1_load_15' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_9 : Operation 441 [1/2] (2.32ns)   --->   "%data_2_load_15 = load i8* %data_2_addr_15, align 1" [sha256_impl.c:252]   --->   Operation 441 'load' 'data_2_load_15' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_9 : Operation 442 [1/2] (2.32ns)   --->   "%data_3_load_15 = load i8* %data_3_addr_15, align 1" [sha256_impl.c:252]   --->   Operation 442 'load' 'data_3_load_15' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_9 : Operation 443 [1/1] (0.00ns)   --->   "%m_15 = call i32 @_ssdm_op_BitConcatenate.i32.i8.i8.i8.i8(i8 %data_0_load_15, i8 %data_1_load_15, i8 %data_2_load_15, i8 %data_3_load_15)" [sha256_impl.c:252]   --->   Operation 443 'bitconcatenate' 'm_15' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 444 [1/1] (3.75ns)   --->   "%tmp1 = call fastcc i32 @SIG1(i32 %m_14)" [sha256_impl.c:256]   --->   Operation 444 'call' 'tmp1' <Predicate = true> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_9 : Operation 445 [1/1] (2.55ns)   --->   "%add_ln256 = add i32 %tmp_1, %tmp1" [sha256_impl.c:256]   --->   Operation 445 'add' 'add_ln256' <Predicate = true> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 446 [1/1] (3.75ns)   --->   "%tmp_s = call fastcc i32 @SIG1(i32 %m_15)" [sha256_impl.c:256]   --->   Operation 446 'call' 'tmp_s' <Predicate = true> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_9 : Operation 447 [1/1] (2.55ns)   --->   "%add_ln256_3 = add i32 %tmp_1_1, %tmp_s" [sha256_impl.c:256]   --->   Operation 447 'add' 'add_ln256_3' <Predicate = true> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 448 [1/1] (3.75ns)   --->   "%tmp_1_12 = call fastcc i32 @SIG0(i32 %m_14)" [sha256_impl.c:256]   --->   Operation 448 'call' 'tmp_1_12' <Predicate = true> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_9 : Operation 449 [1/1] (3.75ns)   --->   "%tmp_1_13 = call fastcc i32 @SIG0(i32 %m_15)" [sha256_impl.c:256]   --->   Operation 449 'call' 'tmp_1_13' <Predicate = true> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_9 : Operation 450 [1/1] (2.55ns)   --->   "%add_ln279_2 = add i32 %add_ln273_11, %c_1_0" [sha256_impl.c:279]   --->   Operation 450 'add' 'add_ln279_2' <Predicate = (trunc_ln269)> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 451 [1/1] (1.76ns)   --->   "br label %4" [sha256_impl.c:285]   --->   Operation 451 'br' <Predicate = (trunc_ln269)> <Delay = 1.76>
ST_9 : Operation 452 [1/1] (0.00ns)   --->   "%f_1_2 = phi i32 [ %e_1_1, %5 ], [ %c_1_0, %2 ]" [sha256_impl.c:279]   --->   Operation 452 'phi' 'f_1_2' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 453 [1/1] (0.00ns)   --->   "%e_1_2 = phi i32 [ %add_ln279_2, %5 ], [ %c_1_0, %2 ]" [sha256_impl.c:279]   --->   Operation 453 'phi' 'e_1_2' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 454 [1/1] (0.00ns)   --->   "%c_1_2 = phi i32 [ %b_1_1, %5 ], [ 0, %2 ]" [sha256_impl.c:283]   --->   Operation 454 'phi' 'c_1_2' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 455 [1/1] (0.00ns)   --->   "%b_1_2 = phi i32 [ %a_1_1, %5 ], [ 0, %2 ]" [sha256_impl.c:283]   --->   Operation 455 'phi' 'b_1_2' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 456 [1/1] (0.00ns)   --->   "%a_1_2 = phi i32 [ %add_ln283_2, %5 ], [ 0, %2 ]" [sha256_impl.c:283]   --->   Operation 456 'phi' 'a_1_2' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 457 [1/1] (1.76ns)   --->   "br i1 %trunc_ln269, label %7, label %6" [sha256_impl.c:271]   --->   Operation 457 'br' <Predicate = true> <Delay = 1.76>
ST_9 : Operation 458 [1/1] (3.75ns)   --->   "%tmp_2_3 = call fastcc i32 @EP1(i32 %e_1_2)" [sha256_impl.c:273]   --->   Operation 458 'call' 'tmp_2_3' <Predicate = (trunc_ln269)> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_9 : Operation 459 [1/1] (2.97ns)   --->   "%tmp_3_3 = call fastcc i32 @CH(i32 %e_1_2, i32 %f_1_2, i32 %f_1_1)" [sha256_impl.c:273]   --->   Operation 459 'call' 'tmp_3_3' <Predicate = (trunc_ln269)> <Delay = 2.97> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_9 : Operation 460 [1/1] (3.75ns)   --->   "%tmp_4_3 = call fastcc i32 @EP0(i32 %a_1_2)" [sha256_impl.c:275]   --->   Operation 460 'call' 'tmp_4_3' <Predicate = (trunc_ln269)> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_9 : Operation 461 [1/1] (1.69ns)   --->   "%tmp_5_3 = call fastcc i32 @MAJ(i32 %a_1_2, i32 %b_1_2, i32 %c_1_2)" [sha256_impl.c:275]   --->   Operation 461 'call' 'tmp_5_3' <Predicate = (trunc_ln269)> <Delay = 1.69> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 10 <SV = 9> <Delay = 8.74>
ST_10 : Operation 462 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln256_1 = add i32 %m_0, %m_9" [sha256_impl.c:256]   --->   Operation 462 'add' 'add_ln256_1' <Predicate = true> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_10 : Operation 463 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%m_16 = add i32 %add_ln256, %add_ln256_1" [sha256_impl.c:256]   --->   Operation 463 'add' 'm_16' <Predicate = true> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_10 : Operation 464 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln256_4 = add i32 %m_1, %m_10" [sha256_impl.c:256]   --->   Operation 464 'add' 'add_ln256_4' <Predicate = true> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_10 : Operation 465 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%m_17 = add i32 %add_ln256_3, %add_ln256_4" [sha256_impl.c:256]   --->   Operation 465 'add' 'm_17' <Predicate = true> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_10 : Operation 466 [1/1] (3.75ns)   --->   "%tmp_2 = call fastcc i32 @SIG1(i32 %m_16)" [sha256_impl.c:256]   --->   Operation 466 'call' 'tmp_2' <Predicate = true> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_10 : Operation 467 [1/1] (3.75ns)   --->   "%tmp_3 = call fastcc i32 @SIG1(i32 %m_17)" [sha256_impl.c:256]   --->   Operation 467 'call' 'tmp_3' <Predicate = true> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_10 : Operation 468 [1/1] (3.75ns)   --->   "%tmp_1_14 = call fastcc i32 @SIG0(i32 %m_16)" [sha256_impl.c:256]   --->   Operation 468 'call' 'tmp_1_14' <Predicate = true> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_10 : Operation 469 [1/1] (3.75ns)   --->   "%tmp_1_15 = call fastcc i32 @SIG0(i32 %m_17)" [sha256_impl.c:256]   --->   Operation 469 'call' 'tmp_1_15' <Predicate = true> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_10 : Operation 470 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln273_12 = add i32 %tmp_3_3, %f_1_0" [sha256_impl.c:273]   --->   Operation 470 'add' 'add_ln273_12' <Predicate = (trunc_ln269)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_10 : Operation 471 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln273_13 = add i32 %m_3, -373957723" [sha256_impl.c:273]   --->   Operation 471 'add' 'add_ln273_13' <Predicate = (trunc_ln269)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_10 : Operation 472 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%add_ln273_14 = add i32 %add_ln273_13, %tmp_2_3" [sha256_impl.c:273]   --->   Operation 472 'add' 'add_ln273_14' <Predicate = (trunc_ln269)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_10 : Operation 473 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%add_ln273_15 = add i32 %add_ln273_14, %add_ln273_12" [sha256_impl.c:273]   --->   Operation 473 'add' 'add_ln273_15' <Predicate = (trunc_ln269)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>

State 11 <SV = 10> <Delay = 7.83>
ST_11 : Operation 474 [1/1] (2.55ns)   --->   "%add_ln256_6 = add i32 %tmp_1_2, %tmp_2" [sha256_impl.c:256]   --->   Operation 474 'add' 'add_ln256_6' <Predicate = true> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 475 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln256_7 = add i32 %m_2, %m_11" [sha256_impl.c:256]   --->   Operation 475 'add' 'add_ln256_7' <Predicate = true> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_11 : Operation 476 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%m_18 = add i32 %add_ln256_6, %add_ln256_7" [sha256_impl.c:256]   --->   Operation 476 'add' 'm_18' <Predicate = true> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_11 : Operation 477 [1/1] (2.55ns)   --->   "%add_ln256_9 = add i32 %tmp_1_3, %tmp_3" [sha256_impl.c:256]   --->   Operation 477 'add' 'add_ln256_9' <Predicate = true> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 478 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln256_10 = add i32 %m_3, %m_12" [sha256_impl.c:256]   --->   Operation 478 'add' 'add_ln256_10' <Predicate = true> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_11 : Operation 479 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%m_19 = add i32 %add_ln256_9, %add_ln256_10" [sha256_impl.c:256]   --->   Operation 479 'add' 'm_19' <Predicate = true> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_11 : Operation 480 [1/1] (2.55ns)   --->   "%add_ln279_3 = add i32 %add_ln273_15, %c_1_1" [sha256_impl.c:279]   --->   Operation 480 'add' 'add_ln279_3' <Predicate = (trunc_ln269)> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 481 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln283_67 = add i32 %add_ln273_15, %tmp_5_3" [sha256_impl.c:283]   --->   Operation 481 'add' 'add_ln283_67' <Predicate = (trunc_ln269)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_11 : Operation 482 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%add_ln283_3 = add i32 %add_ln283_67, %tmp_4_3" [sha256_impl.c:283]   --->   Operation 482 'add' 'add_ln283_3' <Predicate = (trunc_ln269)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_11 : Operation 483 [1/1] (1.76ns)   --->   "br label %6" [sha256_impl.c:285]   --->   Operation 483 'br' <Predicate = (trunc_ln269)> <Delay = 1.76>
ST_11 : Operation 484 [1/1] (0.00ns)   --->   "%c_1_3 = phi i32 [ %b_1_2, %7 ], [ 0, %4 ]" [sha256_impl.c:283]   --->   Operation 484 'phi' 'c_1_3' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 485 [1/1] (0.00ns)   --->   "%b_1_3 = phi i32 [ %a_1_2, %7 ], [ 0, %4 ]" [sha256_impl.c:283]   --->   Operation 485 'phi' 'b_1_3' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 486 [1/1] (0.00ns)   --->   "%a_1_3 = phi i32 [ %add_ln283_3, %7 ], [ 0, %4 ]" [sha256_impl.c:283]   --->   Operation 486 'phi' 'a_1_3' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 487 [1/1] (1.76ns)   --->   "br i1 %trunc_ln269, label %9, label %8" [sha256_impl.c:271]   --->   Operation 487 'br' <Predicate = true> <Delay = 1.76>
ST_11 : Operation 488 [1/1] (1.69ns)   --->   "%tmp_5_4 = call fastcc i32 @MAJ(i32 %a_1_3, i32 %b_1_3, i32 %c_1_3)" [sha256_impl.c:275]   --->   Operation 488 'call' 'tmp_5_4' <Predicate = (trunc_ln269)> <Delay = 1.69> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 12 <SV = 11> <Delay = 8.12>
ST_12 : Operation 489 [1/1] (3.75ns)   --->   "%tmp_4 = call fastcc i32 @SIG1(i32 %m_18)" [sha256_impl.c:256]   --->   Operation 489 'call' 'tmp_4' <Predicate = true> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_12 : Operation 490 [1/1] (2.55ns)   --->   "%add_ln256_12 = add i32 %tmp_1_4, %tmp_4" [sha256_impl.c:256]   --->   Operation 490 'add' 'add_ln256_12' <Predicate = true> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 491 [1/1] (3.75ns)   --->   "%tmp_5 = call fastcc i32 @SIG1(i32 %m_19)" [sha256_impl.c:256]   --->   Operation 491 'call' 'tmp_5' <Predicate = true> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_12 : Operation 492 [1/1] (2.55ns)   --->   "%add_ln256_15 = add i32 %tmp_1_5, %tmp_5" [sha256_impl.c:256]   --->   Operation 492 'add' 'add_ln256_15' <Predicate = true> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 493 [1/1] (3.75ns)   --->   "%tmp_1_16 = call fastcc i32 @SIG0(i32 %m_18)" [sha256_impl.c:256]   --->   Operation 493 'call' 'tmp_1_16' <Predicate = true> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_12 : Operation 494 [1/1] (3.75ns)   --->   "%tmp_1_17 = call fastcc i32 @SIG0(i32 %m_19)" [sha256_impl.c:256]   --->   Operation 494 'call' 'tmp_1_17' <Predicate = true> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_12 : Operation 495 [1/1] (0.00ns)   --->   "%f_1_3 = phi i32 [ %e_1_2, %7 ], [ %c_1_1, %4 ]" [sha256_impl.c:279]   --->   Operation 495 'phi' 'f_1_3' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 496 [1/1] (0.00ns)   --->   "%e_1_3 = phi i32 [ %add_ln279_3, %7 ], [ %c_1_1, %4 ]" [sha256_impl.c:279]   --->   Operation 496 'phi' 'e_1_3' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 497 [1/1] (3.75ns)   --->   "%tmp_2_4 = call fastcc i32 @EP1(i32 %e_1_3)" [sha256_impl.c:273]   --->   Operation 497 'call' 'tmp_2_4' <Predicate = (trunc_ln269)> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_12 : Operation 498 [1/1] (2.97ns)   --->   "%tmp_3_4 = call fastcc i32 @CH(i32 %e_1_3, i32 %f_1_3, i32 %f_1_2)" [sha256_impl.c:273]   --->   Operation 498 'call' 'tmp_3_4' <Predicate = (trunc_ln269)> <Delay = 2.97> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_12 : Operation 499 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln273_17 = add i32 %m_4, 961987163" [sha256_impl.c:273]   --->   Operation 499 'add' 'add_ln273_17' <Predicate = (trunc_ln269)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_12 : Operation 500 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%add_ln273_18 = add i32 %add_ln273_17, %tmp_2_4" [sha256_impl.c:273]   --->   Operation 500 'add' 'add_ln273_18' <Predicate = (trunc_ln269)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_12 : Operation 501 [1/1] (3.75ns)   --->   "%tmp_4_4 = call fastcc i32 @EP0(i32 %a_1_3)" [sha256_impl.c:275]   --->   Operation 501 'call' 'tmp_4_4' <Predicate = (trunc_ln269)> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 13 <SV = 12> <Delay = 8.74>
ST_13 : Operation 502 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln256_13 = add i32 %m_4, %m_13" [sha256_impl.c:256]   --->   Operation 502 'add' 'add_ln256_13' <Predicate = true> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_13 : Operation 503 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%m_20 = add i32 %add_ln256_12, %add_ln256_13" [sha256_impl.c:256]   --->   Operation 503 'add' 'm_20' <Predicate = true> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_13 : Operation 504 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln256_16 = add i32 %m_5, %m_14" [sha256_impl.c:256]   --->   Operation 504 'add' 'add_ln256_16' <Predicate = true> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_13 : Operation 505 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%m_21 = add i32 %add_ln256_15, %add_ln256_16" [sha256_impl.c:256]   --->   Operation 505 'add' 'm_21' <Predicate = true> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_13 : Operation 506 [1/1] (3.75ns)   --->   "%tmp_6 = call fastcc i32 @SIG1(i32 %m_20)" [sha256_impl.c:256]   --->   Operation 506 'call' 'tmp_6' <Predicate = true> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_13 : Operation 507 [1/1] (3.75ns)   --->   "%tmp_7 = call fastcc i32 @SIG1(i32 %m_21)" [sha256_impl.c:256]   --->   Operation 507 'call' 'tmp_7' <Predicate = true> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_13 : Operation 508 [1/1] (3.75ns)   --->   "%tmp_1_18 = call fastcc i32 @SIG0(i32 %m_20)" [sha256_impl.c:256]   --->   Operation 508 'call' 'tmp_1_18' <Predicate = true> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_13 : Operation 509 [1/1] (3.75ns)   --->   "%tmp_1_19 = call fastcc i32 @SIG0(i32 %m_21)" [sha256_impl.c:256]   --->   Operation 509 'call' 'tmp_1_19' <Predicate = true> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_13 : Operation 510 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln273_16 = add i32 %tmp_3_4, %f_1_1" [sha256_impl.c:273]   --->   Operation 510 'add' 'add_ln273_16' <Predicate = (trunc_ln269)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_13 : Operation 511 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%add_ln273_19 = add i32 %add_ln273_18, %add_ln273_16" [sha256_impl.c:273]   --->   Operation 511 'add' 'add_ln273_19' <Predicate = (trunc_ln269)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_13 : Operation 512 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln283_68 = add i32 %add_ln273_19, %tmp_5_4" [sha256_impl.c:283]   --->   Operation 512 'add' 'add_ln283_68' <Predicate = (trunc_ln269)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_13 : Operation 513 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%add_ln283_4 = add i32 %add_ln283_68, %tmp_4_4" [sha256_impl.c:283]   --->   Operation 513 'add' 'add_ln283_4' <Predicate = (trunc_ln269)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>

State 14 <SV = 13> <Delay = 8.07>
ST_14 : Operation 514 [1/1] (2.55ns)   --->   "%add_ln256_18 = add i32 %tmp_1_6, %tmp_6" [sha256_impl.c:256]   --->   Operation 514 'add' 'add_ln256_18' <Predicate = true> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 515 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln256_19 = add i32 %m_6, %m_15" [sha256_impl.c:256]   --->   Operation 515 'add' 'add_ln256_19' <Predicate = true> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_14 : Operation 516 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%m_22 = add i32 %add_ln256_18, %add_ln256_19" [sha256_impl.c:256]   --->   Operation 516 'add' 'm_22' <Predicate = true> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_14 : Operation 517 [1/1] (2.55ns)   --->   "%add_ln256_21 = add i32 %tmp_1_7, %tmp_7" [sha256_impl.c:256]   --->   Operation 517 'add' 'add_ln256_21' <Predicate = true> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 518 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln256_22 = add i32 %m_7, %m_16" [sha256_impl.c:256]   --->   Operation 518 'add' 'add_ln256_22' <Predicate = true> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_14 : Operation 519 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%m_23 = add i32 %add_ln256_21, %add_ln256_22" [sha256_impl.c:256]   --->   Operation 519 'add' 'm_23' <Predicate = true> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_14 : Operation 520 [1/1] (2.55ns)   --->   "%add_ln279_4 = add i32 %add_ln273_19, %c_1_2" [sha256_impl.c:279]   --->   Operation 520 'add' 'add_ln279_4' <Predicate = (trunc_ln269)> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 521 [1/1] (1.76ns)   --->   "br label %8" [sha256_impl.c:285]   --->   Operation 521 'br' <Predicate = (trunc_ln269)> <Delay = 1.76>
ST_14 : Operation 522 [1/1] (0.00ns)   --->   "%f_1_4 = phi i32 [ %e_1_3, %9 ], [ %c_1_2, %6 ]" [sha256_impl.c:279]   --->   Operation 522 'phi' 'f_1_4' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 523 [1/1] (0.00ns)   --->   "%e_1_4 = phi i32 [ %add_ln279_4, %9 ], [ %c_1_2, %6 ]" [sha256_impl.c:279]   --->   Operation 523 'phi' 'e_1_4' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 524 [1/1] (0.00ns)   --->   "%c_1_4 = phi i32 [ %b_1_3, %9 ], [ 0, %6 ]" [sha256_impl.c:283]   --->   Operation 524 'phi' 'c_1_4' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 525 [1/1] (0.00ns)   --->   "%b_1_4 = phi i32 [ %a_1_3, %9 ], [ 0, %6 ]" [sha256_impl.c:283]   --->   Operation 525 'phi' 'b_1_4' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 526 [1/1] (0.00ns)   --->   "%a_1_4 = phi i32 [ %add_ln283_4, %9 ], [ 0, %6 ]" [sha256_impl.c:283]   --->   Operation 526 'phi' 'a_1_4' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 527 [1/1] (1.76ns)   --->   "br i1 %trunc_ln269, label %11, label %10" [sha256_impl.c:271]   --->   Operation 527 'br' <Predicate = true> <Delay = 1.76>
ST_14 : Operation 528 [1/1] (3.75ns)   --->   "%tmp_2_5 = call fastcc i32 @EP1(i32 %e_1_4)" [sha256_impl.c:273]   --->   Operation 528 'call' 'tmp_2_5' <Predicate = (trunc_ln269)> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_14 : Operation 529 [1/1] (2.97ns)   --->   "%tmp_3_5 = call fastcc i32 @CH(i32 %e_1_4, i32 %f_1_4, i32 %f_1_3)" [sha256_impl.c:273]   --->   Operation 529 'call' 'tmp_3_5' <Predicate = (trunc_ln269)> <Delay = 2.97> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_14 : Operation 530 [1/1] (3.75ns)   --->   "%tmp_4_5 = call fastcc i32 @EP0(i32 %a_1_4)" [sha256_impl.c:275]   --->   Operation 530 'call' 'tmp_4_5' <Predicate = (trunc_ln269)> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_14 : Operation 531 [1/1] (1.69ns)   --->   "%tmp_5_5 = call fastcc i32 @MAJ(i32 %a_1_4, i32 %b_1_4, i32 %c_1_4)" [sha256_impl.c:275]   --->   Operation 531 'call' 'tmp_5_5' <Predicate = (trunc_ln269)> <Delay = 1.69> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 15 <SV = 14> <Delay = 8.74>
ST_15 : Operation 532 [1/1] (3.75ns)   --->   "%tmp_8 = call fastcc i32 @SIG1(i32 %m_22)" [sha256_impl.c:256]   --->   Operation 532 'call' 'tmp_8' <Predicate = true> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_15 : Operation 533 [1/1] (2.55ns)   --->   "%add_ln256_24 = add i32 %tmp_1_8, %tmp_8" [sha256_impl.c:256]   --->   Operation 533 'add' 'add_ln256_24' <Predicate = true> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 534 [1/1] (3.75ns)   --->   "%tmp_9 = call fastcc i32 @SIG1(i32 %m_23)" [sha256_impl.c:256]   --->   Operation 534 'call' 'tmp_9' <Predicate = true> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_15 : Operation 535 [1/1] (2.55ns)   --->   "%add_ln256_27 = add i32 %tmp_1_9, %tmp_9" [sha256_impl.c:256]   --->   Operation 535 'add' 'add_ln256_27' <Predicate = true> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 536 [1/1] (3.75ns)   --->   "%tmp_1_20 = call fastcc i32 @SIG0(i32 %m_22)" [sha256_impl.c:256]   --->   Operation 536 'call' 'tmp_1_20' <Predicate = true> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_15 : Operation 537 [1/1] (3.75ns)   --->   "%tmp_1_21 = call fastcc i32 @SIG0(i32 %m_23)" [sha256_impl.c:256]   --->   Operation 537 'call' 'tmp_1_21' <Predicate = true> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_15 : Operation 538 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln273_20 = add i32 %tmp_3_5, %f_1_2" [sha256_impl.c:273]   --->   Operation 538 'add' 'add_ln273_20' <Predicate = (trunc_ln269)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_15 : Operation 539 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln273_21 = add i32 %m_5, 1508970993" [sha256_impl.c:273]   --->   Operation 539 'add' 'add_ln273_21' <Predicate = (trunc_ln269)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_15 : Operation 540 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%add_ln273_22 = add i32 %add_ln273_21, %tmp_2_5" [sha256_impl.c:273]   --->   Operation 540 'add' 'add_ln273_22' <Predicate = (trunc_ln269)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_15 : Operation 541 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%add_ln273_23 = add i32 %add_ln273_22, %add_ln273_20" [sha256_impl.c:273]   --->   Operation 541 'add' 'add_ln273_23' <Predicate = (trunc_ln269)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>

State 16 <SV = 15> <Delay = 8.12>
ST_16 : Operation 542 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln256_25 = add i32 %m_8, %m_17" [sha256_impl.c:256]   --->   Operation 542 'add' 'add_ln256_25' <Predicate = true> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_16 : Operation 543 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%m_24 = add i32 %add_ln256_24, %add_ln256_25" [sha256_impl.c:256]   --->   Operation 543 'add' 'm_24' <Predicate = true> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_16 : Operation 544 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln256_28 = add i32 %m_9, %m_18" [sha256_impl.c:256]   --->   Operation 544 'add' 'add_ln256_28' <Predicate = true> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_16 : Operation 545 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%m_25 = add i32 %add_ln256_27, %add_ln256_28" [sha256_impl.c:256]   --->   Operation 545 'add' 'm_25' <Predicate = true> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_16 : Operation 546 [1/1] (3.75ns)   --->   "%tmp_10 = call fastcc i32 @SIG1(i32 %m_24)" [sha256_impl.c:256]   --->   Operation 546 'call' 'tmp_10' <Predicate = true> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_16 : Operation 547 [1/1] (3.75ns)   --->   "%tmp_11 = call fastcc i32 @SIG1(i32 %m_25)" [sha256_impl.c:256]   --->   Operation 547 'call' 'tmp_11' <Predicate = true> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_16 : Operation 548 [1/1] (3.75ns)   --->   "%tmp_1_22 = call fastcc i32 @SIG0(i32 %m_24)" [sha256_impl.c:256]   --->   Operation 548 'call' 'tmp_1_22' <Predicate = true> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_16 : Operation 549 [1/1] (3.75ns)   --->   "%tmp_1_23 = call fastcc i32 @SIG0(i32 %m_25)" [sha256_impl.c:256]   --->   Operation 549 'call' 'tmp_1_23' <Predicate = true> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_16 : Operation 550 [1/1] (2.55ns)   --->   "%add_ln279_5 = add i32 %add_ln273_23, %c_1_3" [sha256_impl.c:279]   --->   Operation 550 'add' 'add_ln279_5' <Predicate = (trunc_ln269)> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_16 : Operation 551 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln283_69 = add i32 %add_ln273_23, %tmp_5_5" [sha256_impl.c:283]   --->   Operation 551 'add' 'add_ln283_69' <Predicate = (trunc_ln269)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_16 : Operation 552 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%add_ln283_5 = add i32 %add_ln283_69, %tmp_4_5" [sha256_impl.c:283]   --->   Operation 552 'add' 'add_ln283_5' <Predicate = (trunc_ln269)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_16 : Operation 553 [1/1] (1.76ns)   --->   "br label %10" [sha256_impl.c:285]   --->   Operation 553 'br' <Predicate = (trunc_ln269)> <Delay = 1.76>
ST_16 : Operation 554 [1/1] (0.00ns)   --->   "%c_1_5 = phi i32 [ %b_1_4, %11 ], [ 0, %8 ]" [sha256_impl.c:283]   --->   Operation 554 'phi' 'c_1_5' <Predicate = true> <Delay = 0.00>
ST_16 : Operation 555 [1/1] (0.00ns)   --->   "%b_1_5 = phi i32 [ %a_1_4, %11 ], [ 0, %8 ]" [sha256_impl.c:283]   --->   Operation 555 'phi' 'b_1_5' <Predicate = true> <Delay = 0.00>
ST_16 : Operation 556 [1/1] (0.00ns)   --->   "%a_1_5 = phi i32 [ %add_ln283_5, %11 ], [ 0, %8 ]" [sha256_impl.c:283]   --->   Operation 556 'phi' 'a_1_5' <Predicate = true> <Delay = 0.00>
ST_16 : Operation 557 [1/1] (1.76ns)   --->   "br i1 %trunc_ln269, label %13, label %12" [sha256_impl.c:271]   --->   Operation 557 'br' <Predicate = true> <Delay = 1.76>
ST_16 : Operation 558 [1/1] (1.69ns)   --->   "%tmp_5_6 = call fastcc i32 @MAJ(i32 %a_1_5, i32 %b_1_5, i32 %c_1_5)" [sha256_impl.c:275]   --->   Operation 558 'call' 'tmp_5_6' <Predicate = (trunc_ln269)> <Delay = 1.69> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 17 <SV = 16> <Delay = 8.12>
ST_17 : Operation 559 [1/1] (2.55ns)   --->   "%add_ln256_30 = add i32 %tmp_1_s, %tmp_10" [sha256_impl.c:256]   --->   Operation 559 'add' 'add_ln256_30' <Predicate = true> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_17 : Operation 560 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln256_31 = add i32 %m_10, %m_19" [sha256_impl.c:256]   --->   Operation 560 'add' 'add_ln256_31' <Predicate = true> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_17 : Operation 561 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%m_26 = add i32 %add_ln256_30, %add_ln256_31" [sha256_impl.c:256]   --->   Operation 561 'add' 'm_26' <Predicate = true> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_17 : Operation 562 [1/1] (2.55ns)   --->   "%add_ln256_33 = add i32 %tmp_1_10, %tmp_11" [sha256_impl.c:256]   --->   Operation 562 'add' 'add_ln256_33' <Predicate = true> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_17 : Operation 563 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln256_34 = add i32 %m_11, %m_20" [sha256_impl.c:256]   --->   Operation 563 'add' 'add_ln256_34' <Predicate = true> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_17 : Operation 564 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%m_27 = add i32 %add_ln256_33, %add_ln256_34" [sha256_impl.c:256]   --->   Operation 564 'add' 'm_27' <Predicate = true> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_17 : Operation 565 [1/1] (0.00ns)   --->   "%f_1_5 = phi i32 [ %e_1_4, %11 ], [ %c_1_3, %8 ]" [sha256_impl.c:279]   --->   Operation 565 'phi' 'f_1_5' <Predicate = true> <Delay = 0.00>
ST_17 : Operation 566 [1/1] (0.00ns)   --->   "%e_1_5 = phi i32 [ %add_ln279_5, %11 ], [ %c_1_3, %8 ]" [sha256_impl.c:279]   --->   Operation 566 'phi' 'e_1_5' <Predicate = true> <Delay = 0.00>
ST_17 : Operation 567 [1/1] (3.75ns)   --->   "%tmp_2_6 = call fastcc i32 @EP1(i32 %e_1_5)" [sha256_impl.c:273]   --->   Operation 567 'call' 'tmp_2_6' <Predicate = (trunc_ln269)> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_17 : Operation 568 [1/1] (2.97ns)   --->   "%tmp_3_6 = call fastcc i32 @CH(i32 %e_1_5, i32 %f_1_5, i32 %f_1_4)" [sha256_impl.c:273]   --->   Operation 568 'call' 'tmp_3_6' <Predicate = (trunc_ln269)> <Delay = 2.97> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_17 : Operation 569 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln273_25 = add i32 %tmp_2_6, %m_6" [sha256_impl.c:273]   --->   Operation 569 'add' 'add_ln273_25' <Predicate = (trunc_ln269)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_17 : Operation 570 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%add_ln273_26 = add i32 %add_ln273_25, %f_1_3" [sha256_impl.c:273]   --->   Operation 570 'add' 'add_ln273_26' <Predicate = (trunc_ln269)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_17 : Operation 571 [1/1] (3.75ns)   --->   "%tmp_4_6 = call fastcc i32 @EP0(i32 %a_1_5)" [sha256_impl.c:275]   --->   Operation 571 'call' 'tmp_4_6' <Predicate = (trunc_ln269)> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 18 <SV = 17> <Delay = 8.74>
ST_18 : Operation 572 [1/1] (3.75ns)   --->   "%tmp_12 = call fastcc i32 @SIG1(i32 %m_26)" [sha256_impl.c:256]   --->   Operation 572 'call' 'tmp_12' <Predicate = true> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_18 : Operation 573 [1/1] (2.55ns)   --->   "%add_ln256_36 = add i32 %tmp_1_11, %tmp_12" [sha256_impl.c:256]   --->   Operation 573 'add' 'add_ln256_36' <Predicate = true> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 574 [1/1] (3.75ns)   --->   "%tmp_13 = call fastcc i32 @SIG1(i32 %m_27)" [sha256_impl.c:256]   --->   Operation 574 'call' 'tmp_13' <Predicate = true> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_18 : Operation 575 [1/1] (2.55ns)   --->   "%add_ln256_39 = add i32 %tmp_1_12, %tmp_13" [sha256_impl.c:256]   --->   Operation 575 'add' 'add_ln256_39' <Predicate = true> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 576 [1/1] (3.75ns)   --->   "%tmp_1_24 = call fastcc i32 @SIG0(i32 %m_26)" [sha256_impl.c:256]   --->   Operation 576 'call' 'tmp_1_24' <Predicate = true> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_18 : Operation 577 [1/1] (3.75ns)   --->   "%tmp_1_25 = call fastcc i32 @SIG0(i32 %m_27)" [sha256_impl.c:256]   --->   Operation 577 'call' 'tmp_1_25' <Predicate = true> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_18 : Operation 578 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln273_24 = add i32 %tmp_3_6, -1841331548" [sha256_impl.c:273]   --->   Operation 578 'add' 'add_ln273_24' <Predicate = (trunc_ln269)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_18 : Operation 579 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%add_ln273_27 = add i32 %add_ln273_26, %add_ln273_24" [sha256_impl.c:273]   --->   Operation 579 'add' 'add_ln273_27' <Predicate = (trunc_ln269)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_18 : Operation 580 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln283_70 = add i32 %add_ln273_27, %tmp_5_6" [sha256_impl.c:283]   --->   Operation 580 'add' 'add_ln283_70' <Predicate = (trunc_ln269)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_18 : Operation 581 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%add_ln283_6 = add i32 %add_ln283_70, %tmp_4_6" [sha256_impl.c:283]   --->   Operation 581 'add' 'add_ln283_6' <Predicate = (trunc_ln269)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>

State 19 <SV = 18> <Delay = 8.12>
ST_19 : Operation 582 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln256_37 = add i32 %m_12, %m_21" [sha256_impl.c:256]   --->   Operation 582 'add' 'add_ln256_37' <Predicate = true> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_19 : Operation 583 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%m_28 = add i32 %add_ln256_36, %add_ln256_37" [sha256_impl.c:256]   --->   Operation 583 'add' 'm_28' <Predicate = true> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_19 : Operation 584 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln256_40 = add i32 %m_13, %m_22" [sha256_impl.c:256]   --->   Operation 584 'add' 'add_ln256_40' <Predicate = true> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_19 : Operation 585 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%m_29 = add i32 %add_ln256_39, %add_ln256_40" [sha256_impl.c:256]   --->   Operation 585 'add' 'm_29' <Predicate = true> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_19 : Operation 586 [1/1] (3.75ns)   --->   "%tmp_14 = call fastcc i32 @SIG1(i32 %m_28)" [sha256_impl.c:256]   --->   Operation 586 'call' 'tmp_14' <Predicate = true> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_19 : Operation 587 [1/1] (3.75ns)   --->   "%tmp_15 = call fastcc i32 @SIG1(i32 %m_29)" [sha256_impl.c:256]   --->   Operation 587 'call' 'tmp_15' <Predicate = true> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_19 : Operation 588 [1/1] (3.75ns)   --->   "%tmp_1_26 = call fastcc i32 @SIG0(i32 %m_28)" [sha256_impl.c:256]   --->   Operation 588 'call' 'tmp_1_26' <Predicate = true> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_19 : Operation 589 [1/1] (3.75ns)   --->   "%tmp_1_27 = call fastcc i32 @SIG0(i32 %m_29)" [sha256_impl.c:256]   --->   Operation 589 'call' 'tmp_1_27' <Predicate = true> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_19 : Operation 590 [1/1] (2.55ns)   --->   "%add_ln279_6 = add i32 %add_ln273_27, %c_1_4" [sha256_impl.c:279]   --->   Operation 590 'add' 'add_ln279_6' <Predicate = (trunc_ln269)> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 591 [1/1] (1.76ns)   --->   "br label %12" [sha256_impl.c:285]   --->   Operation 591 'br' <Predicate = (trunc_ln269)> <Delay = 1.76>
ST_19 : Operation 592 [1/1] (0.00ns)   --->   "%f_1_6 = phi i32 [ %e_1_5, %13 ], [ %c_1_4, %10 ]" [sha256_impl.c:279]   --->   Operation 592 'phi' 'f_1_6' <Predicate = true> <Delay = 0.00>
ST_19 : Operation 593 [1/1] (0.00ns)   --->   "%e_1_6 = phi i32 [ %add_ln279_6, %13 ], [ %c_1_4, %10 ]" [sha256_impl.c:279]   --->   Operation 593 'phi' 'e_1_6' <Predicate = true> <Delay = 0.00>
ST_19 : Operation 594 [1/1] (0.00ns)   --->   "%c_1_6 = phi i32 [ %b_1_5, %13 ], [ 0, %10 ]" [sha256_impl.c:283]   --->   Operation 594 'phi' 'c_1_6' <Predicate = true> <Delay = 0.00>
ST_19 : Operation 595 [1/1] (0.00ns)   --->   "%b_1_6 = phi i32 [ %a_1_5, %13 ], [ 0, %10 ]" [sha256_impl.c:283]   --->   Operation 595 'phi' 'b_1_6' <Predicate = true> <Delay = 0.00>
ST_19 : Operation 596 [1/1] (0.00ns)   --->   "%a_1_6 = phi i32 [ %add_ln283_6, %13 ], [ 0, %10 ]" [sha256_impl.c:283]   --->   Operation 596 'phi' 'a_1_6' <Predicate = true> <Delay = 0.00>
ST_19 : Operation 597 [1/1] (1.76ns)   --->   "br i1 %trunc_ln269, label %15, label %14" [sha256_impl.c:271]   --->   Operation 597 'br' <Predicate = true> <Delay = 1.76>
ST_19 : Operation 598 [1/1] (3.75ns)   --->   "%tmp_2_7 = call fastcc i32 @EP1(i32 %e_1_6)" [sha256_impl.c:273]   --->   Operation 598 'call' 'tmp_2_7' <Predicate = (trunc_ln269)> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_19 : Operation 599 [1/1] (2.97ns)   --->   "%tmp_3_7 = call fastcc i32 @CH(i32 %e_1_6, i32 %f_1_6, i32 %f_1_5)" [sha256_impl.c:273]   --->   Operation 599 'call' 'tmp_3_7' <Predicate = (trunc_ln269)> <Delay = 2.97> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_19 : Operation 600 [1/1] (3.75ns)   --->   "%tmp_4_7 = call fastcc i32 @EP0(i32 %a_1_6)" [sha256_impl.c:275]   --->   Operation 600 'call' 'tmp_4_7' <Predicate = (trunc_ln269)> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_19 : Operation 601 [1/1] (1.69ns)   --->   "%tmp_5_7 = call fastcc i32 @MAJ(i32 %a_1_6, i32 %b_1_6, i32 %c_1_6)" [sha256_impl.c:275]   --->   Operation 601 'call' 'tmp_5_7' <Predicate = (trunc_ln269)> <Delay = 1.69> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 20 <SV = 19> <Delay = 8.74>
ST_20 : Operation 602 [1/1] (2.55ns)   --->   "%add_ln256_42 = add i32 %tmp_1_13, %tmp_14" [sha256_impl.c:256]   --->   Operation 602 'add' 'add_ln256_42' <Predicate = true> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 603 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln256_43 = add i32 %m_14, %m_23" [sha256_impl.c:256]   --->   Operation 603 'add' 'add_ln256_43' <Predicate = true> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_20 : Operation 604 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%m_30 = add i32 %add_ln256_42, %add_ln256_43" [sha256_impl.c:256]   --->   Operation 604 'add' 'm_30' <Predicate = true> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_20 : Operation 605 [1/1] (2.55ns)   --->   "%add_ln256_45 = add i32 %tmp_1_14, %tmp_15" [sha256_impl.c:256]   --->   Operation 605 'add' 'add_ln256_45' <Predicate = true> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 606 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln256_46 = add i32 %m_15, %m_24" [sha256_impl.c:256]   --->   Operation 606 'add' 'add_ln256_46' <Predicate = true> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_20 : Operation 607 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%m_31 = add i32 %add_ln256_45, %add_ln256_46" [sha256_impl.c:256]   --->   Operation 607 'add' 'm_31' <Predicate = true> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_20 : Operation 608 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln273_28 = add i32 %tmp_3_7, -1424204075" [sha256_impl.c:273]   --->   Operation 608 'add' 'add_ln273_28' <Predicate = (trunc_ln269)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_20 : Operation 609 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln273_29 = add i32 %tmp_2_7, %m_7" [sha256_impl.c:273]   --->   Operation 609 'add' 'add_ln273_29' <Predicate = (trunc_ln269)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_20 : Operation 610 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%add_ln273_30 = add i32 %add_ln273_29, %f_1_4" [sha256_impl.c:273]   --->   Operation 610 'add' 'add_ln273_30' <Predicate = (trunc_ln269)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_20 : Operation 611 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%add_ln273_31 = add i32 %add_ln273_30, %add_ln273_28" [sha256_impl.c:273]   --->   Operation 611 'add' 'add_ln273_31' <Predicate = (trunc_ln269)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>

State 21 <SV = 20> <Delay = 7.83>
ST_21 : Operation 612 [1/1] (3.75ns)   --->   "%tmp_16 = call fastcc i32 @SIG1(i32 %m_30)" [sha256_impl.c:256]   --->   Operation 612 'call' 'tmp_16' <Predicate = true> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_21 : Operation 613 [1/1] (2.55ns)   --->   "%add_ln256_48 = add i32 %tmp_1_15, %tmp_16" [sha256_impl.c:256]   --->   Operation 613 'add' 'add_ln256_48' <Predicate = true> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_21 : Operation 614 [1/1] (3.75ns)   --->   "%tmp_17 = call fastcc i32 @SIG1(i32 %m_31)" [sha256_impl.c:256]   --->   Operation 614 'call' 'tmp_17' <Predicate = true> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_21 : Operation 615 [1/1] (2.55ns)   --->   "%add_ln256_51 = add i32 %tmp_1_16, %tmp_17" [sha256_impl.c:256]   --->   Operation 615 'add' 'add_ln256_51' <Predicate = true> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_21 : Operation 616 [1/1] (3.75ns)   --->   "%tmp_1_28 = call fastcc i32 @SIG0(i32 %m_30)" [sha256_impl.c:256]   --->   Operation 616 'call' 'tmp_1_28' <Predicate = true> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_21 : Operation 617 [1/1] (3.75ns)   --->   "%tmp_1_29 = call fastcc i32 @SIG0(i32 %m_31)" [sha256_impl.c:256]   --->   Operation 617 'call' 'tmp_1_29' <Predicate = true> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_21 : Operation 618 [1/1] (2.55ns)   --->   "%add_ln279_7 = add i32 %add_ln273_31, %c_1_5" [sha256_impl.c:279]   --->   Operation 618 'add' 'add_ln279_7' <Predicate = (trunc_ln269)> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_21 : Operation 619 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln283_71 = add i32 %add_ln273_31, %tmp_5_7" [sha256_impl.c:283]   --->   Operation 619 'add' 'add_ln283_71' <Predicate = (trunc_ln269)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_21 : Operation 620 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%add_ln283_7 = add i32 %add_ln283_71, %tmp_4_7" [sha256_impl.c:283]   --->   Operation 620 'add' 'add_ln283_7' <Predicate = (trunc_ln269)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_21 : Operation 621 [1/1] (1.76ns)   --->   "br label %14" [sha256_impl.c:285]   --->   Operation 621 'br' <Predicate = (trunc_ln269)> <Delay = 1.76>
ST_21 : Operation 622 [1/1] (0.00ns)   --->   "%c_1_7 = phi i32 [ %b_1_6, %15 ], [ 0, %12 ]" [sha256_impl.c:283]   --->   Operation 622 'phi' 'c_1_7' <Predicate = true> <Delay = 0.00>
ST_21 : Operation 623 [1/1] (0.00ns)   --->   "%b_1_7 = phi i32 [ %a_1_6, %15 ], [ 0, %12 ]" [sha256_impl.c:283]   --->   Operation 623 'phi' 'b_1_7' <Predicate = true> <Delay = 0.00>
ST_21 : Operation 624 [1/1] (0.00ns)   --->   "%a_1_7 = phi i32 [ %add_ln283_7, %15 ], [ 0, %12 ]" [sha256_impl.c:283]   --->   Operation 624 'phi' 'a_1_7' <Predicate = true> <Delay = 0.00>
ST_21 : Operation 625 [1/1] (1.76ns)   --->   "br i1 %trunc_ln269, label %17, label %16" [sha256_impl.c:271]   --->   Operation 625 'br' <Predicate = true> <Delay = 1.76>
ST_21 : Operation 626 [1/1] (1.69ns)   --->   "%tmp_5_8 = call fastcc i32 @MAJ(i32 %a_1_7, i32 %b_1_7, i32 %c_1_7)" [sha256_impl.c:275]   --->   Operation 626 'call' 'tmp_5_8' <Predicate = (trunc_ln269)> <Delay = 1.69> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 22 <SV = 21> <Delay = 8.12>
ST_22 : Operation 627 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln256_49 = add i32 %m_16, %m_25" [sha256_impl.c:256]   --->   Operation 627 'add' 'add_ln256_49' <Predicate = true> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_22 : Operation 628 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%m_32 = add i32 %add_ln256_48, %add_ln256_49" [sha256_impl.c:256]   --->   Operation 628 'add' 'm_32' <Predicate = true> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_22 : Operation 629 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln256_52 = add i32 %m_17, %m_26" [sha256_impl.c:256]   --->   Operation 629 'add' 'add_ln256_52' <Predicate = true> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_22 : Operation 630 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%m_33 = add i32 %add_ln256_51, %add_ln256_52" [sha256_impl.c:256]   --->   Operation 630 'add' 'm_33' <Predicate = true> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_22 : Operation 631 [1/1] (3.75ns)   --->   "%tmp_18 = call fastcc i32 @SIG1(i32 %m_32)" [sha256_impl.c:256]   --->   Operation 631 'call' 'tmp_18' <Predicate = true> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_22 : Operation 632 [1/1] (3.75ns)   --->   "%tmp_19 = call fastcc i32 @SIG1(i32 %m_33)" [sha256_impl.c:256]   --->   Operation 632 'call' 'tmp_19' <Predicate = true> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_22 : Operation 633 [1/1] (3.75ns)   --->   "%tmp_1_30 = call fastcc i32 @SIG0(i32 %m_32)" [sha256_impl.c:256]   --->   Operation 633 'call' 'tmp_1_30' <Predicate = true> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_22 : Operation 634 [1/1] (3.75ns)   --->   "%tmp_1_31 = call fastcc i32 @SIG0(i32 %m_33)" [sha256_impl.c:256]   --->   Operation 634 'call' 'tmp_1_31' <Predicate = true> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_22 : Operation 635 [1/1] (0.00ns)   --->   "%f_1_7 = phi i32 [ %e_1_6, %15 ], [ %c_1_5, %12 ]" [sha256_impl.c:279]   --->   Operation 635 'phi' 'f_1_7' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 636 [1/1] (0.00ns)   --->   "%e_1_7 = phi i32 [ %add_ln279_7, %15 ], [ %c_1_5, %12 ]" [sha256_impl.c:279]   --->   Operation 636 'phi' 'e_1_7' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 637 [1/1] (3.75ns)   --->   "%tmp_2_8 = call fastcc i32 @EP1(i32 %e_1_7)" [sha256_impl.c:273]   --->   Operation 637 'call' 'tmp_2_8' <Predicate = (trunc_ln269)> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_22 : Operation 638 [1/1] (2.97ns)   --->   "%tmp_3_8 = call fastcc i32 @CH(i32 %e_1_7, i32 %f_1_7, i32 %f_1_6)" [sha256_impl.c:273]   --->   Operation 638 'call' 'tmp_3_8' <Predicate = (trunc_ln269)> <Delay = 2.97> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_22 : Operation 639 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln273_33 = add i32 %m_8, -670586216" [sha256_impl.c:273]   --->   Operation 639 'add' 'add_ln273_33' <Predicate = (trunc_ln269)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_22 : Operation 640 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%add_ln273_34 = add i32 %add_ln273_33, %tmp_2_8" [sha256_impl.c:273]   --->   Operation 640 'add' 'add_ln273_34' <Predicate = (trunc_ln269)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_22 : Operation 641 [1/1] (3.75ns)   --->   "%tmp_4_8 = call fastcc i32 @EP0(i32 %a_1_7)" [sha256_impl.c:275]   --->   Operation 641 'call' 'tmp_4_8' <Predicate = (trunc_ln269)> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 23 <SV = 22> <Delay = 8.74>
ST_23 : Operation 642 [1/1] (2.55ns)   --->   "%add_ln256_54 = add i32 %tmp_1_17, %tmp_18" [sha256_impl.c:256]   --->   Operation 642 'add' 'add_ln256_54' <Predicate = true> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 643 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln256_55 = add i32 %m_18, %m_27" [sha256_impl.c:256]   --->   Operation 643 'add' 'add_ln256_55' <Predicate = true> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_23 : Operation 644 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%m_34 = add i32 %add_ln256_54, %add_ln256_55" [sha256_impl.c:256]   --->   Operation 644 'add' 'm_34' <Predicate = true> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_23 : Operation 645 [1/1] (2.55ns)   --->   "%add_ln256_57 = add i32 %tmp_1_18, %tmp_19" [sha256_impl.c:256]   --->   Operation 645 'add' 'add_ln256_57' <Predicate = true> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 646 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln256_58 = add i32 %m_19, %m_28" [sha256_impl.c:256]   --->   Operation 646 'add' 'add_ln256_58' <Predicate = true> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_23 : Operation 647 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%m_35 = add i32 %add_ln256_57, %add_ln256_58" [sha256_impl.c:256]   --->   Operation 647 'add' 'm_35' <Predicate = true> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_23 : Operation 648 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln273_32 = add i32 %tmp_3_8, %f_1_5" [sha256_impl.c:273]   --->   Operation 648 'add' 'add_ln273_32' <Predicate = (trunc_ln269)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_23 : Operation 649 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%add_ln273_35 = add i32 %add_ln273_34, %add_ln273_32" [sha256_impl.c:273]   --->   Operation 649 'add' 'add_ln273_35' <Predicate = (trunc_ln269)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_23 : Operation 650 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln283_72 = add i32 %add_ln273_35, %tmp_5_8" [sha256_impl.c:283]   --->   Operation 650 'add' 'add_ln283_72' <Predicate = (trunc_ln269)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_23 : Operation 651 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%add_ln283_8 = add i32 %add_ln283_72, %tmp_4_8" [sha256_impl.c:283]   --->   Operation 651 'add' 'add_ln283_8' <Predicate = (trunc_ln269)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>

State 24 <SV = 23> <Delay = 8.07>
ST_24 : Operation 652 [1/1] (3.75ns)   --->   "%tmp_20 = call fastcc i32 @SIG1(i32 %m_34)" [sha256_impl.c:256]   --->   Operation 652 'call' 'tmp_20' <Predicate = true> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_24 : Operation 653 [1/1] (2.55ns)   --->   "%add_ln256_60 = add i32 %tmp_1_19, %tmp_20" [sha256_impl.c:256]   --->   Operation 653 'add' 'add_ln256_60' <Predicate = true> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 654 [1/1] (3.75ns)   --->   "%tmp_21 = call fastcc i32 @SIG1(i32 %m_35)" [sha256_impl.c:256]   --->   Operation 654 'call' 'tmp_21' <Predicate = true> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_24 : Operation 655 [1/1] (2.55ns)   --->   "%add_ln256_63 = add i32 %tmp_1_20, %tmp_21" [sha256_impl.c:256]   --->   Operation 655 'add' 'add_ln256_63' <Predicate = true> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 656 [1/1] (3.75ns)   --->   "%tmp_1_32 = call fastcc i32 @SIG0(i32 %m_34)" [sha256_impl.c:256]   --->   Operation 656 'call' 'tmp_1_32' <Predicate = true> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_24 : Operation 657 [1/1] (3.75ns)   --->   "%tmp_1_33 = call fastcc i32 @SIG0(i32 %m_35)" [sha256_impl.c:256]   --->   Operation 657 'call' 'tmp_1_33' <Predicate = true> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_24 : Operation 658 [1/1] (2.55ns)   --->   "%add_ln279_8 = add i32 %add_ln273_35, %c_1_6" [sha256_impl.c:279]   --->   Operation 658 'add' 'add_ln279_8' <Predicate = (trunc_ln269)> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 659 [1/1] (1.76ns)   --->   "br label %16" [sha256_impl.c:285]   --->   Operation 659 'br' <Predicate = (trunc_ln269)> <Delay = 1.76>
ST_24 : Operation 660 [1/1] (0.00ns)   --->   "%f_1_8 = phi i32 [ %e_1_7, %17 ], [ %c_1_6, %14 ]" [sha256_impl.c:279]   --->   Operation 660 'phi' 'f_1_8' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 661 [1/1] (0.00ns)   --->   "%e_1_8 = phi i32 [ %add_ln279_8, %17 ], [ %c_1_6, %14 ]" [sha256_impl.c:279]   --->   Operation 661 'phi' 'e_1_8' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 662 [1/1] (0.00ns)   --->   "%c_1_8 = phi i32 [ %b_1_7, %17 ], [ 0, %14 ]" [sha256_impl.c:283]   --->   Operation 662 'phi' 'c_1_8' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 663 [1/1] (0.00ns)   --->   "%b_1_8 = phi i32 [ %a_1_7, %17 ], [ 0, %14 ]" [sha256_impl.c:283]   --->   Operation 663 'phi' 'b_1_8' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 664 [1/1] (0.00ns)   --->   "%a_1_8 = phi i32 [ %add_ln283_8, %17 ], [ 0, %14 ]" [sha256_impl.c:283]   --->   Operation 664 'phi' 'a_1_8' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 665 [1/1] (1.76ns)   --->   "br i1 %trunc_ln269, label %19, label %18" [sha256_impl.c:271]   --->   Operation 665 'br' <Predicate = true> <Delay = 1.76>
ST_24 : Operation 666 [1/1] (3.75ns)   --->   "%tmp_2_9 = call fastcc i32 @EP1(i32 %e_1_8)" [sha256_impl.c:273]   --->   Operation 666 'call' 'tmp_2_9' <Predicate = (trunc_ln269)> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_24 : Operation 667 [1/1] (2.97ns)   --->   "%tmp_3_9 = call fastcc i32 @CH(i32 %e_1_8, i32 %f_1_8, i32 %f_1_7)" [sha256_impl.c:273]   --->   Operation 667 'call' 'tmp_3_9' <Predicate = (trunc_ln269)> <Delay = 2.97> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_24 : Operation 668 [1/1] (3.75ns)   --->   "%tmp_4_9 = call fastcc i32 @EP0(i32 %a_1_8)" [sha256_impl.c:275]   --->   Operation 668 'call' 'tmp_4_9' <Predicate = (trunc_ln269)> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_24 : Operation 669 [1/1] (1.69ns)   --->   "%tmp_5_9 = call fastcc i32 @MAJ(i32 %a_1_8, i32 %b_1_8, i32 %c_1_8)" [sha256_impl.c:275]   --->   Operation 669 'call' 'tmp_5_9' <Predicate = (trunc_ln269)> <Delay = 1.69> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 25 <SV = 24> <Delay = 8.74>
ST_25 : Operation 670 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln256_61 = add i32 %m_20, %m_29" [sha256_impl.c:256]   --->   Operation 670 'add' 'add_ln256_61' <Predicate = true> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_25 : Operation 671 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%m_36 = add i32 %add_ln256_60, %add_ln256_61" [sha256_impl.c:256]   --->   Operation 671 'add' 'm_36' <Predicate = true> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_25 : Operation 672 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln256_64 = add i32 %m_21, %m_30" [sha256_impl.c:256]   --->   Operation 672 'add' 'add_ln256_64' <Predicate = true> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_25 : Operation 673 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%m_37 = add i32 %add_ln256_63, %add_ln256_64" [sha256_impl.c:256]   --->   Operation 673 'add' 'm_37' <Predicate = true> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_25 : Operation 674 [1/1] (3.75ns)   --->   "%tmp_22 = call fastcc i32 @SIG1(i32 %m_36)" [sha256_impl.c:256]   --->   Operation 674 'call' 'tmp_22' <Predicate = true> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_25 : Operation 675 [1/1] (3.75ns)   --->   "%tmp_23 = call fastcc i32 @SIG1(i32 %m_37)" [sha256_impl.c:256]   --->   Operation 675 'call' 'tmp_23' <Predicate = true> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_25 : Operation 676 [1/1] (3.75ns)   --->   "%tmp_1_34 = call fastcc i32 @SIG0(i32 %m_36)" [sha256_impl.c:256]   --->   Operation 676 'call' 'tmp_1_34' <Predicate = true> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_25 : Operation 677 [1/1] (3.75ns)   --->   "%tmp_1_35 = call fastcc i32 @SIG0(i32 %m_37)" [sha256_impl.c:256]   --->   Operation 677 'call' 'tmp_1_35' <Predicate = true> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_25 : Operation 678 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln273_36 = add i32 %tmp_3_9, %f_1_6" [sha256_impl.c:273]   --->   Operation 678 'add' 'add_ln273_36' <Predicate = (trunc_ln269)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_25 : Operation 679 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln273_37 = add i32 %m_9, 310598401" [sha256_impl.c:273]   --->   Operation 679 'add' 'add_ln273_37' <Predicate = (trunc_ln269)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_25 : Operation 680 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%add_ln273_38 = add i32 %add_ln273_37, %tmp_2_9" [sha256_impl.c:273]   --->   Operation 680 'add' 'add_ln273_38' <Predicate = (trunc_ln269)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_25 : Operation 681 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%add_ln273_39 = add i32 %add_ln273_38, %add_ln273_36" [sha256_impl.c:273]   --->   Operation 681 'add' 'add_ln273_39' <Predicate = (trunc_ln269)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>

State 26 <SV = 25> <Delay = 7.83>
ST_26 : Operation 682 [1/1] (2.55ns)   --->   "%add_ln256_66 = add i32 %tmp_1_21, %tmp_22" [sha256_impl.c:256]   --->   Operation 682 'add' 'add_ln256_66' <Predicate = true> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 683 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln256_67 = add i32 %m_22, %m_31" [sha256_impl.c:256]   --->   Operation 683 'add' 'add_ln256_67' <Predicate = true> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_26 : Operation 684 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%m_38 = add i32 %add_ln256_66, %add_ln256_67" [sha256_impl.c:256]   --->   Operation 684 'add' 'm_38' <Predicate = true> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_26 : Operation 685 [1/1] (2.55ns)   --->   "%add_ln256_69 = add i32 %tmp_1_22, %tmp_23" [sha256_impl.c:256]   --->   Operation 685 'add' 'add_ln256_69' <Predicate = true> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 686 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln256_70 = add i32 %m_23, %m_32" [sha256_impl.c:256]   --->   Operation 686 'add' 'add_ln256_70' <Predicate = true> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_26 : Operation 687 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%m_39 = add i32 %add_ln256_69, %add_ln256_70" [sha256_impl.c:256]   --->   Operation 687 'add' 'm_39' <Predicate = true> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_26 : Operation 688 [1/1] (2.55ns)   --->   "%add_ln279_9 = add i32 %add_ln273_39, %c_1_7" [sha256_impl.c:279]   --->   Operation 688 'add' 'add_ln279_9' <Predicate = (trunc_ln269)> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 689 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln283_73 = add i32 %add_ln273_39, %tmp_5_9" [sha256_impl.c:283]   --->   Operation 689 'add' 'add_ln283_73' <Predicate = (trunc_ln269)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_26 : Operation 690 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%add_ln283_9 = add i32 %add_ln283_73, %tmp_4_9" [sha256_impl.c:283]   --->   Operation 690 'add' 'add_ln283_9' <Predicate = (trunc_ln269)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_26 : Operation 691 [1/1] (1.76ns)   --->   "br label %18" [sha256_impl.c:285]   --->   Operation 691 'br' <Predicate = (trunc_ln269)> <Delay = 1.76>
ST_26 : Operation 692 [1/1] (0.00ns)   --->   "%c_1_9 = phi i32 [ %b_1_8, %19 ], [ 0, %16 ]" [sha256_impl.c:283]   --->   Operation 692 'phi' 'c_1_9' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 693 [1/1] (0.00ns)   --->   "%b_1_9 = phi i32 [ %a_1_8, %19 ], [ 0, %16 ]" [sha256_impl.c:283]   --->   Operation 693 'phi' 'b_1_9' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 694 [1/1] (0.00ns)   --->   "%a_1_9 = phi i32 [ %add_ln283_9, %19 ], [ 0, %16 ]" [sha256_impl.c:283]   --->   Operation 694 'phi' 'a_1_9' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 695 [1/1] (1.76ns)   --->   "br i1 %trunc_ln269, label %21, label %20" [sha256_impl.c:271]   --->   Operation 695 'br' <Predicate = true> <Delay = 1.76>
ST_26 : Operation 696 [1/1] (1.69ns)   --->   "%tmp_5_s = call fastcc i32 @MAJ(i32 %a_1_9, i32 %b_1_9, i32 %c_1_9)" [sha256_impl.c:275]   --->   Operation 696 'call' 'tmp_5_s' <Predicate = (trunc_ln269)> <Delay = 1.69> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 27 <SV = 26> <Delay = 8.12>
ST_27 : Operation 697 [1/1] (3.75ns)   --->   "%tmp_24 = call fastcc i32 @SIG1(i32 %m_38)" [sha256_impl.c:256]   --->   Operation 697 'call' 'tmp_24' <Predicate = true> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_27 : Operation 698 [1/1] (2.55ns)   --->   "%add_ln256_72 = add i32 %tmp_1_23, %tmp_24" [sha256_impl.c:256]   --->   Operation 698 'add' 'add_ln256_72' <Predicate = true> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 699 [1/1] (3.75ns)   --->   "%tmp_25 = call fastcc i32 @SIG1(i32 %m_39)" [sha256_impl.c:256]   --->   Operation 699 'call' 'tmp_25' <Predicate = true> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_27 : Operation 700 [1/1] (2.55ns)   --->   "%add_ln256_75 = add i32 %tmp_1_24, %tmp_25" [sha256_impl.c:256]   --->   Operation 700 'add' 'add_ln256_75' <Predicate = true> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 701 [1/1] (3.75ns)   --->   "%tmp_1_36 = call fastcc i32 @SIG0(i32 %m_38)" [sha256_impl.c:256]   --->   Operation 701 'call' 'tmp_1_36' <Predicate = true> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_27 : Operation 702 [1/1] (3.75ns)   --->   "%tmp_1_37 = call fastcc i32 @SIG0(i32 %m_39)" [sha256_impl.c:256]   --->   Operation 702 'call' 'tmp_1_37' <Predicate = true> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_27 : Operation 703 [1/1] (0.00ns)   --->   "%f_1_9 = phi i32 [ %e_1_8, %19 ], [ %c_1_7, %16 ]" [sha256_impl.c:279]   --->   Operation 703 'phi' 'f_1_9' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 704 [1/1] (0.00ns)   --->   "%e_1_9 = phi i32 [ %add_ln279_9, %19 ], [ %c_1_7, %16 ]" [sha256_impl.c:279]   --->   Operation 704 'phi' 'e_1_9' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 705 [1/1] (3.75ns)   --->   "%tmp_2_s = call fastcc i32 @EP1(i32 %e_1_9)" [sha256_impl.c:273]   --->   Operation 705 'call' 'tmp_2_s' <Predicate = (trunc_ln269)> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_27 : Operation 706 [1/1] (2.97ns)   --->   "%tmp_3_s = call fastcc i32 @CH(i32 %e_1_9, i32 %f_1_9, i32 %f_1_8)" [sha256_impl.c:273]   --->   Operation 706 'call' 'tmp_3_s' <Predicate = (trunc_ln269)> <Delay = 2.97> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_27 : Operation 707 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln273_41 = add i32 %m_10, 607225278" [sha256_impl.c:273]   --->   Operation 707 'add' 'add_ln273_41' <Predicate = (trunc_ln269)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_27 : Operation 708 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%add_ln273_42 = add i32 %add_ln273_41, %tmp_2_s" [sha256_impl.c:273]   --->   Operation 708 'add' 'add_ln273_42' <Predicate = (trunc_ln269)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_27 : Operation 709 [1/1] (3.75ns)   --->   "%tmp_4_s = call fastcc i32 @EP0(i32 %a_1_9)" [sha256_impl.c:275]   --->   Operation 709 'call' 'tmp_4_s' <Predicate = (trunc_ln269)> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 28 <SV = 27> <Delay = 8.74>
ST_28 : Operation 710 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln256_73 = add i32 %m_24, %m_33" [sha256_impl.c:256]   --->   Operation 710 'add' 'add_ln256_73' <Predicate = true> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_28 : Operation 711 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%m_40 = add i32 %add_ln256_72, %add_ln256_73" [sha256_impl.c:256]   --->   Operation 711 'add' 'm_40' <Predicate = true> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_28 : Operation 712 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln256_76 = add i32 %m_25, %m_34" [sha256_impl.c:256]   --->   Operation 712 'add' 'add_ln256_76' <Predicate = true> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_28 : Operation 713 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%m_41 = add i32 %add_ln256_75, %add_ln256_76" [sha256_impl.c:256]   --->   Operation 713 'add' 'm_41' <Predicate = true> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_28 : Operation 714 [1/1] (3.75ns)   --->   "%tmp_26 = call fastcc i32 @SIG1(i32 %m_40)" [sha256_impl.c:256]   --->   Operation 714 'call' 'tmp_26' <Predicate = true> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_28 : Operation 715 [1/1] (3.75ns)   --->   "%tmp_27 = call fastcc i32 @SIG1(i32 %m_41)" [sha256_impl.c:256]   --->   Operation 715 'call' 'tmp_27' <Predicate = true> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_28 : Operation 716 [1/1] (3.75ns)   --->   "%tmp_1_38 = call fastcc i32 @SIG0(i32 %m_40)" [sha256_impl.c:256]   --->   Operation 716 'call' 'tmp_1_38' <Predicate = true> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_28 : Operation 717 [1/1] (3.75ns)   --->   "%tmp_1_39 = call fastcc i32 @SIG0(i32 %m_41)" [sha256_impl.c:256]   --->   Operation 717 'call' 'tmp_1_39' <Predicate = true> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_28 : Operation 718 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln273_40 = add i32 %tmp_3_s, %f_1_7" [sha256_impl.c:273]   --->   Operation 718 'add' 'add_ln273_40' <Predicate = (trunc_ln269)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_28 : Operation 719 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%add_ln273_43 = add i32 %add_ln273_42, %add_ln273_40" [sha256_impl.c:273]   --->   Operation 719 'add' 'add_ln273_43' <Predicate = (trunc_ln269)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_28 : Operation 720 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln283_74 = add i32 %add_ln273_43, %tmp_5_s" [sha256_impl.c:283]   --->   Operation 720 'add' 'add_ln283_74' <Predicate = (trunc_ln269)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_28 : Operation 721 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%add_ln283_10 = add i32 %add_ln283_74, %tmp_4_s" [sha256_impl.c:283]   --->   Operation 721 'add' 'add_ln283_10' <Predicate = (trunc_ln269)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>

State 29 <SV = 28> <Delay = 8.07>
ST_29 : Operation 722 [1/1] (2.55ns)   --->   "%add_ln256_78 = add i32 %tmp_1_25, %tmp_26" [sha256_impl.c:256]   --->   Operation 722 'add' 'add_ln256_78' <Predicate = true> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_29 : Operation 723 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln256_79 = add i32 %m_26, %m_35" [sha256_impl.c:256]   --->   Operation 723 'add' 'add_ln256_79' <Predicate = true> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_29 : Operation 724 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%m_42 = add i32 %add_ln256_78, %add_ln256_79" [sha256_impl.c:256]   --->   Operation 724 'add' 'm_42' <Predicate = true> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_29 : Operation 725 [1/1] (2.55ns)   --->   "%add_ln256_81 = add i32 %tmp_1_26, %tmp_27" [sha256_impl.c:256]   --->   Operation 725 'add' 'add_ln256_81' <Predicate = true> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_29 : Operation 726 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln256_82 = add i32 %m_27, %m_36" [sha256_impl.c:256]   --->   Operation 726 'add' 'add_ln256_82' <Predicate = true> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_29 : Operation 727 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%m_43 = add i32 %add_ln256_81, %add_ln256_82" [sha256_impl.c:256]   --->   Operation 727 'add' 'm_43' <Predicate = true> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_29 : Operation 728 [1/1] (2.55ns)   --->   "%add_ln279_10 = add i32 %add_ln273_43, %c_1_8" [sha256_impl.c:279]   --->   Operation 728 'add' 'add_ln279_10' <Predicate = (trunc_ln269)> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_29 : Operation 729 [1/1] (1.76ns)   --->   "br label %20" [sha256_impl.c:285]   --->   Operation 729 'br' <Predicate = (trunc_ln269)> <Delay = 1.76>
ST_29 : Operation 730 [1/1] (0.00ns)   --->   "%f_1_10 = phi i32 [ %e_1_9, %21 ], [ %c_1_8, %18 ]" [sha256_impl.c:279]   --->   Operation 730 'phi' 'f_1_10' <Predicate = true> <Delay = 0.00>
ST_29 : Operation 731 [1/1] (0.00ns)   --->   "%e_1_10 = phi i32 [ %add_ln279_10, %21 ], [ %c_1_8, %18 ]" [sha256_impl.c:279]   --->   Operation 731 'phi' 'e_1_10' <Predicate = true> <Delay = 0.00>
ST_29 : Operation 732 [1/1] (0.00ns)   --->   "%c_1_10 = phi i32 [ %b_1_9, %21 ], [ 0, %18 ]" [sha256_impl.c:283]   --->   Operation 732 'phi' 'c_1_10' <Predicate = true> <Delay = 0.00>
ST_29 : Operation 733 [1/1] (0.00ns)   --->   "%b_1_10 = phi i32 [ %a_1_9, %21 ], [ 0, %18 ]" [sha256_impl.c:283]   --->   Operation 733 'phi' 'b_1_10' <Predicate = true> <Delay = 0.00>
ST_29 : Operation 734 [1/1] (0.00ns)   --->   "%a_1_10 = phi i32 [ %add_ln283_10, %21 ], [ 0, %18 ]" [sha256_impl.c:283]   --->   Operation 734 'phi' 'a_1_10' <Predicate = true> <Delay = 0.00>
ST_29 : Operation 735 [1/1] (1.76ns)   --->   "br i1 %trunc_ln269, label %23, label %22" [sha256_impl.c:271]   --->   Operation 735 'br' <Predicate = true> <Delay = 1.76>
ST_29 : Operation 736 [1/1] (3.75ns)   --->   "%tmp_2_10 = call fastcc i32 @EP1(i32 %e_1_10)" [sha256_impl.c:273]   --->   Operation 736 'call' 'tmp_2_10' <Predicate = (trunc_ln269)> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_29 : Operation 737 [1/1] (2.97ns)   --->   "%tmp_3_10 = call fastcc i32 @CH(i32 %e_1_10, i32 %f_1_10, i32 %f_1_9)" [sha256_impl.c:273]   --->   Operation 737 'call' 'tmp_3_10' <Predicate = (trunc_ln269)> <Delay = 2.97> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_29 : Operation 738 [1/1] (3.75ns)   --->   "%tmp_4_10 = call fastcc i32 @EP0(i32 %a_1_10)" [sha256_impl.c:275]   --->   Operation 738 'call' 'tmp_4_10' <Predicate = (trunc_ln269)> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_29 : Operation 739 [1/1] (1.69ns)   --->   "%tmp_5_10 = call fastcc i32 @MAJ(i32 %a_1_10, i32 %b_1_10, i32 %c_1_10)" [sha256_impl.c:275]   --->   Operation 739 'call' 'tmp_5_10' <Predicate = (trunc_ln269)> <Delay = 1.69> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 30 <SV = 29> <Delay = 8.74>
ST_30 : Operation 740 [1/1] (3.75ns)   --->   "%tmp_28 = call fastcc i32 @SIG1(i32 %m_42)" [sha256_impl.c:256]   --->   Operation 740 'call' 'tmp_28' <Predicate = true> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_30 : Operation 741 [1/1] (2.55ns)   --->   "%add_ln256_84 = add i32 %tmp_1_27, %tmp_28" [sha256_impl.c:256]   --->   Operation 741 'add' 'add_ln256_84' <Predicate = true> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_30 : Operation 742 [1/1] (3.75ns)   --->   "%tmp_29 = call fastcc i32 @SIG1(i32 %m_43)" [sha256_impl.c:256]   --->   Operation 742 'call' 'tmp_29' <Predicate = true> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_30 : Operation 743 [1/1] (2.55ns)   --->   "%add_ln256_87 = add i32 %tmp_1_28, %tmp_29" [sha256_impl.c:256]   --->   Operation 743 'add' 'add_ln256_87' <Predicate = true> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_30 : Operation 744 [1/1] (3.75ns)   --->   "%tmp_1_40 = call fastcc i32 @SIG0(i32 %m_42)" [sha256_impl.c:256]   --->   Operation 744 'call' 'tmp_1_40' <Predicate = true> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_30 : Operation 745 [1/1] (3.75ns)   --->   "%tmp_1_41 = call fastcc i32 @SIG0(i32 %m_43)" [sha256_impl.c:256]   --->   Operation 745 'call' 'tmp_1_41' <Predicate = true> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_30 : Operation 746 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln273_44 = add i32 %tmp_3_10, %f_1_8" [sha256_impl.c:273]   --->   Operation 746 'add' 'add_ln273_44' <Predicate = (trunc_ln269)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_30 : Operation 747 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln273_45 = add i32 %m_11, 1426881987" [sha256_impl.c:273]   --->   Operation 747 'add' 'add_ln273_45' <Predicate = (trunc_ln269)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_30 : Operation 748 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%add_ln273_46 = add i32 %add_ln273_45, %tmp_2_10" [sha256_impl.c:273]   --->   Operation 748 'add' 'add_ln273_46' <Predicate = (trunc_ln269)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_30 : Operation 749 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%add_ln273_47 = add i32 %add_ln273_46, %add_ln273_44" [sha256_impl.c:273]   --->   Operation 749 'add' 'add_ln273_47' <Predicate = (trunc_ln269)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>

State 31 <SV = 30> <Delay = 8.12>
ST_31 : Operation 750 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln256_85 = add i32 %m_28, %m_37" [sha256_impl.c:256]   --->   Operation 750 'add' 'add_ln256_85' <Predicate = true> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_31 : Operation 751 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%m_44 = add i32 %add_ln256_84, %add_ln256_85" [sha256_impl.c:256]   --->   Operation 751 'add' 'm_44' <Predicate = true> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_31 : Operation 752 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln256_88 = add i32 %m_29, %m_38" [sha256_impl.c:256]   --->   Operation 752 'add' 'add_ln256_88' <Predicate = true> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_31 : Operation 753 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%m_45 = add i32 %add_ln256_87, %add_ln256_88" [sha256_impl.c:256]   --->   Operation 753 'add' 'm_45' <Predicate = true> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_31 : Operation 754 [1/1] (3.75ns)   --->   "%tmp_30 = call fastcc i32 @SIG1(i32 %m_44)" [sha256_impl.c:256]   --->   Operation 754 'call' 'tmp_30' <Predicate = true> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_31 : Operation 755 [1/1] (3.75ns)   --->   "%tmp_31 = call fastcc i32 @SIG1(i32 %m_45)" [sha256_impl.c:256]   --->   Operation 755 'call' 'tmp_31' <Predicate = true> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_31 : Operation 756 [1/1] (3.75ns)   --->   "%tmp_1_42 = call fastcc i32 @SIG0(i32 %m_44)" [sha256_impl.c:256]   --->   Operation 756 'call' 'tmp_1_42' <Predicate = true> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_31 : Operation 757 [1/1] (3.75ns)   --->   "%tmp_1_43 = call fastcc i32 @SIG0(i32 %m_45)" [sha256_impl.c:256]   --->   Operation 757 'call' 'tmp_1_43' <Predicate = true> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_31 : Operation 758 [1/1] (2.55ns)   --->   "%add_ln279_11 = add i32 %add_ln273_47, %c_1_9" [sha256_impl.c:279]   --->   Operation 758 'add' 'add_ln279_11' <Predicate = (trunc_ln269)> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_31 : Operation 759 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln283_75 = add i32 %add_ln273_47, %tmp_5_10" [sha256_impl.c:283]   --->   Operation 759 'add' 'add_ln283_75' <Predicate = (trunc_ln269)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_31 : Operation 760 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%add_ln283_11 = add i32 %add_ln283_75, %tmp_4_10" [sha256_impl.c:283]   --->   Operation 760 'add' 'add_ln283_11' <Predicate = (trunc_ln269)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_31 : Operation 761 [1/1] (1.76ns)   --->   "br label %22" [sha256_impl.c:285]   --->   Operation 761 'br' <Predicate = (trunc_ln269)> <Delay = 1.76>
ST_31 : Operation 762 [1/1] (0.00ns)   --->   "%c_1_11 = phi i32 [ %b_1_10, %23 ], [ 0, %20 ]" [sha256_impl.c:283]   --->   Operation 762 'phi' 'c_1_11' <Predicate = true> <Delay = 0.00>
ST_31 : Operation 763 [1/1] (0.00ns)   --->   "%b_1_11 = phi i32 [ %a_1_10, %23 ], [ 0, %20 ]" [sha256_impl.c:283]   --->   Operation 763 'phi' 'b_1_11' <Predicate = true> <Delay = 0.00>
ST_31 : Operation 764 [1/1] (0.00ns)   --->   "%a_1_11 = phi i32 [ %add_ln283_11, %23 ], [ 0, %20 ]" [sha256_impl.c:283]   --->   Operation 764 'phi' 'a_1_11' <Predicate = true> <Delay = 0.00>
ST_31 : Operation 765 [1/1] (1.76ns)   --->   "br i1 %trunc_ln269, label %25, label %24" [sha256_impl.c:271]   --->   Operation 765 'br' <Predicate = true> <Delay = 1.76>
ST_31 : Operation 766 [1/1] (1.69ns)   --->   "%tmp_5_11 = call fastcc i32 @MAJ(i32 %a_1_11, i32 %b_1_11, i32 %c_1_11)" [sha256_impl.c:275]   --->   Operation 766 'call' 'tmp_5_11' <Predicate = (trunc_ln269)> <Delay = 1.69> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 32 <SV = 31> <Delay = 8.12>
ST_32 : Operation 767 [1/1] (2.55ns)   --->   "%add_ln256_90 = add i32 %tmp_1_29, %tmp_30" [sha256_impl.c:256]   --->   Operation 767 'add' 'add_ln256_90' <Predicate = true> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_32 : Operation 768 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln256_91 = add i32 %m_30, %m_39" [sha256_impl.c:256]   --->   Operation 768 'add' 'add_ln256_91' <Predicate = true> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_32 : Operation 769 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%m_46 = add i32 %add_ln256_90, %add_ln256_91" [sha256_impl.c:256]   --->   Operation 769 'add' 'm_46' <Predicate = true> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_32 : Operation 770 [1/1] (2.55ns)   --->   "%add_ln256_93 = add i32 %tmp_1_30, %tmp_31" [sha256_impl.c:256]   --->   Operation 770 'add' 'add_ln256_93' <Predicate = true> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_32 : Operation 771 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln256_94 = add i32 %m_31, %m_40" [sha256_impl.c:256]   --->   Operation 771 'add' 'add_ln256_94' <Predicate = true> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_32 : Operation 772 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%m_47 = add i32 %add_ln256_93, %add_ln256_94" [sha256_impl.c:256]   --->   Operation 772 'add' 'm_47' <Predicate = true> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_32 : Operation 773 [1/1] (0.00ns)   --->   "%f_1_11 = phi i32 [ %e_1_10, %23 ], [ %c_1_9, %20 ]" [sha256_impl.c:279]   --->   Operation 773 'phi' 'f_1_11' <Predicate = true> <Delay = 0.00>
ST_32 : Operation 774 [1/1] (0.00ns)   --->   "%e_1_11 = phi i32 [ %add_ln279_11, %23 ], [ %c_1_9, %20 ]" [sha256_impl.c:279]   --->   Operation 774 'phi' 'e_1_11' <Predicate = true> <Delay = 0.00>
ST_32 : Operation 775 [1/1] (3.75ns)   --->   "%tmp_2_11 = call fastcc i32 @EP1(i32 %e_1_11)" [sha256_impl.c:273]   --->   Operation 775 'call' 'tmp_2_11' <Predicate = (trunc_ln269)> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_32 : Operation 776 [1/1] (2.97ns)   --->   "%tmp_3_11 = call fastcc i32 @CH(i32 %e_1_11, i32 %f_1_11, i32 %f_1_10)" [sha256_impl.c:273]   --->   Operation 776 'call' 'tmp_3_11' <Predicate = (trunc_ln269)> <Delay = 2.97> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_32 : Operation 777 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln273_49 = add i32 %m_12, 1925078388" [sha256_impl.c:273]   --->   Operation 777 'add' 'add_ln273_49' <Predicate = (trunc_ln269)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_32 : Operation 778 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%add_ln273_50 = add i32 %add_ln273_49, %tmp_2_11" [sha256_impl.c:273]   --->   Operation 778 'add' 'add_ln273_50' <Predicate = (trunc_ln269)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_32 : Operation 779 [1/1] (3.75ns)   --->   "%tmp_4_11 = call fastcc i32 @EP0(i32 %a_1_11)" [sha256_impl.c:275]   --->   Operation 779 'call' 'tmp_4_11' <Predicate = (trunc_ln269)> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 33 <SV = 32> <Delay = 8.74>
ST_33 : Operation 780 [1/1] (3.75ns)   --->   "%tmp_32 = call fastcc i32 @SIG1(i32 %m_46)" [sha256_impl.c:256]   --->   Operation 780 'call' 'tmp_32' <Predicate = true> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_33 : Operation 781 [1/1] (2.55ns)   --->   "%add_ln256_96 = add i32 %tmp_1_31, %tmp_32" [sha256_impl.c:256]   --->   Operation 781 'add' 'add_ln256_96' <Predicate = true> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_33 : Operation 782 [1/1] (3.75ns)   --->   "%tmp_33 = call fastcc i32 @SIG1(i32 %m_47)" [sha256_impl.c:256]   --->   Operation 782 'call' 'tmp_33' <Predicate = true> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_33 : Operation 783 [1/1] (2.55ns)   --->   "%add_ln256_99 = add i32 %tmp_1_32, %tmp_33" [sha256_impl.c:256]   --->   Operation 783 'add' 'add_ln256_99' <Predicate = true> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_33 : Operation 784 [1/1] (3.75ns)   --->   "%tmp_1_44 = call fastcc i32 @SIG0(i32 %m_46)" [sha256_impl.c:256]   --->   Operation 784 'call' 'tmp_1_44' <Predicate = true> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_33 : Operation 785 [1/1] (3.75ns)   --->   "%tmp_1_45 = call fastcc i32 @SIG0(i32 %m_47)" [sha256_impl.c:256]   --->   Operation 785 'call' 'tmp_1_45' <Predicate = true> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_33 : Operation 786 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln273_48 = add i32 %tmp_3_11, %f_1_9" [sha256_impl.c:273]   --->   Operation 786 'add' 'add_ln273_48' <Predicate = (trunc_ln269)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_33 : Operation 787 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%add_ln273_51 = add i32 %add_ln273_50, %add_ln273_48" [sha256_impl.c:273]   --->   Operation 787 'add' 'add_ln273_51' <Predicate = (trunc_ln269)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_33 : Operation 788 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln283_76 = add i32 %add_ln273_51, %tmp_5_11" [sha256_impl.c:283]   --->   Operation 788 'add' 'add_ln283_76' <Predicate = (trunc_ln269)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_33 : Operation 789 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%add_ln283_12 = add i32 %add_ln283_76, %tmp_4_11" [sha256_impl.c:283]   --->   Operation 789 'add' 'add_ln283_12' <Predicate = (trunc_ln269)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>

State 34 <SV = 33> <Delay = 8.12>
ST_34 : Operation 790 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln256_97 = add i32 %m_32, %m_41" [sha256_impl.c:256]   --->   Operation 790 'add' 'add_ln256_97' <Predicate = true> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_34 : Operation 791 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%m_48 = add i32 %add_ln256_96, %add_ln256_97" [sha256_impl.c:256]   --->   Operation 791 'add' 'm_48' <Predicate = true> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_34 : Operation 792 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln256_100 = add i32 %m_33, %m_42" [sha256_impl.c:256]   --->   Operation 792 'add' 'add_ln256_100' <Predicate = true> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_34 : Operation 793 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%m_49 = add i32 %add_ln256_99, %add_ln256_100" [sha256_impl.c:256]   --->   Operation 793 'add' 'm_49' <Predicate = true> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_34 : Operation 794 [1/1] (3.75ns)   --->   "%tmp_34 = call fastcc i32 @SIG1(i32 %m_48)" [sha256_impl.c:256]   --->   Operation 794 'call' 'tmp_34' <Predicate = true> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_34 : Operation 795 [1/1] (3.75ns)   --->   "%tmp_35 = call fastcc i32 @SIG1(i32 %m_49)" [sha256_impl.c:256]   --->   Operation 795 'call' 'tmp_35' <Predicate = true> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_34 : Operation 796 [1/1] (3.75ns)   --->   "%tmp_1_46 = call fastcc i32 @SIG0(i32 %m_48)" [sha256_impl.c:256]   --->   Operation 796 'call' 'tmp_1_46' <Predicate = true> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_34 : Operation 797 [1/1] (2.55ns)   --->   "%add_ln279_12 = add i32 %add_ln273_51, %c_1_10" [sha256_impl.c:279]   --->   Operation 797 'add' 'add_ln279_12' <Predicate = (trunc_ln269)> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_34 : Operation 798 [1/1] (1.76ns)   --->   "br label %24" [sha256_impl.c:285]   --->   Operation 798 'br' <Predicate = (trunc_ln269)> <Delay = 1.76>
ST_34 : Operation 799 [1/1] (0.00ns)   --->   "%f_1_12 = phi i32 [ %e_1_11, %25 ], [ %c_1_10, %22 ]" [sha256_impl.c:279]   --->   Operation 799 'phi' 'f_1_12' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 800 [1/1] (0.00ns)   --->   "%e_1_12 = phi i32 [ %add_ln279_12, %25 ], [ %c_1_10, %22 ]" [sha256_impl.c:279]   --->   Operation 800 'phi' 'e_1_12' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 801 [1/1] (0.00ns)   --->   "%c_1_12 = phi i32 [ %b_1_11, %25 ], [ 0, %22 ]" [sha256_impl.c:283]   --->   Operation 801 'phi' 'c_1_12' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 802 [1/1] (0.00ns)   --->   "%b_1_12 = phi i32 [ %a_1_11, %25 ], [ 0, %22 ]" [sha256_impl.c:283]   --->   Operation 802 'phi' 'b_1_12' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 803 [1/1] (0.00ns)   --->   "%a_1_12 = phi i32 [ %add_ln283_12, %25 ], [ 0, %22 ]" [sha256_impl.c:283]   --->   Operation 803 'phi' 'a_1_12' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 804 [1/1] (1.76ns)   --->   "br i1 %trunc_ln269, label %27, label %26" [sha256_impl.c:271]   --->   Operation 804 'br' <Predicate = true> <Delay = 1.76>
ST_34 : Operation 805 [1/1] (3.75ns)   --->   "%tmp_2_12 = call fastcc i32 @EP1(i32 %e_1_12)" [sha256_impl.c:273]   --->   Operation 805 'call' 'tmp_2_12' <Predicate = (trunc_ln269)> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_34 : Operation 806 [1/1] (2.97ns)   --->   "%tmp_3_12 = call fastcc i32 @CH(i32 %e_1_12, i32 %f_1_12, i32 %f_1_11)" [sha256_impl.c:273]   --->   Operation 806 'call' 'tmp_3_12' <Predicate = (trunc_ln269)> <Delay = 2.97> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_34 : Operation 807 [1/1] (3.75ns)   --->   "%tmp_4_12 = call fastcc i32 @EP0(i32 %a_1_12)" [sha256_impl.c:275]   --->   Operation 807 'call' 'tmp_4_12' <Predicate = (trunc_ln269)> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_34 : Operation 808 [1/1] (1.69ns)   --->   "%tmp_5_12 = call fastcc i32 @MAJ(i32 %a_1_12, i32 %b_1_12, i32 %c_1_12)" [sha256_impl.c:275]   --->   Operation 808 'call' 'tmp_5_12' <Predicate = (trunc_ln269)> <Delay = 1.69> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 35 <SV = 34> <Delay = 8.74>
ST_35 : Operation 809 [1/1] (2.55ns)   --->   "%add_ln256_102 = add i32 %tmp_1_33, %tmp_34" [sha256_impl.c:256]   --->   Operation 809 'add' 'add_ln256_102' <Predicate = true> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_35 : Operation 810 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln256_103 = add i32 %m_34, %m_43" [sha256_impl.c:256]   --->   Operation 810 'add' 'add_ln256_103' <Predicate = true> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_35 : Operation 811 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%m_50 = add i32 %add_ln256_102, %add_ln256_103" [sha256_impl.c:256]   --->   Operation 811 'add' 'm_50' <Predicate = true> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_35 : Operation 812 [1/1] (2.55ns)   --->   "%add_ln256_105 = add i32 %tmp_1_34, %tmp_35" [sha256_impl.c:256]   --->   Operation 812 'add' 'add_ln256_105' <Predicate = true> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_35 : Operation 813 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln256_106 = add i32 %m_35, %m_44" [sha256_impl.c:256]   --->   Operation 813 'add' 'add_ln256_106' <Predicate = true> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_35 : Operation 814 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%m_51 = add i32 %add_ln256_105, %add_ln256_106" [sha256_impl.c:256]   --->   Operation 814 'add' 'm_51' <Predicate = true> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_35 : Operation 815 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln273_52 = add i32 %tmp_3_12, -2132889090" [sha256_impl.c:273]   --->   Operation 815 'add' 'add_ln273_52' <Predicate = (trunc_ln269)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_35 : Operation 816 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln273_53 = add i32 %tmp_2_12, %m_13" [sha256_impl.c:273]   --->   Operation 816 'add' 'add_ln273_53' <Predicate = (trunc_ln269)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_35 : Operation 817 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%add_ln273_54 = add i32 %add_ln273_53, %f_1_10" [sha256_impl.c:273]   --->   Operation 817 'add' 'add_ln273_54' <Predicate = (trunc_ln269)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_35 : Operation 818 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%add_ln273_55 = add i32 %add_ln273_54, %add_ln273_52" [sha256_impl.c:273]   --->   Operation 818 'add' 'add_ln273_55' <Predicate = (trunc_ln269)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>

State 36 <SV = 35> <Delay = 7.83>
ST_36 : Operation 819 [1/1] (3.75ns)   --->   "%tmp_36 = call fastcc i32 @SIG1(i32 %m_50)" [sha256_impl.c:256]   --->   Operation 819 'call' 'tmp_36' <Predicate = true> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_36 : Operation 820 [1/1] (2.55ns)   --->   "%add_ln256_108 = add i32 %tmp_1_35, %tmp_36" [sha256_impl.c:256]   --->   Operation 820 'add' 'add_ln256_108' <Predicate = true> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_36 : Operation 821 [1/1] (3.75ns)   --->   "%tmp_37 = call fastcc i32 @SIG1(i32 %m_51)" [sha256_impl.c:256]   --->   Operation 821 'call' 'tmp_37' <Predicate = true> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_36 : Operation 822 [1/1] (2.55ns)   --->   "%add_ln256_111 = add i32 %tmp_1_36, %tmp_37" [sha256_impl.c:256]   --->   Operation 822 'add' 'add_ln256_111' <Predicate = true> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_36 : Operation 823 [1/1] (2.55ns)   --->   "%add_ln279_13 = add i32 %add_ln273_55, %c_1_11" [sha256_impl.c:279]   --->   Operation 823 'add' 'add_ln279_13' <Predicate = (trunc_ln269)> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_36 : Operation 824 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln283_77 = add i32 %add_ln273_55, %tmp_5_12" [sha256_impl.c:283]   --->   Operation 824 'add' 'add_ln283_77' <Predicate = (trunc_ln269)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_36 : Operation 825 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%add_ln283_13 = add i32 %add_ln283_77, %tmp_4_12" [sha256_impl.c:283]   --->   Operation 825 'add' 'add_ln283_13' <Predicate = (trunc_ln269)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_36 : Operation 826 [1/1] (1.76ns)   --->   "br label %26" [sha256_impl.c:285]   --->   Operation 826 'br' <Predicate = (trunc_ln269)> <Delay = 1.76>
ST_36 : Operation 827 [1/1] (0.00ns)   --->   "%c_1_13 = phi i32 [ %b_1_12, %27 ], [ 0, %24 ]" [sha256_impl.c:283]   --->   Operation 827 'phi' 'c_1_13' <Predicate = true> <Delay = 0.00>
ST_36 : Operation 828 [1/1] (0.00ns)   --->   "%b_1_13 = phi i32 [ %a_1_12, %27 ], [ 0, %24 ]" [sha256_impl.c:283]   --->   Operation 828 'phi' 'b_1_13' <Predicate = true> <Delay = 0.00>
ST_36 : Operation 829 [1/1] (0.00ns)   --->   "%a_1_13 = phi i32 [ %add_ln283_13, %27 ], [ 0, %24 ]" [sha256_impl.c:283]   --->   Operation 829 'phi' 'a_1_13' <Predicate = true> <Delay = 0.00>
ST_36 : Operation 830 [1/1] (1.76ns)   --->   "br i1 %trunc_ln269, label %29, label %28" [sha256_impl.c:271]   --->   Operation 830 'br' <Predicate = true> <Delay = 1.76>
ST_36 : Operation 831 [1/1] (1.69ns)   --->   "%tmp_5_13 = call fastcc i32 @MAJ(i32 %a_1_13, i32 %b_1_13, i32 %c_1_13)" [sha256_impl.c:275]   --->   Operation 831 'call' 'tmp_5_13' <Predicate = (trunc_ln269)> <Delay = 1.69> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 37 <SV = 36> <Delay = 8.12>
ST_37 : Operation 832 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln256_109 = add i32 %m_36, %m_45" [sha256_impl.c:256]   --->   Operation 832 'add' 'add_ln256_109' <Predicate = true> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_37 : Operation 833 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%m_52 = add i32 %add_ln256_108, %add_ln256_109" [sha256_impl.c:256]   --->   Operation 833 'add' 'm_52' <Predicate = true> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_37 : Operation 834 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln256_112 = add i32 %m_37, %m_46" [sha256_impl.c:256]   --->   Operation 834 'add' 'add_ln256_112' <Predicate = true> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_37 : Operation 835 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%m_53 = add i32 %add_ln256_111, %add_ln256_112" [sha256_impl.c:256]   --->   Operation 835 'add' 'm_53' <Predicate = true> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_37 : Operation 836 [1/1] (3.75ns)   --->   "%tmp_38 = call fastcc i32 @SIG1(i32 %m_52)" [sha256_impl.c:256]   --->   Operation 836 'call' 'tmp_38' <Predicate = true> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_37 : Operation 837 [1/1] (3.75ns)   --->   "%tmp_39 = call fastcc i32 @SIG1(i32 %m_53)" [sha256_impl.c:256]   --->   Operation 837 'call' 'tmp_39' <Predicate = true> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_37 : Operation 838 [1/1] (0.00ns)   --->   "%f_1_13 = phi i32 [ %e_1_12, %27 ], [ %c_1_11, %24 ]" [sha256_impl.c:279]   --->   Operation 838 'phi' 'f_1_13' <Predicate = true> <Delay = 0.00>
ST_37 : Operation 839 [1/1] (0.00ns)   --->   "%e_1_13 = phi i32 [ %add_ln279_13, %27 ], [ %c_1_11, %24 ]" [sha256_impl.c:279]   --->   Operation 839 'phi' 'e_1_13' <Predicate = true> <Delay = 0.00>
ST_37 : Operation 840 [1/1] (3.75ns)   --->   "%tmp_2_13 = call fastcc i32 @EP1(i32 %e_1_13)" [sha256_impl.c:273]   --->   Operation 840 'call' 'tmp_2_13' <Predicate = (trunc_ln269)> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_37 : Operation 841 [1/1] (2.97ns)   --->   "%tmp_3_13 = call fastcc i32 @CH(i32 %e_1_13, i32 %f_1_13, i32 %f_1_12)" [sha256_impl.c:273]   --->   Operation 841 'call' 'tmp_3_13' <Predicate = (trunc_ln269)> <Delay = 2.97> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_37 : Operation 842 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln273_57 = add i32 %tmp_2_13, %m_14" [sha256_impl.c:273]   --->   Operation 842 'add' 'add_ln273_57' <Predicate = (trunc_ln269)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_37 : Operation 843 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%add_ln273_58 = add i32 %add_ln273_57, %f_1_11" [sha256_impl.c:273]   --->   Operation 843 'add' 'add_ln273_58' <Predicate = (trunc_ln269)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_37 : Operation 844 [1/1] (3.75ns)   --->   "%tmp_4_13 = call fastcc i32 @EP0(i32 %a_1_13)" [sha256_impl.c:275]   --->   Operation 844 'call' 'tmp_4_13' <Predicate = (trunc_ln269)> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 38 <SV = 37> <Delay = 8.74>
ST_38 : Operation 845 [1/1] (2.55ns)   --->   "%add_ln256_114 = add i32 %tmp_1_37, %tmp_38" [sha256_impl.c:256]   --->   Operation 845 'add' 'add_ln256_114' <Predicate = true> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_38 : Operation 846 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln256_115 = add i32 %m_38, %m_47" [sha256_impl.c:256]   --->   Operation 846 'add' 'add_ln256_115' <Predicate = true> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_38 : Operation 847 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%m_54 = add i32 %add_ln256_114, %add_ln256_115" [sha256_impl.c:256]   --->   Operation 847 'add' 'm_54' <Predicate = true> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_38 : Operation 848 [1/1] (2.55ns)   --->   "%add_ln256_117 = add i32 %tmp_1_38, %tmp_39" [sha256_impl.c:256]   --->   Operation 848 'add' 'add_ln256_117' <Predicate = true> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_38 : Operation 849 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln256_118 = add i32 %m_39, %m_48" [sha256_impl.c:256]   --->   Operation 849 'add' 'add_ln256_118' <Predicate = true> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_38 : Operation 850 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%m_55 = add i32 %add_ln256_117, %add_ln256_118" [sha256_impl.c:256]   --->   Operation 850 'add' 'm_55' <Predicate = true> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_38 : Operation 851 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln273_56 = add i32 %tmp_3_13, -1680079193" [sha256_impl.c:273]   --->   Operation 851 'add' 'add_ln273_56' <Predicate = (trunc_ln269)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_38 : Operation 852 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%add_ln273_59 = add i32 %add_ln273_58, %add_ln273_56" [sha256_impl.c:273]   --->   Operation 852 'add' 'add_ln273_59' <Predicate = (trunc_ln269)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_38 : Operation 853 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln283_78 = add i32 %add_ln273_59, %tmp_5_13" [sha256_impl.c:283]   --->   Operation 853 'add' 'add_ln283_78' <Predicate = (trunc_ln269)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_38 : Operation 854 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%add_ln283_14 = add i32 %add_ln283_78, %tmp_4_13" [sha256_impl.c:283]   --->   Operation 854 'add' 'add_ln283_14' <Predicate = (trunc_ln269)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>

State 39 <SV = 38> <Delay = 8.07>
ST_39 : Operation 855 [1/1] (3.75ns)   --->   "%tmp_40 = call fastcc i32 @SIG1(i32 %m_54)" [sha256_impl.c:256]   --->   Operation 855 'call' 'tmp_40' <Predicate = true> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_39 : Operation 856 [1/1] (2.55ns)   --->   "%add_ln256_120 = add i32 %tmp_1_39, %tmp_40" [sha256_impl.c:256]   --->   Operation 856 'add' 'add_ln256_120' <Predicate = true> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_39 : Operation 857 [1/1] (3.75ns)   --->   "%tmp_41 = call fastcc i32 @SIG1(i32 %m_55)" [sha256_impl.c:256]   --->   Operation 857 'call' 'tmp_41' <Predicate = true> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_39 : Operation 858 [1/1] (2.55ns)   --->   "%add_ln256_123 = add i32 %tmp_1_40, %tmp_41" [sha256_impl.c:256]   --->   Operation 858 'add' 'add_ln256_123' <Predicate = true> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_39 : Operation 859 [1/1] (2.55ns)   --->   "%add_ln279_14 = add i32 %add_ln273_59, %c_1_12" [sha256_impl.c:279]   --->   Operation 859 'add' 'add_ln279_14' <Predicate = (trunc_ln269)> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_39 : Operation 860 [1/1] (1.76ns)   --->   "br label %28" [sha256_impl.c:285]   --->   Operation 860 'br' <Predicate = (trunc_ln269)> <Delay = 1.76>
ST_39 : Operation 861 [1/1] (0.00ns)   --->   "%f_1_14 = phi i32 [ %e_1_13, %29 ], [ %c_1_12, %26 ]" [sha256_impl.c:279]   --->   Operation 861 'phi' 'f_1_14' <Predicate = true> <Delay = 0.00>
ST_39 : Operation 862 [1/1] (0.00ns)   --->   "%e_1_14 = phi i32 [ %add_ln279_14, %29 ], [ %c_1_12, %26 ]" [sha256_impl.c:279]   --->   Operation 862 'phi' 'e_1_14' <Predicate = true> <Delay = 0.00>
ST_39 : Operation 863 [1/1] (0.00ns)   --->   "%c_1_14 = phi i32 [ %b_1_13, %29 ], [ 0, %26 ]" [sha256_impl.c:283]   --->   Operation 863 'phi' 'c_1_14' <Predicate = true> <Delay = 0.00>
ST_39 : Operation 864 [1/1] (0.00ns)   --->   "%b_1_14 = phi i32 [ %a_1_13, %29 ], [ 0, %26 ]" [sha256_impl.c:283]   --->   Operation 864 'phi' 'b_1_14' <Predicate = true> <Delay = 0.00>
ST_39 : Operation 865 [1/1] (0.00ns)   --->   "%a_1_14 = phi i32 [ %add_ln283_14, %29 ], [ 0, %26 ]" [sha256_impl.c:283]   --->   Operation 865 'phi' 'a_1_14' <Predicate = true> <Delay = 0.00>
ST_39 : Operation 866 [1/1] (1.76ns)   --->   "br i1 %trunc_ln269, label %31, label %30" [sha256_impl.c:271]   --->   Operation 866 'br' <Predicate = true> <Delay = 1.76>
ST_39 : Operation 867 [1/1] (3.75ns)   --->   "%tmp_2_14 = call fastcc i32 @EP1(i32 %e_1_14)" [sha256_impl.c:273]   --->   Operation 867 'call' 'tmp_2_14' <Predicate = (trunc_ln269)> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_39 : Operation 868 [1/1] (2.97ns)   --->   "%tmp_3_14 = call fastcc i32 @CH(i32 %e_1_14, i32 %f_1_14, i32 %f_1_13)" [sha256_impl.c:273]   --->   Operation 868 'call' 'tmp_3_14' <Predicate = (trunc_ln269)> <Delay = 2.97> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_39 : Operation 869 [1/1] (3.75ns)   --->   "%tmp_4_14 = call fastcc i32 @EP0(i32 %a_1_14)" [sha256_impl.c:275]   --->   Operation 869 'call' 'tmp_4_14' <Predicate = (trunc_ln269)> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_39 : Operation 870 [1/1] (1.69ns)   --->   "%tmp_5_14 = call fastcc i32 @MAJ(i32 %a_1_14, i32 %b_1_14, i32 %c_1_14)" [sha256_impl.c:275]   --->   Operation 870 'call' 'tmp_5_14' <Predicate = (trunc_ln269)> <Delay = 1.69> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 40 <SV = 39> <Delay = 8.74>
ST_40 : Operation 871 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln256_121 = add i32 %m_40, %m_49" [sha256_impl.c:256]   --->   Operation 871 'add' 'add_ln256_121' <Predicate = true> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_40 : Operation 872 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%m_56 = add i32 %add_ln256_120, %add_ln256_121" [sha256_impl.c:256]   --->   Operation 872 'add' 'm_56' <Predicate = true> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_40 : Operation 873 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln256_124 = add i32 %m_41, %m_50" [sha256_impl.c:256]   --->   Operation 873 'add' 'add_ln256_124' <Predicate = true> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_40 : Operation 874 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%m_57 = add i32 %add_ln256_123, %add_ln256_124" [sha256_impl.c:256]   --->   Operation 874 'add' 'm_57' <Predicate = true> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_40 : Operation 875 [1/1] (3.75ns)   --->   "%tmp_42 = call fastcc i32 @SIG1(i32 %m_56)" [sha256_impl.c:256]   --->   Operation 875 'call' 'tmp_42' <Predicate = true> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_40 : Operation 876 [1/1] (3.75ns)   --->   "%tmp_43 = call fastcc i32 @SIG1(i32 %m_57)" [sha256_impl.c:256]   --->   Operation 876 'call' 'tmp_43' <Predicate = true> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_40 : Operation 877 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln273_60 = add i32 %tmp_3_14, %f_1_12" [sha256_impl.c:273]   --->   Operation 877 'add' 'add_ln273_60' <Predicate = (trunc_ln269)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_40 : Operation 878 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln273_61 = add i32 %m_15, -1046744716" [sha256_impl.c:273]   --->   Operation 878 'add' 'add_ln273_61' <Predicate = (trunc_ln269)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_40 : Operation 879 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%add_ln273_62 = add i32 %add_ln273_61, %tmp_2_14" [sha256_impl.c:273]   --->   Operation 879 'add' 'add_ln273_62' <Predicate = (trunc_ln269)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_40 : Operation 880 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%add_ln273_63 = add i32 %add_ln273_62, %add_ln273_60" [sha256_impl.c:273]   --->   Operation 880 'add' 'add_ln273_63' <Predicate = (trunc_ln269)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>

State 41 <SV = 40> <Delay = 7.83>
ST_41 : Operation 881 [1/1] (2.55ns)   --->   "%add_ln256_126 = add i32 %tmp_1_41, %tmp_42" [sha256_impl.c:256]   --->   Operation 881 'add' 'add_ln256_126' <Predicate = true> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_41 : Operation 882 [1/1] (2.55ns)   --->   "%add_ln256_129 = add i32 %tmp_1_42, %tmp_43" [sha256_impl.c:256]   --->   Operation 882 'add' 'add_ln256_129' <Predicate = true> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_41 : Operation 883 [1/1] (2.55ns)   --->   "%add_ln279_15 = add i32 %add_ln273_63, %c_1_13" [sha256_impl.c:279]   --->   Operation 883 'add' 'add_ln279_15' <Predicate = (trunc_ln269)> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_41 : Operation 884 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln283_79 = add i32 %add_ln273_63, %tmp_5_14" [sha256_impl.c:283]   --->   Operation 884 'add' 'add_ln283_79' <Predicate = (trunc_ln269)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_41 : Operation 885 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%add_ln283_15 = add i32 %add_ln283_79, %tmp_4_14" [sha256_impl.c:283]   --->   Operation 885 'add' 'add_ln283_15' <Predicate = (trunc_ln269)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_41 : Operation 886 [1/1] (1.76ns)   --->   "br label %30" [sha256_impl.c:285]   --->   Operation 886 'br' <Predicate = (trunc_ln269)> <Delay = 1.76>
ST_41 : Operation 887 [1/1] (0.00ns)   --->   "%c_1_15 = phi i32 [ %b_1_14, %31 ], [ 0, %28 ]" [sha256_impl.c:283]   --->   Operation 887 'phi' 'c_1_15' <Predicate = true> <Delay = 0.00>
ST_41 : Operation 888 [1/1] (0.00ns)   --->   "%b_1_15 = phi i32 [ %a_1_14, %31 ], [ 0, %28 ]" [sha256_impl.c:283]   --->   Operation 888 'phi' 'b_1_15' <Predicate = true> <Delay = 0.00>
ST_41 : Operation 889 [1/1] (0.00ns)   --->   "%a_1_15 = phi i32 [ %add_ln283_15, %31 ], [ 0, %28 ]" [sha256_impl.c:283]   --->   Operation 889 'phi' 'a_1_15' <Predicate = true> <Delay = 0.00>
ST_41 : Operation 890 [1/1] (1.76ns)   --->   "br i1 %trunc_ln269, label %33, label %32" [sha256_impl.c:271]   --->   Operation 890 'br' <Predicate = true> <Delay = 1.76>
ST_41 : Operation 891 [1/1] (1.69ns)   --->   "%tmp_5_15 = call fastcc i32 @MAJ(i32 %a_1_15, i32 %b_1_15, i32 %c_1_15)" [sha256_impl.c:275]   --->   Operation 891 'call' 'tmp_5_15' <Predicate = (trunc_ln269)> <Delay = 1.69> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 42 <SV = 41> <Delay = 8.12>
ST_42 : Operation 892 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln256_127 = add i32 %m_42, %m_51" [sha256_impl.c:256]   --->   Operation 892 'add' 'add_ln256_127' <Predicate = true> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_42 : Operation 893 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%m_58 = add i32 %add_ln256_126, %add_ln256_127" [sha256_impl.c:256]   --->   Operation 893 'add' 'm_58' <Predicate = true> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_42 : Operation 894 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln256_130 = add i32 %m_43, %m_52" [sha256_impl.c:256]   --->   Operation 894 'add' 'add_ln256_130' <Predicate = true> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_42 : Operation 895 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%m_59 = add i32 %add_ln256_129, %add_ln256_130" [sha256_impl.c:256]   --->   Operation 895 'add' 'm_59' <Predicate = true> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_42 : Operation 896 [1/1] (0.00ns)   --->   "%f_1_15 = phi i32 [ %e_1_14, %31 ], [ %c_1_13, %28 ]" [sha256_impl.c:279]   --->   Operation 896 'phi' 'f_1_15' <Predicate = true> <Delay = 0.00>
ST_42 : Operation 897 [1/1] (0.00ns)   --->   "%e_1_15 = phi i32 [ %add_ln279_15, %31 ], [ %c_1_13, %28 ]" [sha256_impl.c:279]   --->   Operation 897 'phi' 'e_1_15' <Predicate = true> <Delay = 0.00>
ST_42 : Operation 898 [1/1] (3.75ns)   --->   "%tmp_2_15 = call fastcc i32 @EP1(i32 %e_1_15)" [sha256_impl.c:273]   --->   Operation 898 'call' 'tmp_2_15' <Predicate = (trunc_ln269)> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_42 : Operation 899 [1/1] (2.97ns)   --->   "%tmp_3_15 = call fastcc i32 @CH(i32 %e_1_15, i32 %f_1_15, i32 %f_1_14)" [sha256_impl.c:273]   --->   Operation 899 'call' 'tmp_3_15' <Predicate = (trunc_ln269)> <Delay = 2.97> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_42 : Operation 900 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln273_65 = add i32 %m_16, -459576895" [sha256_impl.c:273]   --->   Operation 900 'add' 'add_ln273_65' <Predicate = (trunc_ln269)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_42 : Operation 901 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%add_ln273_66 = add i32 %add_ln273_65, %tmp_2_15" [sha256_impl.c:273]   --->   Operation 901 'add' 'add_ln273_66' <Predicate = (trunc_ln269)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_42 : Operation 902 [1/1] (3.75ns)   --->   "%tmp_4_15 = call fastcc i32 @EP0(i32 %a_1_15)" [sha256_impl.c:275]   --->   Operation 902 'call' 'tmp_4_15' <Predicate = (trunc_ln269)> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 43 <SV = 42> <Delay = 8.74>
ST_43 : Operation 903 [1/1] (3.75ns)   --->   "%tmp_44 = call fastcc i32 @SIG1(i32 %m_58)" [sha256_impl.c:256]   --->   Operation 903 'call' 'tmp_44' <Predicate = true> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_43 : Operation 904 [1/1] (2.55ns)   --->   "%add_ln256_132 = add i32 %tmp_1_43, %tmp_44" [sha256_impl.c:256]   --->   Operation 904 'add' 'add_ln256_132' <Predicate = true> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_43 : Operation 905 [1/1] (3.75ns)   --->   "%tmp_45 = call fastcc i32 @SIG1(i32 %m_59)" [sha256_impl.c:256]   --->   Operation 905 'call' 'tmp_45' <Predicate = true> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_43 : Operation 906 [1/1] (2.55ns)   --->   "%add_ln256_135 = add i32 %tmp_1_44, %tmp_45" [sha256_impl.c:256]   --->   Operation 906 'add' 'add_ln256_135' <Predicate = true> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_43 : Operation 907 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln273_64 = add i32 %tmp_3_15, %f_1_13" [sha256_impl.c:273]   --->   Operation 907 'add' 'add_ln273_64' <Predicate = (trunc_ln269)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_43 : Operation 908 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%add_ln273_67 = add i32 %add_ln273_66, %add_ln273_64" [sha256_impl.c:273]   --->   Operation 908 'add' 'add_ln273_67' <Predicate = (trunc_ln269)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_43 : Operation 909 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln283_80 = add i32 %add_ln273_67, %tmp_5_15" [sha256_impl.c:283]   --->   Operation 909 'add' 'add_ln283_80' <Predicate = (trunc_ln269)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_43 : Operation 910 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%add_ln283_16 = add i32 %add_ln283_80, %tmp_4_15" [sha256_impl.c:283]   --->   Operation 910 'add' 'add_ln283_16' <Predicate = (trunc_ln269)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>

State 44 <SV = 43> <Delay = 8.07>
ST_44 : Operation 911 [1/1] (2.55ns)   --->   "%add_ln279_16 = add i32 %add_ln273_67, %c_1_14" [sha256_impl.c:279]   --->   Operation 911 'add' 'add_ln279_16' <Predicate = (trunc_ln269)> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_44 : Operation 912 [1/1] (1.76ns)   --->   "br label %32" [sha256_impl.c:285]   --->   Operation 912 'br' <Predicate = (trunc_ln269)> <Delay = 1.76>
ST_44 : Operation 913 [1/1] (0.00ns)   --->   "%f_1_16 = phi i32 [ %e_1_15, %33 ], [ %c_1_14, %30 ]" [sha256_impl.c:279]   --->   Operation 913 'phi' 'f_1_16' <Predicate = true> <Delay = 0.00>
ST_44 : Operation 914 [1/1] (0.00ns)   --->   "%e_1_16 = phi i32 [ %add_ln279_16, %33 ], [ %c_1_14, %30 ]" [sha256_impl.c:279]   --->   Operation 914 'phi' 'e_1_16' <Predicate = true> <Delay = 0.00>
ST_44 : Operation 915 [1/1] (0.00ns)   --->   "%c_1_16 = phi i32 [ %b_1_15, %33 ], [ 0, %30 ]" [sha256_impl.c:283]   --->   Operation 915 'phi' 'c_1_16' <Predicate = true> <Delay = 0.00>
ST_44 : Operation 916 [1/1] (0.00ns)   --->   "%b_1_16 = phi i32 [ %a_1_15, %33 ], [ 0, %30 ]" [sha256_impl.c:283]   --->   Operation 916 'phi' 'b_1_16' <Predicate = true> <Delay = 0.00>
ST_44 : Operation 917 [1/1] (0.00ns)   --->   "%a_1_16 = phi i32 [ %add_ln283_16, %33 ], [ 0, %30 ]" [sha256_impl.c:283]   --->   Operation 917 'phi' 'a_1_16' <Predicate = true> <Delay = 0.00>
ST_44 : Operation 918 [1/1] (1.76ns)   --->   "br i1 %trunc_ln269, label %35, label %34" [sha256_impl.c:271]   --->   Operation 918 'br' <Predicate = true> <Delay = 1.76>
ST_44 : Operation 919 [1/1] (3.75ns)   --->   "%tmp_2_16 = call fastcc i32 @EP1(i32 %e_1_16)" [sha256_impl.c:273]   --->   Operation 919 'call' 'tmp_2_16' <Predicate = (trunc_ln269)> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_44 : Operation 920 [1/1] (2.97ns)   --->   "%tmp_3_16 = call fastcc i32 @CH(i32 %e_1_16, i32 %f_1_16, i32 %f_1_15)" [sha256_impl.c:273]   --->   Operation 920 'call' 'tmp_3_16' <Predicate = (trunc_ln269)> <Delay = 2.97> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_44 : Operation 921 [1/1] (3.75ns)   --->   "%tmp_4_16 = call fastcc i32 @EP0(i32 %a_1_16)" [sha256_impl.c:275]   --->   Operation 921 'call' 'tmp_4_16' <Predicate = (trunc_ln269)> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_44 : Operation 922 [1/1] (1.69ns)   --->   "%tmp_5_16 = call fastcc i32 @MAJ(i32 %a_1_16, i32 %b_1_16, i32 %c_1_16)" [sha256_impl.c:275]   --->   Operation 922 'call' 'tmp_5_16' <Predicate = (trunc_ln269)> <Delay = 1.69> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 45 <SV = 44> <Delay = 8.74>
ST_45 : Operation 923 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln256_133 = add i32 %m_44, %m_53" [sha256_impl.c:256]   --->   Operation 923 'add' 'add_ln256_133' <Predicate = true> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_45 : Operation 924 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%m_60 = add i32 %add_ln256_132, %add_ln256_133" [sha256_impl.c:256]   --->   Operation 924 'add' 'm_60' <Predicate = true> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_45 : Operation 925 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln273_68 = add i32 %tmp_3_16, %f_1_14" [sha256_impl.c:273]   --->   Operation 925 'add' 'add_ln273_68' <Predicate = (trunc_ln269)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_45 : Operation 926 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln273_69 = add i32 %m_17, -272742522" [sha256_impl.c:273]   --->   Operation 926 'add' 'add_ln273_69' <Predicate = (trunc_ln269)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_45 : Operation 927 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%add_ln273_70 = add i32 %add_ln273_69, %tmp_2_16" [sha256_impl.c:273]   --->   Operation 927 'add' 'add_ln273_70' <Predicate = (trunc_ln269)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_45 : Operation 928 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%add_ln273_71 = add i32 %add_ln273_70, %add_ln273_68" [sha256_impl.c:273]   --->   Operation 928 'add' 'add_ln273_71' <Predicate = (trunc_ln269)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>

State 46 <SV = 45> <Delay = 8.12>
ST_46 : Operation 929 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln256_136 = add i32 %m_45, %m_54" [sha256_impl.c:256]   --->   Operation 929 'add' 'add_ln256_136' <Predicate = true> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_46 : Operation 930 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%m_61 = add i32 %add_ln256_135, %add_ln256_136" [sha256_impl.c:256]   --->   Operation 930 'add' 'm_61' <Predicate = true> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_46 : Operation 931 [1/1] (3.75ns)   --->   "%tmp_46 = call fastcc i32 @SIG1(i32 %m_60)" [sha256_impl.c:256]   --->   Operation 931 'call' 'tmp_46' <Predicate = true> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_46 : Operation 932 [1/1] (3.75ns)   --->   "%tmp_47 = call fastcc i32 @SIG1(i32 %m_61)" [sha256_impl.c:256]   --->   Operation 932 'call' 'tmp_47' <Predicate = true> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_46 : Operation 933 [1/1] (2.55ns)   --->   "%add_ln279_17 = add i32 %add_ln273_71, %c_1_15" [sha256_impl.c:279]   --->   Operation 933 'add' 'add_ln279_17' <Predicate = (trunc_ln269)> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_46 : Operation 934 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln283_81 = add i32 %add_ln273_71, %tmp_5_16" [sha256_impl.c:283]   --->   Operation 934 'add' 'add_ln283_81' <Predicate = (trunc_ln269)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_46 : Operation 935 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%add_ln283_17 = add i32 %add_ln283_81, %tmp_4_16" [sha256_impl.c:283]   --->   Operation 935 'add' 'add_ln283_17' <Predicate = (trunc_ln269)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_46 : Operation 936 [1/1] (1.76ns)   --->   "br label %34" [sha256_impl.c:285]   --->   Operation 936 'br' <Predicate = (trunc_ln269)> <Delay = 1.76>
ST_46 : Operation 937 [1/1] (0.00ns)   --->   "%c_1_17 = phi i32 [ %b_1_16, %35 ], [ 0, %32 ]" [sha256_impl.c:283]   --->   Operation 937 'phi' 'c_1_17' <Predicate = true> <Delay = 0.00>
ST_46 : Operation 938 [1/1] (0.00ns)   --->   "%b_1_17 = phi i32 [ %a_1_16, %35 ], [ 0, %32 ]" [sha256_impl.c:283]   --->   Operation 938 'phi' 'b_1_17' <Predicate = true> <Delay = 0.00>
ST_46 : Operation 939 [1/1] (0.00ns)   --->   "%a_1_17 = phi i32 [ %add_ln283_17, %35 ], [ 0, %32 ]" [sha256_impl.c:283]   --->   Operation 939 'phi' 'a_1_17' <Predicate = true> <Delay = 0.00>
ST_46 : Operation 940 [1/1] (1.76ns)   --->   "br i1 %trunc_ln269, label %37, label %36" [sha256_impl.c:271]   --->   Operation 940 'br' <Predicate = true> <Delay = 1.76>
ST_46 : Operation 941 [1/1] (1.69ns)   --->   "%tmp_5_17 = call fastcc i32 @MAJ(i32 %a_1_17, i32 %b_1_17, i32 %c_1_17)" [sha256_impl.c:275]   --->   Operation 941 'call' 'tmp_5_17' <Predicate = (trunc_ln269)> <Delay = 1.69> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_46 : Operation 942 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln273_251 = add i32 %tmp_46, %m_55" [sha256_impl.c:273]   --->   Operation 942 'add' 'add_ln273_251' <Predicate = (trunc_ln269)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_46 : Operation 943 [1/1] (2.55ns)   --->   "%add_ln273_253 = add i32 %m_46, %tmp_1_45" [sha256_impl.c:273]   --->   Operation 943 'add' 'add_ln273_253' <Predicate = (trunc_ln269)> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_46 : Operation 944 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%add_ln273_254 = add i32 %add_ln273_253, %add_ln273_251" [sha256_impl.c:273]   --->   Operation 944 'add' 'add_ln273_254' <Predicate = (trunc_ln269)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>

State 47 <SV = 46> <Delay = 8.12>
ST_47 : Operation 945 [1/1] (0.00ns)   --->   "%f_1_17 = phi i32 [ %e_1_16, %35 ], [ %c_1_15, %32 ]" [sha256_impl.c:279]   --->   Operation 945 'phi' 'f_1_17' <Predicate = true> <Delay = 0.00>
ST_47 : Operation 946 [1/1] (0.00ns)   --->   "%e_1_17 = phi i32 [ %add_ln279_17, %35 ], [ %c_1_15, %32 ]" [sha256_impl.c:279]   --->   Operation 946 'phi' 'e_1_17' <Predicate = true> <Delay = 0.00>
ST_47 : Operation 947 [1/1] (3.75ns)   --->   "%tmp_2_17 = call fastcc i32 @EP1(i32 %e_1_17)" [sha256_impl.c:273]   --->   Operation 947 'call' 'tmp_2_17' <Predicate = (trunc_ln269)> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_47 : Operation 948 [1/1] (2.97ns)   --->   "%tmp_3_17 = call fastcc i32 @CH(i32 %e_1_17, i32 %f_1_17, i32 %f_1_16)" [sha256_impl.c:273]   --->   Operation 948 'call' 'tmp_3_17' <Predicate = (trunc_ln269)> <Delay = 2.97> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_47 : Operation 949 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln273_73 = add i32 %m_18, 264347078" [sha256_impl.c:273]   --->   Operation 949 'add' 'add_ln273_73' <Predicate = (trunc_ln269)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_47 : Operation 950 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%add_ln273_74 = add i32 %add_ln273_73, %tmp_2_17" [sha256_impl.c:273]   --->   Operation 950 'add' 'add_ln273_74' <Predicate = (trunc_ln269)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_47 : Operation 951 [1/1] (3.75ns)   --->   "%tmp_4_17 = call fastcc i32 @EP0(i32 %a_1_17)" [sha256_impl.c:275]   --->   Operation 951 'call' 'tmp_4_17' <Predicate = (trunc_ln269)> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 48 <SV = 47> <Delay = 8.74>
ST_48 : Operation 952 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln273_72 = add i32 %tmp_3_17, %f_1_15" [sha256_impl.c:273]   --->   Operation 952 'add' 'add_ln273_72' <Predicate = (trunc_ln269)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_48 : Operation 953 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%add_ln273_75 = add i32 %add_ln273_74, %add_ln273_72" [sha256_impl.c:273]   --->   Operation 953 'add' 'add_ln273_75' <Predicate = (trunc_ln269)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_48 : Operation 954 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln283_82 = add i32 %add_ln273_75, %tmp_5_17" [sha256_impl.c:283]   --->   Operation 954 'add' 'add_ln283_82' <Predicate = (trunc_ln269)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_48 : Operation 955 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%add_ln283_18 = add i32 %add_ln283_82, %tmp_4_17" [sha256_impl.c:283]   --->   Operation 955 'add' 'add_ln283_18' <Predicate = (trunc_ln269)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>

State 49 <SV = 48> <Delay = 8.07>
ST_49 : Operation 956 [1/1] (2.55ns)   --->   "%add_ln279_18 = add i32 %add_ln273_75, %c_1_16" [sha256_impl.c:279]   --->   Operation 956 'add' 'add_ln279_18' <Predicate = (trunc_ln269)> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_49 : Operation 957 [1/1] (1.76ns)   --->   "br label %36" [sha256_impl.c:285]   --->   Operation 957 'br' <Predicate = (trunc_ln269)> <Delay = 1.76>
ST_49 : Operation 958 [1/1] (0.00ns)   --->   "%f_1_18 = phi i32 [ %e_1_17, %37 ], [ %c_1_16, %34 ]" [sha256_impl.c:279]   --->   Operation 958 'phi' 'f_1_18' <Predicate = true> <Delay = 0.00>
ST_49 : Operation 959 [1/1] (0.00ns)   --->   "%e_1_18 = phi i32 [ %add_ln279_18, %37 ], [ %c_1_16, %34 ]" [sha256_impl.c:279]   --->   Operation 959 'phi' 'e_1_18' <Predicate = true> <Delay = 0.00>
ST_49 : Operation 960 [1/1] (0.00ns)   --->   "%c_1_18 = phi i32 [ %b_1_17, %37 ], [ 0, %34 ]" [sha256_impl.c:283]   --->   Operation 960 'phi' 'c_1_18' <Predicate = true> <Delay = 0.00>
ST_49 : Operation 961 [1/1] (0.00ns)   --->   "%b_1_18 = phi i32 [ %a_1_17, %37 ], [ 0, %34 ]" [sha256_impl.c:283]   --->   Operation 961 'phi' 'b_1_18' <Predicate = true> <Delay = 0.00>
ST_49 : Operation 962 [1/1] (0.00ns)   --->   "%a_1_18 = phi i32 [ %add_ln283_18, %37 ], [ 0, %34 ]" [sha256_impl.c:283]   --->   Operation 962 'phi' 'a_1_18' <Predicate = true> <Delay = 0.00>
ST_49 : Operation 963 [1/1] (1.76ns)   --->   "br i1 %trunc_ln269, label %39, label %38" [sha256_impl.c:271]   --->   Operation 963 'br' <Predicate = true> <Delay = 1.76>
ST_49 : Operation 964 [1/1] (3.75ns)   --->   "%tmp_2_18 = call fastcc i32 @EP1(i32 %e_1_18)" [sha256_impl.c:273]   --->   Operation 964 'call' 'tmp_2_18' <Predicate = (trunc_ln269)> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_49 : Operation 965 [1/1] (2.97ns)   --->   "%tmp_3_18 = call fastcc i32 @CH(i32 %e_1_18, i32 %f_1_18, i32 %f_1_17)" [sha256_impl.c:273]   --->   Operation 965 'call' 'tmp_3_18' <Predicate = (trunc_ln269)> <Delay = 2.97> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_49 : Operation 966 [1/1] (3.75ns)   --->   "%tmp_4_18 = call fastcc i32 @EP0(i32 %a_1_18)" [sha256_impl.c:275]   --->   Operation 966 'call' 'tmp_4_18' <Predicate = (trunc_ln269)> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_49 : Operation 967 [1/1] (1.69ns)   --->   "%tmp_5_18 = call fastcc i32 @MAJ(i32 %a_1_18, i32 %b_1_18, i32 %c_1_18)" [sha256_impl.c:275]   --->   Operation 967 'call' 'tmp_5_18' <Predicate = (trunc_ln269)> <Delay = 1.69> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 50 <SV = 49> <Delay = 8.74>
ST_50 : Operation 968 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln273_76 = add i32 %tmp_3_18, %f_1_16" [sha256_impl.c:273]   --->   Operation 968 'add' 'add_ln273_76' <Predicate = (trunc_ln269)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_50 : Operation 969 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln273_77 = add i32 %m_19, 604807628" [sha256_impl.c:273]   --->   Operation 969 'add' 'add_ln273_77' <Predicate = (trunc_ln269)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_50 : Operation 970 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%add_ln273_78 = add i32 %add_ln273_77, %tmp_2_18" [sha256_impl.c:273]   --->   Operation 970 'add' 'add_ln273_78' <Predicate = (trunc_ln269)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_50 : Operation 971 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%add_ln273_79 = add i32 %add_ln273_78, %add_ln273_76" [sha256_impl.c:273]   --->   Operation 971 'add' 'add_ln273_79' <Predicate = (trunc_ln269)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>

State 51 <SV = 50> <Delay = 7.83>
ST_51 : Operation 972 [1/1] (2.55ns)   --->   "%add_ln279_19 = add i32 %add_ln273_79, %c_1_17" [sha256_impl.c:279]   --->   Operation 972 'add' 'add_ln279_19' <Predicate = (trunc_ln269)> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_51 : Operation 973 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln283_83 = add i32 %add_ln273_79, %tmp_5_18" [sha256_impl.c:283]   --->   Operation 973 'add' 'add_ln283_83' <Predicate = (trunc_ln269)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_51 : Operation 974 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%add_ln283_19 = add i32 %add_ln283_83, %tmp_4_18" [sha256_impl.c:283]   --->   Operation 974 'add' 'add_ln283_19' <Predicate = (trunc_ln269)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_51 : Operation 975 [1/1] (1.76ns)   --->   "br label %38" [sha256_impl.c:285]   --->   Operation 975 'br' <Predicate = (trunc_ln269)> <Delay = 1.76>
ST_51 : Operation 976 [1/1] (0.00ns)   --->   "%c_1_19 = phi i32 [ %b_1_18, %39 ], [ 0, %36 ]" [sha256_impl.c:283]   --->   Operation 976 'phi' 'c_1_19' <Predicate = true> <Delay = 0.00>
ST_51 : Operation 977 [1/1] (0.00ns)   --->   "%b_1_19 = phi i32 [ %a_1_18, %39 ], [ 0, %36 ]" [sha256_impl.c:283]   --->   Operation 977 'phi' 'b_1_19' <Predicate = true> <Delay = 0.00>
ST_51 : Operation 978 [1/1] (0.00ns)   --->   "%a_1_19 = phi i32 [ %add_ln283_19, %39 ], [ 0, %36 ]" [sha256_impl.c:283]   --->   Operation 978 'phi' 'a_1_19' <Predicate = true> <Delay = 0.00>
ST_51 : Operation 979 [1/1] (1.76ns)   --->   "br i1 %trunc_ln269, label %41, label %40" [sha256_impl.c:271]   --->   Operation 979 'br' <Predicate = true> <Delay = 1.76>
ST_51 : Operation 980 [1/1] (1.69ns)   --->   "%tmp_5_19 = call fastcc i32 @MAJ(i32 %a_1_19, i32 %b_1_19, i32 %c_1_19)" [sha256_impl.c:275]   --->   Operation 980 'call' 'tmp_5_19' <Predicate = (trunc_ln269)> <Delay = 1.69> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 52 <SV = 51> <Delay = 8.12>
ST_52 : Operation 981 [1/1] (0.00ns)   --->   "%f_1_19 = phi i32 [ %e_1_18, %39 ], [ %c_1_17, %36 ]" [sha256_impl.c:279]   --->   Operation 981 'phi' 'f_1_19' <Predicate = true> <Delay = 0.00>
ST_52 : Operation 982 [1/1] (0.00ns)   --->   "%e_1_19 = phi i32 [ %add_ln279_19, %39 ], [ %c_1_17, %36 ]" [sha256_impl.c:279]   --->   Operation 982 'phi' 'e_1_19' <Predicate = true> <Delay = 0.00>
ST_52 : Operation 983 [1/1] (3.75ns)   --->   "%tmp_2_19 = call fastcc i32 @EP1(i32 %e_1_19)" [sha256_impl.c:273]   --->   Operation 983 'call' 'tmp_2_19' <Predicate = (trunc_ln269)> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_52 : Operation 984 [1/1] (2.97ns)   --->   "%tmp_3_19 = call fastcc i32 @CH(i32 %e_1_19, i32 %f_1_19, i32 %f_1_18)" [sha256_impl.c:273]   --->   Operation 984 'call' 'tmp_3_19' <Predicate = (trunc_ln269)> <Delay = 2.97> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_52 : Operation 985 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln273_81 = add i32 %m_20, 770255983" [sha256_impl.c:273]   --->   Operation 985 'add' 'add_ln273_81' <Predicate = (trunc_ln269)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_52 : Operation 986 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%add_ln273_82 = add i32 %add_ln273_81, %tmp_2_19" [sha256_impl.c:273]   --->   Operation 986 'add' 'add_ln273_82' <Predicate = (trunc_ln269)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_52 : Operation 987 [1/1] (3.75ns)   --->   "%tmp_4_19 = call fastcc i32 @EP0(i32 %a_1_19)" [sha256_impl.c:275]   --->   Operation 987 'call' 'tmp_4_19' <Predicate = (trunc_ln269)> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 53 <SV = 52> <Delay = 8.74>
ST_53 : Operation 988 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln273_80 = add i32 %tmp_3_19, %f_1_17" [sha256_impl.c:273]   --->   Operation 988 'add' 'add_ln273_80' <Predicate = (trunc_ln269)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_53 : Operation 989 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%add_ln273_83 = add i32 %add_ln273_82, %add_ln273_80" [sha256_impl.c:273]   --->   Operation 989 'add' 'add_ln273_83' <Predicate = (trunc_ln269)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_53 : Operation 990 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln283_84 = add i32 %add_ln273_83, %tmp_5_19" [sha256_impl.c:283]   --->   Operation 990 'add' 'add_ln283_84' <Predicate = (trunc_ln269)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_53 : Operation 991 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%add_ln283_20 = add i32 %add_ln283_84, %tmp_4_19" [sha256_impl.c:283]   --->   Operation 991 'add' 'add_ln283_20' <Predicate = (trunc_ln269)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>

State 54 <SV = 53> <Delay = 8.07>
ST_54 : Operation 992 [1/1] (2.55ns)   --->   "%add_ln279_20 = add i32 %add_ln273_83, %c_1_18" [sha256_impl.c:279]   --->   Operation 992 'add' 'add_ln279_20' <Predicate = (trunc_ln269)> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_54 : Operation 993 [1/1] (1.76ns)   --->   "br label %40" [sha256_impl.c:285]   --->   Operation 993 'br' <Predicate = (trunc_ln269)> <Delay = 1.76>
ST_54 : Operation 994 [1/1] (0.00ns)   --->   "%f_1_20 = phi i32 [ %e_1_19, %41 ], [ %c_1_18, %38 ]" [sha256_impl.c:279]   --->   Operation 994 'phi' 'f_1_20' <Predicate = true> <Delay = 0.00>
ST_54 : Operation 995 [1/1] (0.00ns)   --->   "%e_1_20 = phi i32 [ %add_ln279_20, %41 ], [ %c_1_18, %38 ]" [sha256_impl.c:279]   --->   Operation 995 'phi' 'e_1_20' <Predicate = true> <Delay = 0.00>
ST_54 : Operation 996 [1/1] (0.00ns)   --->   "%c_1_20 = phi i32 [ %b_1_19, %41 ], [ 0, %38 ]" [sha256_impl.c:283]   --->   Operation 996 'phi' 'c_1_20' <Predicate = true> <Delay = 0.00>
ST_54 : Operation 997 [1/1] (0.00ns)   --->   "%b_1_20 = phi i32 [ %a_1_19, %41 ], [ 0, %38 ]" [sha256_impl.c:283]   --->   Operation 997 'phi' 'b_1_20' <Predicate = true> <Delay = 0.00>
ST_54 : Operation 998 [1/1] (0.00ns)   --->   "%a_1_20 = phi i32 [ %add_ln283_20, %41 ], [ 0, %38 ]" [sha256_impl.c:283]   --->   Operation 998 'phi' 'a_1_20' <Predicate = true> <Delay = 0.00>
ST_54 : Operation 999 [1/1] (1.76ns)   --->   "br i1 %trunc_ln269, label %43, label %42" [sha256_impl.c:271]   --->   Operation 999 'br' <Predicate = true> <Delay = 1.76>
ST_54 : Operation 1000 [1/1] (3.75ns)   --->   "%tmp_2_20 = call fastcc i32 @EP1(i32 %e_1_20)" [sha256_impl.c:273]   --->   Operation 1000 'call' 'tmp_2_20' <Predicate = (trunc_ln269)> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_54 : Operation 1001 [1/1] (2.97ns)   --->   "%tmp_3_20 = call fastcc i32 @CH(i32 %e_1_20, i32 %f_1_20, i32 %f_1_19)" [sha256_impl.c:273]   --->   Operation 1001 'call' 'tmp_3_20' <Predicate = (trunc_ln269)> <Delay = 2.97> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_54 : Operation 1002 [1/1] (3.75ns)   --->   "%tmp_4_20 = call fastcc i32 @EP0(i32 %a_1_20)" [sha256_impl.c:275]   --->   Operation 1002 'call' 'tmp_4_20' <Predicate = (trunc_ln269)> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_54 : Operation 1003 [1/1] (1.69ns)   --->   "%tmp_5_20 = call fastcc i32 @MAJ(i32 %a_1_20, i32 %b_1_20, i32 %c_1_20)" [sha256_impl.c:275]   --->   Operation 1003 'call' 'tmp_5_20' <Predicate = (trunc_ln269)> <Delay = 1.69> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 55 <SV = 54> <Delay = 8.74>
ST_55 : Operation 1004 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln273_84 = add i32 %tmp_3_20, %f_1_18" [sha256_impl.c:273]   --->   Operation 1004 'add' 'add_ln273_84' <Predicate = (trunc_ln269)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_55 : Operation 1005 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln273_85 = add i32 %m_21, 1249150122" [sha256_impl.c:273]   --->   Operation 1005 'add' 'add_ln273_85' <Predicate = (trunc_ln269)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_55 : Operation 1006 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%add_ln273_86 = add i32 %add_ln273_85, %tmp_2_20" [sha256_impl.c:273]   --->   Operation 1006 'add' 'add_ln273_86' <Predicate = (trunc_ln269)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_55 : Operation 1007 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%add_ln273_87 = add i32 %add_ln273_86, %add_ln273_84" [sha256_impl.c:273]   --->   Operation 1007 'add' 'add_ln273_87' <Predicate = (trunc_ln269)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>

State 56 <SV = 55> <Delay = 7.83>
ST_56 : Operation 1008 [1/1] (2.55ns)   --->   "%add_ln279_21 = add i32 %add_ln273_87, %c_1_19" [sha256_impl.c:279]   --->   Operation 1008 'add' 'add_ln279_21' <Predicate = (trunc_ln269)> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_56 : Operation 1009 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln283_85 = add i32 %add_ln273_87, %tmp_5_20" [sha256_impl.c:283]   --->   Operation 1009 'add' 'add_ln283_85' <Predicate = (trunc_ln269)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_56 : Operation 1010 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%add_ln283_21 = add i32 %add_ln283_85, %tmp_4_20" [sha256_impl.c:283]   --->   Operation 1010 'add' 'add_ln283_21' <Predicate = (trunc_ln269)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_56 : Operation 1011 [1/1] (1.76ns)   --->   "br label %42" [sha256_impl.c:285]   --->   Operation 1011 'br' <Predicate = (trunc_ln269)> <Delay = 1.76>
ST_56 : Operation 1012 [1/1] (0.00ns)   --->   "%c_1_21 = phi i32 [ %b_1_20, %43 ], [ 0, %40 ]" [sha256_impl.c:283]   --->   Operation 1012 'phi' 'c_1_21' <Predicate = true> <Delay = 0.00>
ST_56 : Operation 1013 [1/1] (0.00ns)   --->   "%b_1_21 = phi i32 [ %a_1_20, %43 ], [ 0, %40 ]" [sha256_impl.c:283]   --->   Operation 1013 'phi' 'b_1_21' <Predicate = true> <Delay = 0.00>
ST_56 : Operation 1014 [1/1] (0.00ns)   --->   "%a_1_21 = phi i32 [ %add_ln283_21, %43 ], [ 0, %40 ]" [sha256_impl.c:283]   --->   Operation 1014 'phi' 'a_1_21' <Predicate = true> <Delay = 0.00>
ST_56 : Operation 1015 [1/1] (1.76ns)   --->   "br i1 %trunc_ln269, label %45, label %44" [sha256_impl.c:271]   --->   Operation 1015 'br' <Predicate = true> <Delay = 1.76>
ST_56 : Operation 1016 [1/1] (1.69ns)   --->   "%tmp_5_21 = call fastcc i32 @MAJ(i32 %a_1_21, i32 %b_1_21, i32 %c_1_21)" [sha256_impl.c:275]   --->   Operation 1016 'call' 'tmp_5_21' <Predicate = (trunc_ln269)> <Delay = 1.69> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 57 <SV = 56> <Delay = 8.12>
ST_57 : Operation 1017 [1/1] (0.00ns)   --->   "%f_1_21 = phi i32 [ %e_1_20, %43 ], [ %c_1_19, %40 ]" [sha256_impl.c:279]   --->   Operation 1017 'phi' 'f_1_21' <Predicate = true> <Delay = 0.00>
ST_57 : Operation 1018 [1/1] (0.00ns)   --->   "%e_1_21 = phi i32 [ %add_ln279_21, %43 ], [ %c_1_19, %40 ]" [sha256_impl.c:279]   --->   Operation 1018 'phi' 'e_1_21' <Predicate = true> <Delay = 0.00>
ST_57 : Operation 1019 [1/1] (3.75ns)   --->   "%tmp_2_21 = call fastcc i32 @EP1(i32 %e_1_21)" [sha256_impl.c:273]   --->   Operation 1019 'call' 'tmp_2_21' <Predicate = (trunc_ln269)> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_57 : Operation 1020 [1/1] (2.97ns)   --->   "%tmp_3_21 = call fastcc i32 @CH(i32 %e_1_21, i32 %f_1_21, i32 %f_1_20)" [sha256_impl.c:273]   --->   Operation 1020 'call' 'tmp_3_21' <Predicate = (trunc_ln269)> <Delay = 2.97> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_57 : Operation 1021 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln273_89 = add i32 %m_22, 1555081692" [sha256_impl.c:273]   --->   Operation 1021 'add' 'add_ln273_89' <Predicate = (trunc_ln269)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_57 : Operation 1022 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%add_ln273_90 = add i32 %add_ln273_89, %tmp_2_21" [sha256_impl.c:273]   --->   Operation 1022 'add' 'add_ln273_90' <Predicate = (trunc_ln269)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_57 : Operation 1023 [1/1] (3.75ns)   --->   "%tmp_4_21 = call fastcc i32 @EP0(i32 %a_1_21)" [sha256_impl.c:275]   --->   Operation 1023 'call' 'tmp_4_21' <Predicate = (trunc_ln269)> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 58 <SV = 57> <Delay = 8.74>
ST_58 : Operation 1024 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln273_88 = add i32 %tmp_3_21, %f_1_19" [sha256_impl.c:273]   --->   Operation 1024 'add' 'add_ln273_88' <Predicate = (trunc_ln269)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_58 : Operation 1025 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%add_ln273_91 = add i32 %add_ln273_90, %add_ln273_88" [sha256_impl.c:273]   --->   Operation 1025 'add' 'add_ln273_91' <Predicate = (trunc_ln269)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_58 : Operation 1026 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln283_86 = add i32 %add_ln273_91, %tmp_5_21" [sha256_impl.c:283]   --->   Operation 1026 'add' 'add_ln283_86' <Predicate = (trunc_ln269)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_58 : Operation 1027 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%add_ln283_22 = add i32 %add_ln283_86, %tmp_4_21" [sha256_impl.c:283]   --->   Operation 1027 'add' 'add_ln283_22' <Predicate = (trunc_ln269)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>

State 59 <SV = 58> <Delay = 8.07>
ST_59 : Operation 1028 [1/1] (2.55ns)   --->   "%add_ln279_22 = add i32 %add_ln273_91, %c_1_20" [sha256_impl.c:279]   --->   Operation 1028 'add' 'add_ln279_22' <Predicate = (trunc_ln269)> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_59 : Operation 1029 [1/1] (1.76ns)   --->   "br label %44" [sha256_impl.c:285]   --->   Operation 1029 'br' <Predicate = (trunc_ln269)> <Delay = 1.76>
ST_59 : Operation 1030 [1/1] (0.00ns)   --->   "%f_1_22 = phi i32 [ %e_1_21, %45 ], [ %c_1_20, %42 ]" [sha256_impl.c:279]   --->   Operation 1030 'phi' 'f_1_22' <Predicate = true> <Delay = 0.00>
ST_59 : Operation 1031 [1/1] (0.00ns)   --->   "%e_1_22 = phi i32 [ %add_ln279_22, %45 ], [ %c_1_20, %42 ]" [sha256_impl.c:279]   --->   Operation 1031 'phi' 'e_1_22' <Predicate = true> <Delay = 0.00>
ST_59 : Operation 1032 [1/1] (0.00ns)   --->   "%c_1_22 = phi i32 [ %b_1_21, %45 ], [ 0, %42 ]" [sha256_impl.c:283]   --->   Operation 1032 'phi' 'c_1_22' <Predicate = true> <Delay = 0.00>
ST_59 : Operation 1033 [1/1] (0.00ns)   --->   "%b_1_22 = phi i32 [ %a_1_21, %45 ], [ 0, %42 ]" [sha256_impl.c:283]   --->   Operation 1033 'phi' 'b_1_22' <Predicate = true> <Delay = 0.00>
ST_59 : Operation 1034 [1/1] (0.00ns)   --->   "%a_1_22 = phi i32 [ %add_ln283_22, %45 ], [ 0, %42 ]" [sha256_impl.c:283]   --->   Operation 1034 'phi' 'a_1_22' <Predicate = true> <Delay = 0.00>
ST_59 : Operation 1035 [1/1] (1.76ns)   --->   "br i1 %trunc_ln269, label %47, label %46" [sha256_impl.c:271]   --->   Operation 1035 'br' <Predicate = true> <Delay = 1.76>
ST_59 : Operation 1036 [1/1] (3.75ns)   --->   "%tmp_2_22 = call fastcc i32 @EP1(i32 %e_1_22)" [sha256_impl.c:273]   --->   Operation 1036 'call' 'tmp_2_22' <Predicate = (trunc_ln269)> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_59 : Operation 1037 [1/1] (2.97ns)   --->   "%tmp_3_22 = call fastcc i32 @CH(i32 %e_1_22, i32 %f_1_22, i32 %f_1_21)" [sha256_impl.c:273]   --->   Operation 1037 'call' 'tmp_3_22' <Predicate = (trunc_ln269)> <Delay = 2.97> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_59 : Operation 1038 [1/1] (3.75ns)   --->   "%tmp_4_22 = call fastcc i32 @EP0(i32 %a_1_22)" [sha256_impl.c:275]   --->   Operation 1038 'call' 'tmp_4_22' <Predicate = (trunc_ln269)> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_59 : Operation 1039 [1/1] (1.69ns)   --->   "%tmp_5_22 = call fastcc i32 @MAJ(i32 %a_1_22, i32 %b_1_22, i32 %c_1_22)" [sha256_impl.c:275]   --->   Operation 1039 'call' 'tmp_5_22' <Predicate = (trunc_ln269)> <Delay = 1.69> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 60 <SV = 59> <Delay = 8.74>
ST_60 : Operation 1040 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln273_92 = add i32 %tmp_3_22, %f_1_20" [sha256_impl.c:273]   --->   Operation 1040 'add' 'add_ln273_92' <Predicate = (trunc_ln269)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_60 : Operation 1041 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln273_93 = add i32 %m_23, 1996064986" [sha256_impl.c:273]   --->   Operation 1041 'add' 'add_ln273_93' <Predicate = (trunc_ln269)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_60 : Operation 1042 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%add_ln273_94 = add i32 %add_ln273_93, %tmp_2_22" [sha256_impl.c:273]   --->   Operation 1042 'add' 'add_ln273_94' <Predicate = (trunc_ln269)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_60 : Operation 1043 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%add_ln273_95 = add i32 %add_ln273_94, %add_ln273_92" [sha256_impl.c:273]   --->   Operation 1043 'add' 'add_ln273_95' <Predicate = (trunc_ln269)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>

State 61 <SV = 60> <Delay = 7.83>
ST_61 : Operation 1044 [1/1] (2.55ns)   --->   "%add_ln279_23 = add i32 %add_ln273_95, %c_1_21" [sha256_impl.c:279]   --->   Operation 1044 'add' 'add_ln279_23' <Predicate = (trunc_ln269)> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_61 : Operation 1045 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln283_87 = add i32 %add_ln273_95, %tmp_5_22" [sha256_impl.c:283]   --->   Operation 1045 'add' 'add_ln283_87' <Predicate = (trunc_ln269)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_61 : Operation 1046 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%add_ln283_23 = add i32 %add_ln283_87, %tmp_4_22" [sha256_impl.c:283]   --->   Operation 1046 'add' 'add_ln283_23' <Predicate = (trunc_ln269)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_61 : Operation 1047 [1/1] (1.76ns)   --->   "br label %46" [sha256_impl.c:285]   --->   Operation 1047 'br' <Predicate = (trunc_ln269)> <Delay = 1.76>
ST_61 : Operation 1048 [1/1] (0.00ns)   --->   "%c_1_23 = phi i32 [ %b_1_22, %47 ], [ 0, %44 ]" [sha256_impl.c:283]   --->   Operation 1048 'phi' 'c_1_23' <Predicate = true> <Delay = 0.00>
ST_61 : Operation 1049 [1/1] (0.00ns)   --->   "%b_1_23 = phi i32 [ %a_1_22, %47 ], [ 0, %44 ]" [sha256_impl.c:283]   --->   Operation 1049 'phi' 'b_1_23' <Predicate = true> <Delay = 0.00>
ST_61 : Operation 1050 [1/1] (0.00ns)   --->   "%a_1_23 = phi i32 [ %add_ln283_23, %47 ], [ 0, %44 ]" [sha256_impl.c:283]   --->   Operation 1050 'phi' 'a_1_23' <Predicate = true> <Delay = 0.00>
ST_61 : Operation 1051 [1/1] (1.76ns)   --->   "br i1 %trunc_ln269, label %49, label %48" [sha256_impl.c:271]   --->   Operation 1051 'br' <Predicate = true> <Delay = 1.76>
ST_61 : Operation 1052 [1/1] (1.69ns)   --->   "%tmp_5_23 = call fastcc i32 @MAJ(i32 %a_1_23, i32 %b_1_23, i32 %c_1_23)" [sha256_impl.c:275]   --->   Operation 1052 'call' 'tmp_5_23' <Predicate = (trunc_ln269)> <Delay = 1.69> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 62 <SV = 61> <Delay = 8.12>
ST_62 : Operation 1053 [1/1] (0.00ns)   --->   "%f_1_23 = phi i32 [ %e_1_22, %47 ], [ %c_1_21, %44 ]" [sha256_impl.c:279]   --->   Operation 1053 'phi' 'f_1_23' <Predicate = true> <Delay = 0.00>
ST_62 : Operation 1054 [1/1] (0.00ns)   --->   "%e_1_23 = phi i32 [ %add_ln279_23, %47 ], [ %c_1_21, %44 ]" [sha256_impl.c:279]   --->   Operation 1054 'phi' 'e_1_23' <Predicate = true> <Delay = 0.00>
ST_62 : Operation 1055 [1/1] (3.75ns)   --->   "%tmp_2_23 = call fastcc i32 @EP1(i32 %e_1_23)" [sha256_impl.c:273]   --->   Operation 1055 'call' 'tmp_2_23' <Predicate = (trunc_ln269)> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_62 : Operation 1056 [1/1] (2.97ns)   --->   "%tmp_3_23 = call fastcc i32 @CH(i32 %e_1_23, i32 %f_1_23, i32 %f_1_22)" [sha256_impl.c:273]   --->   Operation 1056 'call' 'tmp_3_23' <Predicate = (trunc_ln269)> <Delay = 2.97> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_62 : Operation 1057 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln273_97 = add i32 %tmp_2_23, %m_24" [sha256_impl.c:273]   --->   Operation 1057 'add' 'add_ln273_97' <Predicate = (trunc_ln269)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_62 : Operation 1058 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%add_ln273_98 = add i32 %add_ln273_97, %f_1_21" [sha256_impl.c:273]   --->   Operation 1058 'add' 'add_ln273_98' <Predicate = (trunc_ln269)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_62 : Operation 1059 [1/1] (3.75ns)   --->   "%tmp_4_23 = call fastcc i32 @EP0(i32 %a_1_23)" [sha256_impl.c:275]   --->   Operation 1059 'call' 'tmp_4_23' <Predicate = (trunc_ln269)> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 63 <SV = 62> <Delay = 8.74>
ST_63 : Operation 1060 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln273_96 = add i32 %tmp_3_23, -1740746414" [sha256_impl.c:273]   --->   Operation 1060 'add' 'add_ln273_96' <Predicate = (trunc_ln269)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_63 : Operation 1061 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%add_ln273_99 = add i32 %add_ln273_98, %add_ln273_96" [sha256_impl.c:273]   --->   Operation 1061 'add' 'add_ln273_99' <Predicate = (trunc_ln269)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_63 : Operation 1062 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln283_88 = add i32 %add_ln273_99, %tmp_5_23" [sha256_impl.c:283]   --->   Operation 1062 'add' 'add_ln283_88' <Predicate = (trunc_ln269)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_63 : Operation 1063 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%add_ln283_24 = add i32 %add_ln283_88, %tmp_4_23" [sha256_impl.c:283]   --->   Operation 1063 'add' 'add_ln283_24' <Predicate = (trunc_ln269)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>

State 64 <SV = 63> <Delay = 8.07>
ST_64 : Operation 1064 [1/1] (2.55ns)   --->   "%add_ln279_24 = add i32 %add_ln273_99, %c_1_22" [sha256_impl.c:279]   --->   Operation 1064 'add' 'add_ln279_24' <Predicate = (trunc_ln269)> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_64 : Operation 1065 [1/1] (1.76ns)   --->   "br label %48" [sha256_impl.c:285]   --->   Operation 1065 'br' <Predicate = (trunc_ln269)> <Delay = 1.76>
ST_64 : Operation 1066 [1/1] (0.00ns)   --->   "%f_1_24 = phi i32 [ %e_1_23, %49 ], [ %c_1_22, %46 ]" [sha256_impl.c:279]   --->   Operation 1066 'phi' 'f_1_24' <Predicate = true> <Delay = 0.00>
ST_64 : Operation 1067 [1/1] (0.00ns)   --->   "%e_1_24 = phi i32 [ %add_ln279_24, %49 ], [ %c_1_22, %46 ]" [sha256_impl.c:279]   --->   Operation 1067 'phi' 'e_1_24' <Predicate = true> <Delay = 0.00>
ST_64 : Operation 1068 [1/1] (0.00ns)   --->   "%c_1_24 = phi i32 [ %b_1_23, %49 ], [ 0, %46 ]" [sha256_impl.c:283]   --->   Operation 1068 'phi' 'c_1_24' <Predicate = true> <Delay = 0.00>
ST_64 : Operation 1069 [1/1] (0.00ns)   --->   "%b_1_24 = phi i32 [ %a_1_23, %49 ], [ 0, %46 ]" [sha256_impl.c:283]   --->   Operation 1069 'phi' 'b_1_24' <Predicate = true> <Delay = 0.00>
ST_64 : Operation 1070 [1/1] (0.00ns)   --->   "%a_1_24 = phi i32 [ %add_ln283_24, %49 ], [ 0, %46 ]" [sha256_impl.c:283]   --->   Operation 1070 'phi' 'a_1_24' <Predicate = true> <Delay = 0.00>
ST_64 : Operation 1071 [1/1] (1.76ns)   --->   "br i1 %trunc_ln269, label %51, label %50" [sha256_impl.c:271]   --->   Operation 1071 'br' <Predicate = true> <Delay = 1.76>
ST_64 : Operation 1072 [1/1] (3.75ns)   --->   "%tmp_2_24 = call fastcc i32 @EP1(i32 %e_1_24)" [sha256_impl.c:273]   --->   Operation 1072 'call' 'tmp_2_24' <Predicate = (trunc_ln269)> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_64 : Operation 1073 [1/1] (2.97ns)   --->   "%tmp_3_24 = call fastcc i32 @CH(i32 %e_1_24, i32 %f_1_24, i32 %f_1_23)" [sha256_impl.c:273]   --->   Operation 1073 'call' 'tmp_3_24' <Predicate = (trunc_ln269)> <Delay = 2.97> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_64 : Operation 1074 [1/1] (3.75ns)   --->   "%tmp_4_24 = call fastcc i32 @EP0(i32 %a_1_24)" [sha256_impl.c:275]   --->   Operation 1074 'call' 'tmp_4_24' <Predicate = (trunc_ln269)> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_64 : Operation 1075 [1/1] (1.69ns)   --->   "%tmp_5_24 = call fastcc i32 @MAJ(i32 %a_1_24, i32 %b_1_24, i32 %c_1_24)" [sha256_impl.c:275]   --->   Operation 1075 'call' 'tmp_5_24' <Predicate = (trunc_ln269)> <Delay = 1.69> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 65 <SV = 64> <Delay = 8.74>
ST_65 : Operation 1076 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln273_100 = add i32 %tmp_3_24, -1473132947" [sha256_impl.c:273]   --->   Operation 1076 'add' 'add_ln273_100' <Predicate = (trunc_ln269)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_65 : Operation 1077 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln273_101 = add i32 %tmp_2_24, %m_25" [sha256_impl.c:273]   --->   Operation 1077 'add' 'add_ln273_101' <Predicate = (trunc_ln269)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_65 : Operation 1078 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%add_ln273_102 = add i32 %add_ln273_101, %f_1_22" [sha256_impl.c:273]   --->   Operation 1078 'add' 'add_ln273_102' <Predicate = (trunc_ln269)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_65 : Operation 1079 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%add_ln273_103 = add i32 %add_ln273_102, %add_ln273_100" [sha256_impl.c:273]   --->   Operation 1079 'add' 'add_ln273_103' <Predicate = (trunc_ln269)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>

State 66 <SV = 65> <Delay = 7.83>
ST_66 : Operation 1080 [1/1] (2.55ns)   --->   "%add_ln279_25 = add i32 %add_ln273_103, %c_1_23" [sha256_impl.c:279]   --->   Operation 1080 'add' 'add_ln279_25' <Predicate = (trunc_ln269)> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_66 : Operation 1081 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln283_89 = add i32 %add_ln273_103, %tmp_5_24" [sha256_impl.c:283]   --->   Operation 1081 'add' 'add_ln283_89' <Predicate = (trunc_ln269)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_66 : Operation 1082 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%add_ln283_25 = add i32 %add_ln283_89, %tmp_4_24" [sha256_impl.c:283]   --->   Operation 1082 'add' 'add_ln283_25' <Predicate = (trunc_ln269)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_66 : Operation 1083 [1/1] (1.76ns)   --->   "br label %50" [sha256_impl.c:285]   --->   Operation 1083 'br' <Predicate = (trunc_ln269)> <Delay = 1.76>
ST_66 : Operation 1084 [1/1] (0.00ns)   --->   "%c_1_25 = phi i32 [ %b_1_24, %51 ], [ 0, %48 ]" [sha256_impl.c:283]   --->   Operation 1084 'phi' 'c_1_25' <Predicate = true> <Delay = 0.00>
ST_66 : Operation 1085 [1/1] (0.00ns)   --->   "%b_1_25 = phi i32 [ %a_1_24, %51 ], [ 0, %48 ]" [sha256_impl.c:283]   --->   Operation 1085 'phi' 'b_1_25' <Predicate = true> <Delay = 0.00>
ST_66 : Operation 1086 [1/1] (0.00ns)   --->   "%a_1_25 = phi i32 [ %add_ln283_25, %51 ], [ 0, %48 ]" [sha256_impl.c:283]   --->   Operation 1086 'phi' 'a_1_25' <Predicate = true> <Delay = 0.00>
ST_66 : Operation 1087 [1/1] (1.76ns)   --->   "br i1 %trunc_ln269, label %53, label %52" [sha256_impl.c:271]   --->   Operation 1087 'br' <Predicate = true> <Delay = 1.76>
ST_66 : Operation 1088 [1/1] (1.69ns)   --->   "%tmp_5_25 = call fastcc i32 @MAJ(i32 %a_1_25, i32 %b_1_25, i32 %c_1_25)" [sha256_impl.c:275]   --->   Operation 1088 'call' 'tmp_5_25' <Predicate = (trunc_ln269)> <Delay = 1.69> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 67 <SV = 66> <Delay = 8.12>
ST_67 : Operation 1089 [1/1] (0.00ns)   --->   "%f_1_25 = phi i32 [ %e_1_24, %51 ], [ %c_1_23, %48 ]" [sha256_impl.c:279]   --->   Operation 1089 'phi' 'f_1_25' <Predicate = true> <Delay = 0.00>
ST_67 : Operation 1090 [1/1] (0.00ns)   --->   "%e_1_25 = phi i32 [ %add_ln279_25, %51 ], [ %c_1_23, %48 ]" [sha256_impl.c:279]   --->   Operation 1090 'phi' 'e_1_25' <Predicate = true> <Delay = 0.00>
ST_67 : Operation 1091 [1/1] (3.75ns)   --->   "%tmp_2_25 = call fastcc i32 @EP1(i32 %e_1_25)" [sha256_impl.c:273]   --->   Operation 1091 'call' 'tmp_2_25' <Predicate = (trunc_ln269)> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_67 : Operation 1092 [1/1] (2.97ns)   --->   "%tmp_3_25 = call fastcc i32 @CH(i32 %e_1_25, i32 %f_1_25, i32 %f_1_24)" [sha256_impl.c:273]   --->   Operation 1092 'call' 'tmp_3_25' <Predicate = (trunc_ln269)> <Delay = 2.97> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_67 : Operation 1093 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln273_105 = add i32 %tmp_2_25, %m_26" [sha256_impl.c:273]   --->   Operation 1093 'add' 'add_ln273_105' <Predicate = (trunc_ln269)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_67 : Operation 1094 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%add_ln273_106 = add i32 %add_ln273_105, %f_1_23" [sha256_impl.c:273]   --->   Operation 1094 'add' 'add_ln273_106' <Predicate = (trunc_ln269)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_67 : Operation 1095 [1/1] (3.75ns)   --->   "%tmp_4_25 = call fastcc i32 @EP0(i32 %a_1_25)" [sha256_impl.c:275]   --->   Operation 1095 'call' 'tmp_4_25' <Predicate = (trunc_ln269)> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 68 <SV = 67> <Delay = 8.74>
ST_68 : Operation 1096 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln273_104 = add i32 %tmp_3_25, -1341970488" [sha256_impl.c:273]   --->   Operation 1096 'add' 'add_ln273_104' <Predicate = (trunc_ln269)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_68 : Operation 1097 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%add_ln273_107 = add i32 %add_ln273_106, %add_ln273_104" [sha256_impl.c:273]   --->   Operation 1097 'add' 'add_ln273_107' <Predicate = (trunc_ln269)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_68 : Operation 1098 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln283_90 = add i32 %add_ln273_107, %tmp_5_25" [sha256_impl.c:283]   --->   Operation 1098 'add' 'add_ln283_90' <Predicate = (trunc_ln269)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_68 : Operation 1099 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%add_ln283_26 = add i32 %add_ln283_90, %tmp_4_25" [sha256_impl.c:283]   --->   Operation 1099 'add' 'add_ln283_26' <Predicate = (trunc_ln269)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>

State 69 <SV = 68> <Delay = 8.07>
ST_69 : Operation 1100 [1/1] (2.55ns)   --->   "%add_ln279_26 = add i32 %add_ln273_107, %c_1_24" [sha256_impl.c:279]   --->   Operation 1100 'add' 'add_ln279_26' <Predicate = (trunc_ln269)> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_69 : Operation 1101 [1/1] (1.76ns)   --->   "br label %52" [sha256_impl.c:285]   --->   Operation 1101 'br' <Predicate = (trunc_ln269)> <Delay = 1.76>
ST_69 : Operation 1102 [1/1] (0.00ns)   --->   "%f_1_26 = phi i32 [ %e_1_25, %53 ], [ %c_1_24, %50 ]" [sha256_impl.c:279]   --->   Operation 1102 'phi' 'f_1_26' <Predicate = true> <Delay = 0.00>
ST_69 : Operation 1103 [1/1] (0.00ns)   --->   "%e_1_26 = phi i32 [ %add_ln279_26, %53 ], [ %c_1_24, %50 ]" [sha256_impl.c:279]   --->   Operation 1103 'phi' 'e_1_26' <Predicate = true> <Delay = 0.00>
ST_69 : Operation 1104 [1/1] (0.00ns)   --->   "%c_1_26 = phi i32 [ %b_1_25, %53 ], [ 0, %50 ]" [sha256_impl.c:283]   --->   Operation 1104 'phi' 'c_1_26' <Predicate = true> <Delay = 0.00>
ST_69 : Operation 1105 [1/1] (0.00ns)   --->   "%b_1_26 = phi i32 [ %a_1_25, %53 ], [ 0, %50 ]" [sha256_impl.c:283]   --->   Operation 1105 'phi' 'b_1_26' <Predicate = true> <Delay = 0.00>
ST_69 : Operation 1106 [1/1] (0.00ns)   --->   "%a_1_26 = phi i32 [ %add_ln283_26, %53 ], [ 0, %50 ]" [sha256_impl.c:283]   --->   Operation 1106 'phi' 'a_1_26' <Predicate = true> <Delay = 0.00>
ST_69 : Operation 1107 [1/1] (1.76ns)   --->   "br i1 %trunc_ln269, label %55, label %54" [sha256_impl.c:271]   --->   Operation 1107 'br' <Predicate = true> <Delay = 1.76>
ST_69 : Operation 1108 [1/1] (3.75ns)   --->   "%tmp_2_26 = call fastcc i32 @EP1(i32 %e_1_26)" [sha256_impl.c:273]   --->   Operation 1108 'call' 'tmp_2_26' <Predicate = (trunc_ln269)> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_69 : Operation 1109 [1/1] (2.97ns)   --->   "%tmp_3_26 = call fastcc i32 @CH(i32 %e_1_26, i32 %f_1_26, i32 %f_1_25)" [sha256_impl.c:273]   --->   Operation 1109 'call' 'tmp_3_26' <Predicate = (trunc_ln269)> <Delay = 2.97> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_69 : Operation 1110 [1/1] (3.75ns)   --->   "%tmp_4_26 = call fastcc i32 @EP0(i32 %a_1_26)" [sha256_impl.c:275]   --->   Operation 1110 'call' 'tmp_4_26' <Predicate = (trunc_ln269)> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_69 : Operation 1111 [1/1] (1.69ns)   --->   "%tmp_5_26 = call fastcc i32 @MAJ(i32 %a_1_26, i32 %b_1_26, i32 %c_1_26)" [sha256_impl.c:275]   --->   Operation 1111 'call' 'tmp_5_26' <Predicate = (trunc_ln269)> <Delay = 1.69> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 70 <SV = 69> <Delay = 8.74>
ST_70 : Operation 1112 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln273_108 = add i32 %tmp_3_26, -1084653625" [sha256_impl.c:273]   --->   Operation 1112 'add' 'add_ln273_108' <Predicate = (trunc_ln269)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_70 : Operation 1113 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln273_109 = add i32 %tmp_2_26, %m_27" [sha256_impl.c:273]   --->   Operation 1113 'add' 'add_ln273_109' <Predicate = (trunc_ln269)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_70 : Operation 1114 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%add_ln273_110 = add i32 %add_ln273_109, %f_1_24" [sha256_impl.c:273]   --->   Operation 1114 'add' 'add_ln273_110' <Predicate = (trunc_ln269)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_70 : Operation 1115 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%add_ln273_111 = add i32 %add_ln273_110, %add_ln273_108" [sha256_impl.c:273]   --->   Operation 1115 'add' 'add_ln273_111' <Predicate = (trunc_ln269)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>

State 71 <SV = 70> <Delay = 7.83>
ST_71 : Operation 1116 [1/1] (2.55ns)   --->   "%add_ln279_27 = add i32 %add_ln273_111, %c_1_25" [sha256_impl.c:279]   --->   Operation 1116 'add' 'add_ln279_27' <Predicate = (trunc_ln269)> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_71 : Operation 1117 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln283_91 = add i32 %add_ln273_111, %tmp_5_26" [sha256_impl.c:283]   --->   Operation 1117 'add' 'add_ln283_91' <Predicate = (trunc_ln269)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_71 : Operation 1118 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%add_ln283_27 = add i32 %add_ln283_91, %tmp_4_26" [sha256_impl.c:283]   --->   Operation 1118 'add' 'add_ln283_27' <Predicate = (trunc_ln269)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_71 : Operation 1119 [1/1] (1.76ns)   --->   "br label %54" [sha256_impl.c:285]   --->   Operation 1119 'br' <Predicate = (trunc_ln269)> <Delay = 1.76>
ST_71 : Operation 1120 [1/1] (0.00ns)   --->   "%c_1_27 = phi i32 [ %b_1_26, %55 ], [ 0, %52 ]" [sha256_impl.c:283]   --->   Operation 1120 'phi' 'c_1_27' <Predicate = true> <Delay = 0.00>
ST_71 : Operation 1121 [1/1] (0.00ns)   --->   "%b_1_27 = phi i32 [ %a_1_26, %55 ], [ 0, %52 ]" [sha256_impl.c:283]   --->   Operation 1121 'phi' 'b_1_27' <Predicate = true> <Delay = 0.00>
ST_71 : Operation 1122 [1/1] (0.00ns)   --->   "%a_1_27 = phi i32 [ %add_ln283_27, %55 ], [ 0, %52 ]" [sha256_impl.c:283]   --->   Operation 1122 'phi' 'a_1_27' <Predicate = true> <Delay = 0.00>
ST_71 : Operation 1123 [1/1] (1.76ns)   --->   "br i1 %trunc_ln269, label %57, label %56" [sha256_impl.c:271]   --->   Operation 1123 'br' <Predicate = true> <Delay = 1.76>
ST_71 : Operation 1124 [1/1] (1.69ns)   --->   "%tmp_5_27 = call fastcc i32 @MAJ(i32 %a_1_27, i32 %b_1_27, i32 %c_1_27)" [sha256_impl.c:275]   --->   Operation 1124 'call' 'tmp_5_27' <Predicate = (trunc_ln269)> <Delay = 1.69> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 72 <SV = 71> <Delay = 8.12>
ST_72 : Operation 1125 [1/1] (0.00ns)   --->   "%f_1_27 = phi i32 [ %e_1_26, %55 ], [ %c_1_25, %52 ]" [sha256_impl.c:279]   --->   Operation 1125 'phi' 'f_1_27' <Predicate = true> <Delay = 0.00>
ST_72 : Operation 1126 [1/1] (0.00ns)   --->   "%e_1_27 = phi i32 [ %add_ln279_27, %55 ], [ %c_1_25, %52 ]" [sha256_impl.c:279]   --->   Operation 1126 'phi' 'e_1_27' <Predicate = true> <Delay = 0.00>
ST_72 : Operation 1127 [1/1] (3.75ns)   --->   "%tmp_2_27 = call fastcc i32 @EP1(i32 %e_1_27)" [sha256_impl.c:273]   --->   Operation 1127 'call' 'tmp_2_27' <Predicate = (trunc_ln269)> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_72 : Operation 1128 [1/1] (2.97ns)   --->   "%tmp_3_27 = call fastcc i32 @CH(i32 %e_1_27, i32 %f_1_27, i32 %f_1_26)" [sha256_impl.c:273]   --->   Operation 1128 'call' 'tmp_3_27' <Predicate = (trunc_ln269)> <Delay = 2.97> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_72 : Operation 1129 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln273_113 = add i32 %m_28, -958395405" [sha256_impl.c:273]   --->   Operation 1129 'add' 'add_ln273_113' <Predicate = (trunc_ln269)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_72 : Operation 1130 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%add_ln273_114 = add i32 %add_ln273_113, %tmp_2_27" [sha256_impl.c:273]   --->   Operation 1130 'add' 'add_ln273_114' <Predicate = (trunc_ln269)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_72 : Operation 1131 [1/1] (3.75ns)   --->   "%tmp_4_27 = call fastcc i32 @EP0(i32 %a_1_27)" [sha256_impl.c:275]   --->   Operation 1131 'call' 'tmp_4_27' <Predicate = (trunc_ln269)> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 73 <SV = 72> <Delay = 8.74>
ST_73 : Operation 1132 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln273_112 = add i32 %tmp_3_27, %f_1_25" [sha256_impl.c:273]   --->   Operation 1132 'add' 'add_ln273_112' <Predicate = (trunc_ln269)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_73 : Operation 1133 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%add_ln273_115 = add i32 %add_ln273_114, %add_ln273_112" [sha256_impl.c:273]   --->   Operation 1133 'add' 'add_ln273_115' <Predicate = (trunc_ln269)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_73 : Operation 1134 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln283_92 = add i32 %add_ln273_115, %tmp_5_27" [sha256_impl.c:283]   --->   Operation 1134 'add' 'add_ln283_92' <Predicate = (trunc_ln269)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_73 : Operation 1135 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%add_ln283_28 = add i32 %add_ln283_92, %tmp_4_27" [sha256_impl.c:283]   --->   Operation 1135 'add' 'add_ln283_28' <Predicate = (trunc_ln269)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>

State 74 <SV = 73> <Delay = 8.07>
ST_74 : Operation 1136 [1/1] (2.55ns)   --->   "%add_ln279_28 = add i32 %add_ln273_115, %c_1_26" [sha256_impl.c:279]   --->   Operation 1136 'add' 'add_ln279_28' <Predicate = (trunc_ln269)> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_74 : Operation 1137 [1/1] (1.76ns)   --->   "br label %56" [sha256_impl.c:285]   --->   Operation 1137 'br' <Predicate = (trunc_ln269)> <Delay = 1.76>
ST_74 : Operation 1138 [1/1] (0.00ns)   --->   "%f_1_28 = phi i32 [ %e_1_27, %57 ], [ %c_1_26, %54 ]" [sha256_impl.c:279]   --->   Operation 1138 'phi' 'f_1_28' <Predicate = true> <Delay = 0.00>
ST_74 : Operation 1139 [1/1] (0.00ns)   --->   "%e_1_28 = phi i32 [ %add_ln279_28, %57 ], [ %c_1_26, %54 ]" [sha256_impl.c:279]   --->   Operation 1139 'phi' 'e_1_28' <Predicate = true> <Delay = 0.00>
ST_74 : Operation 1140 [1/1] (0.00ns)   --->   "%c_1_28 = phi i32 [ %b_1_27, %57 ], [ 0, %54 ]" [sha256_impl.c:283]   --->   Operation 1140 'phi' 'c_1_28' <Predicate = true> <Delay = 0.00>
ST_74 : Operation 1141 [1/1] (0.00ns)   --->   "%b_1_28 = phi i32 [ %a_1_27, %57 ], [ 0, %54 ]" [sha256_impl.c:283]   --->   Operation 1141 'phi' 'b_1_28' <Predicate = true> <Delay = 0.00>
ST_74 : Operation 1142 [1/1] (0.00ns)   --->   "%a_1_28 = phi i32 [ %add_ln283_28, %57 ], [ 0, %54 ]" [sha256_impl.c:283]   --->   Operation 1142 'phi' 'a_1_28' <Predicate = true> <Delay = 0.00>
ST_74 : Operation 1143 [1/1] (1.76ns)   --->   "br i1 %trunc_ln269, label %59, label %58" [sha256_impl.c:271]   --->   Operation 1143 'br' <Predicate = true> <Delay = 1.76>
ST_74 : Operation 1144 [1/1] (3.75ns)   --->   "%tmp_2_28 = call fastcc i32 @EP1(i32 %e_1_28)" [sha256_impl.c:273]   --->   Operation 1144 'call' 'tmp_2_28' <Predicate = (trunc_ln269)> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_74 : Operation 1145 [1/1] (2.97ns)   --->   "%tmp_3_28 = call fastcc i32 @CH(i32 %e_1_28, i32 %f_1_28, i32 %f_1_27)" [sha256_impl.c:273]   --->   Operation 1145 'call' 'tmp_3_28' <Predicate = (trunc_ln269)> <Delay = 2.97> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_74 : Operation 1146 [1/1] (3.75ns)   --->   "%tmp_4_28 = call fastcc i32 @EP0(i32 %a_1_28)" [sha256_impl.c:275]   --->   Operation 1146 'call' 'tmp_4_28' <Predicate = (trunc_ln269)> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_74 : Operation 1147 [1/1] (1.69ns)   --->   "%tmp_5_28 = call fastcc i32 @MAJ(i32 %a_1_28, i32 %b_1_28, i32 %c_1_28)" [sha256_impl.c:275]   --->   Operation 1147 'call' 'tmp_5_28' <Predicate = (trunc_ln269)> <Delay = 1.69> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 75 <SV = 74> <Delay = 8.74>
ST_75 : Operation 1148 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln273_116 = add i32 %tmp_3_28, %f_1_26" [sha256_impl.c:273]   --->   Operation 1148 'add' 'add_ln273_116' <Predicate = (trunc_ln269)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_75 : Operation 1149 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln273_117 = add i32 %m_29, -710438585" [sha256_impl.c:273]   --->   Operation 1149 'add' 'add_ln273_117' <Predicate = (trunc_ln269)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_75 : Operation 1150 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%add_ln273_118 = add i32 %add_ln273_117, %tmp_2_28" [sha256_impl.c:273]   --->   Operation 1150 'add' 'add_ln273_118' <Predicate = (trunc_ln269)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_75 : Operation 1151 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%add_ln273_119 = add i32 %add_ln273_118, %add_ln273_116" [sha256_impl.c:273]   --->   Operation 1151 'add' 'add_ln273_119' <Predicate = (trunc_ln269)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>

State 76 <SV = 75> <Delay = 7.83>
ST_76 : Operation 1152 [1/1] (2.55ns)   --->   "%add_ln279_29 = add i32 %add_ln273_119, %c_1_27" [sha256_impl.c:279]   --->   Operation 1152 'add' 'add_ln279_29' <Predicate = (trunc_ln269)> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_76 : Operation 1153 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln283_93 = add i32 %add_ln273_119, %tmp_5_28" [sha256_impl.c:283]   --->   Operation 1153 'add' 'add_ln283_93' <Predicate = (trunc_ln269)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_76 : Operation 1154 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%add_ln283_29 = add i32 %add_ln283_93, %tmp_4_28" [sha256_impl.c:283]   --->   Operation 1154 'add' 'add_ln283_29' <Predicate = (trunc_ln269)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_76 : Operation 1155 [1/1] (1.76ns)   --->   "br label %58" [sha256_impl.c:285]   --->   Operation 1155 'br' <Predicate = (trunc_ln269)> <Delay = 1.76>
ST_76 : Operation 1156 [1/1] (0.00ns)   --->   "%c_1_29 = phi i32 [ %b_1_28, %59 ], [ 0, %56 ]" [sha256_impl.c:283]   --->   Operation 1156 'phi' 'c_1_29' <Predicate = true> <Delay = 0.00>
ST_76 : Operation 1157 [1/1] (0.00ns)   --->   "%b_1_29 = phi i32 [ %a_1_28, %59 ], [ 0, %56 ]" [sha256_impl.c:283]   --->   Operation 1157 'phi' 'b_1_29' <Predicate = true> <Delay = 0.00>
ST_76 : Operation 1158 [1/1] (0.00ns)   --->   "%a_1_29 = phi i32 [ %add_ln283_29, %59 ], [ 0, %56 ]" [sha256_impl.c:283]   --->   Operation 1158 'phi' 'a_1_29' <Predicate = true> <Delay = 0.00>
ST_76 : Operation 1159 [1/1] (1.76ns)   --->   "br i1 %trunc_ln269, label %61, label %60" [sha256_impl.c:271]   --->   Operation 1159 'br' <Predicate = true> <Delay = 1.76>
ST_76 : Operation 1160 [1/1] (1.69ns)   --->   "%tmp_5_29 = call fastcc i32 @MAJ(i32 %a_1_29, i32 %b_1_29, i32 %c_1_29)" [sha256_impl.c:275]   --->   Operation 1160 'call' 'tmp_5_29' <Predicate = (trunc_ln269)> <Delay = 1.69> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 77 <SV = 76> <Delay = 8.12>
ST_77 : Operation 1161 [1/1] (0.00ns)   --->   "%f_1_29 = phi i32 [ %e_1_28, %59 ], [ %c_1_27, %56 ]" [sha256_impl.c:279]   --->   Operation 1161 'phi' 'f_1_29' <Predicate = true> <Delay = 0.00>
ST_77 : Operation 1162 [1/1] (0.00ns)   --->   "%e_1_29 = phi i32 [ %add_ln279_29, %59 ], [ %c_1_27, %56 ]" [sha256_impl.c:279]   --->   Operation 1162 'phi' 'e_1_29' <Predicate = true> <Delay = 0.00>
ST_77 : Operation 1163 [1/1] (3.75ns)   --->   "%tmp_2_29 = call fastcc i32 @EP1(i32 %e_1_29)" [sha256_impl.c:273]   --->   Operation 1163 'call' 'tmp_2_29' <Predicate = (trunc_ln269)> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_77 : Operation 1164 [1/1] (2.97ns)   --->   "%tmp_3_29 = call fastcc i32 @CH(i32 %e_1_29, i32 %f_1_29, i32 %f_1_28)" [sha256_impl.c:273]   --->   Operation 1164 'call' 'tmp_3_29' <Predicate = (trunc_ln269)> <Delay = 2.97> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_77 : Operation 1165 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln273_121 = add i32 %m_30, 113926993" [sha256_impl.c:273]   --->   Operation 1165 'add' 'add_ln273_121' <Predicate = (trunc_ln269)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_77 : Operation 1166 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%add_ln273_122 = add i32 %add_ln273_121, %tmp_2_29" [sha256_impl.c:273]   --->   Operation 1166 'add' 'add_ln273_122' <Predicate = (trunc_ln269)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_77 : Operation 1167 [1/1] (3.75ns)   --->   "%tmp_4_29 = call fastcc i32 @EP0(i32 %a_1_29)" [sha256_impl.c:275]   --->   Operation 1167 'call' 'tmp_4_29' <Predicate = (trunc_ln269)> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 78 <SV = 77> <Delay = 8.74>
ST_78 : Operation 1168 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln273_120 = add i32 %tmp_3_29, %f_1_27" [sha256_impl.c:273]   --->   Operation 1168 'add' 'add_ln273_120' <Predicate = (trunc_ln269)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_78 : Operation 1169 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%add_ln273_123 = add i32 %add_ln273_122, %add_ln273_120" [sha256_impl.c:273]   --->   Operation 1169 'add' 'add_ln273_123' <Predicate = (trunc_ln269)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_78 : Operation 1170 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln283_94 = add i32 %add_ln273_123, %tmp_5_29" [sha256_impl.c:283]   --->   Operation 1170 'add' 'add_ln283_94' <Predicate = (trunc_ln269)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_78 : Operation 1171 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%add_ln283_30 = add i32 %add_ln283_94, %tmp_4_29" [sha256_impl.c:283]   --->   Operation 1171 'add' 'add_ln283_30' <Predicate = (trunc_ln269)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>

State 79 <SV = 78> <Delay = 8.07>
ST_79 : Operation 1172 [1/1] (2.55ns)   --->   "%add_ln279_30 = add i32 %add_ln273_123, %c_1_28" [sha256_impl.c:279]   --->   Operation 1172 'add' 'add_ln279_30' <Predicate = (trunc_ln269)> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_79 : Operation 1173 [1/1] (1.76ns)   --->   "br label %60" [sha256_impl.c:285]   --->   Operation 1173 'br' <Predicate = (trunc_ln269)> <Delay = 1.76>
ST_79 : Operation 1174 [1/1] (0.00ns)   --->   "%f_1_30 = phi i32 [ %e_1_29, %61 ], [ %c_1_28, %58 ]" [sha256_impl.c:279]   --->   Operation 1174 'phi' 'f_1_30' <Predicate = true> <Delay = 0.00>
ST_79 : Operation 1175 [1/1] (0.00ns)   --->   "%e_1_30 = phi i32 [ %add_ln279_30, %61 ], [ %c_1_28, %58 ]" [sha256_impl.c:279]   --->   Operation 1175 'phi' 'e_1_30' <Predicate = true> <Delay = 0.00>
ST_79 : Operation 1176 [1/1] (0.00ns)   --->   "%c_1_30 = phi i32 [ %b_1_29, %61 ], [ 0, %58 ]" [sha256_impl.c:283]   --->   Operation 1176 'phi' 'c_1_30' <Predicate = true> <Delay = 0.00>
ST_79 : Operation 1177 [1/1] (0.00ns)   --->   "%b_1_30 = phi i32 [ %a_1_29, %61 ], [ 0, %58 ]" [sha256_impl.c:283]   --->   Operation 1177 'phi' 'b_1_30' <Predicate = true> <Delay = 0.00>
ST_79 : Operation 1178 [1/1] (0.00ns)   --->   "%a_1_30 = phi i32 [ %add_ln283_30, %61 ], [ 0, %58 ]" [sha256_impl.c:283]   --->   Operation 1178 'phi' 'a_1_30' <Predicate = true> <Delay = 0.00>
ST_79 : Operation 1179 [1/1] (1.76ns)   --->   "br i1 %trunc_ln269, label %63, label %62" [sha256_impl.c:271]   --->   Operation 1179 'br' <Predicate = true> <Delay = 1.76>
ST_79 : Operation 1180 [1/1] (3.75ns)   --->   "%tmp_2_30 = call fastcc i32 @EP1(i32 %e_1_30)" [sha256_impl.c:273]   --->   Operation 1180 'call' 'tmp_2_30' <Predicate = (trunc_ln269)> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_79 : Operation 1181 [1/1] (2.97ns)   --->   "%tmp_3_30 = call fastcc i32 @CH(i32 %e_1_30, i32 %f_1_30, i32 %f_1_29)" [sha256_impl.c:273]   --->   Operation 1181 'call' 'tmp_3_30' <Predicate = (trunc_ln269)> <Delay = 2.97> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_79 : Operation 1182 [1/1] (3.75ns)   --->   "%tmp_4_30 = call fastcc i32 @EP0(i32 %a_1_30)" [sha256_impl.c:275]   --->   Operation 1182 'call' 'tmp_4_30' <Predicate = (trunc_ln269)> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_79 : Operation 1183 [1/1] (1.69ns)   --->   "%tmp_5_30 = call fastcc i32 @MAJ(i32 %a_1_30, i32 %b_1_30, i32 %c_1_30)" [sha256_impl.c:275]   --->   Operation 1183 'call' 'tmp_5_30' <Predicate = (trunc_ln269)> <Delay = 1.69> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 80 <SV = 79> <Delay = 8.74>
ST_80 : Operation 1184 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln273_124 = add i32 %tmp_3_30, %f_1_28" [sha256_impl.c:273]   --->   Operation 1184 'add' 'add_ln273_124' <Predicate = (trunc_ln269)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_80 : Operation 1185 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln273_125 = add i32 %m_31, 338241895" [sha256_impl.c:273]   --->   Operation 1185 'add' 'add_ln273_125' <Predicate = (trunc_ln269)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_80 : Operation 1186 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%add_ln273_126 = add i32 %add_ln273_125, %tmp_2_30" [sha256_impl.c:273]   --->   Operation 1186 'add' 'add_ln273_126' <Predicate = (trunc_ln269)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_80 : Operation 1187 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%add_ln273_127 = add i32 %add_ln273_126, %add_ln273_124" [sha256_impl.c:273]   --->   Operation 1187 'add' 'add_ln273_127' <Predicate = (trunc_ln269)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>

State 81 <SV = 80> <Delay = 7.83>
ST_81 : Operation 1188 [1/1] (2.55ns)   --->   "%add_ln279_31 = add i32 %add_ln273_127, %c_1_29" [sha256_impl.c:279]   --->   Operation 1188 'add' 'add_ln279_31' <Predicate = (trunc_ln269)> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_81 : Operation 1189 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln283_95 = add i32 %add_ln273_127, %tmp_5_30" [sha256_impl.c:283]   --->   Operation 1189 'add' 'add_ln283_95' <Predicate = (trunc_ln269)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_81 : Operation 1190 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%add_ln283_31 = add i32 %add_ln283_95, %tmp_4_30" [sha256_impl.c:283]   --->   Operation 1190 'add' 'add_ln283_31' <Predicate = (trunc_ln269)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_81 : Operation 1191 [1/1] (1.76ns)   --->   "br label %62" [sha256_impl.c:285]   --->   Operation 1191 'br' <Predicate = (trunc_ln269)> <Delay = 1.76>
ST_81 : Operation 1192 [1/1] (0.00ns)   --->   "%c_1_31 = phi i32 [ %b_1_30, %63 ], [ 0, %60 ]" [sha256_impl.c:283]   --->   Operation 1192 'phi' 'c_1_31' <Predicate = true> <Delay = 0.00>
ST_81 : Operation 1193 [1/1] (0.00ns)   --->   "%b_1_31 = phi i32 [ %a_1_30, %63 ], [ 0, %60 ]" [sha256_impl.c:283]   --->   Operation 1193 'phi' 'b_1_31' <Predicate = true> <Delay = 0.00>
ST_81 : Operation 1194 [1/1] (0.00ns)   --->   "%a_1_31 = phi i32 [ %add_ln283_31, %63 ], [ 0, %60 ]" [sha256_impl.c:283]   --->   Operation 1194 'phi' 'a_1_31' <Predicate = true> <Delay = 0.00>
ST_81 : Operation 1195 [1/1] (1.76ns)   --->   "br i1 %trunc_ln269, label %65, label %64" [sha256_impl.c:271]   --->   Operation 1195 'br' <Predicate = true> <Delay = 1.76>
ST_81 : Operation 1196 [1/1] (1.69ns)   --->   "%tmp_5_31 = call fastcc i32 @MAJ(i32 %a_1_31, i32 %b_1_31, i32 %c_1_31)" [sha256_impl.c:275]   --->   Operation 1196 'call' 'tmp_5_31' <Predicate = (trunc_ln269)> <Delay = 1.69> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 82 <SV = 81> <Delay = 8.12>
ST_82 : Operation 1197 [1/1] (0.00ns)   --->   "%f_1_31 = phi i32 [ %e_1_30, %63 ], [ %c_1_29, %60 ]" [sha256_impl.c:279]   --->   Operation 1197 'phi' 'f_1_31' <Predicate = true> <Delay = 0.00>
ST_82 : Operation 1198 [1/1] (0.00ns)   --->   "%e_1_31 = phi i32 [ %add_ln279_31, %63 ], [ %c_1_29, %60 ]" [sha256_impl.c:279]   --->   Operation 1198 'phi' 'e_1_31' <Predicate = true> <Delay = 0.00>
ST_82 : Operation 1199 [1/1] (3.75ns)   --->   "%tmp_2_31 = call fastcc i32 @EP1(i32 %e_1_31)" [sha256_impl.c:273]   --->   Operation 1199 'call' 'tmp_2_31' <Predicate = (trunc_ln269)> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_82 : Operation 1200 [1/1] (2.97ns)   --->   "%tmp_3_31 = call fastcc i32 @CH(i32 %e_1_31, i32 %f_1_31, i32 %f_1_30)" [sha256_impl.c:273]   --->   Operation 1200 'call' 'tmp_3_31' <Predicate = (trunc_ln269)> <Delay = 2.97> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_82 : Operation 1201 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln273_129 = add i32 %m_32, 666307205" [sha256_impl.c:273]   --->   Operation 1201 'add' 'add_ln273_129' <Predicate = (trunc_ln269)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_82 : Operation 1202 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%add_ln273_130 = add i32 %add_ln273_129, %tmp_2_31" [sha256_impl.c:273]   --->   Operation 1202 'add' 'add_ln273_130' <Predicate = (trunc_ln269)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_82 : Operation 1203 [1/1] (3.75ns)   --->   "%tmp_4_31 = call fastcc i32 @EP0(i32 %a_1_31)" [sha256_impl.c:275]   --->   Operation 1203 'call' 'tmp_4_31' <Predicate = (trunc_ln269)> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 83 <SV = 82> <Delay = 8.74>
ST_83 : Operation 1204 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln273_128 = add i32 %tmp_3_31, %f_1_29" [sha256_impl.c:273]   --->   Operation 1204 'add' 'add_ln273_128' <Predicate = (trunc_ln269)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_83 : Operation 1205 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%add_ln273_131 = add i32 %add_ln273_130, %add_ln273_128" [sha256_impl.c:273]   --->   Operation 1205 'add' 'add_ln273_131' <Predicate = (trunc_ln269)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_83 : Operation 1206 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln283_96 = add i32 %add_ln273_131, %tmp_5_31" [sha256_impl.c:283]   --->   Operation 1206 'add' 'add_ln283_96' <Predicate = (trunc_ln269)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_83 : Operation 1207 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%add_ln283_32 = add i32 %add_ln283_96, %tmp_4_31" [sha256_impl.c:283]   --->   Operation 1207 'add' 'add_ln283_32' <Predicate = (trunc_ln269)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>

State 84 <SV = 83> <Delay = 8.07>
ST_84 : Operation 1208 [1/1] (2.55ns)   --->   "%add_ln279_32 = add i32 %add_ln273_131, %c_1_30" [sha256_impl.c:279]   --->   Operation 1208 'add' 'add_ln279_32' <Predicate = (trunc_ln269)> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_84 : Operation 1209 [1/1] (1.76ns)   --->   "br label %64" [sha256_impl.c:285]   --->   Operation 1209 'br' <Predicate = (trunc_ln269)> <Delay = 1.76>
ST_84 : Operation 1210 [1/1] (0.00ns)   --->   "%f_1_32 = phi i32 [ %e_1_31, %65 ], [ %c_1_30, %62 ]" [sha256_impl.c:279]   --->   Operation 1210 'phi' 'f_1_32' <Predicate = true> <Delay = 0.00>
ST_84 : Operation 1211 [1/1] (0.00ns)   --->   "%e_1_32 = phi i32 [ %add_ln279_32, %65 ], [ %c_1_30, %62 ]" [sha256_impl.c:279]   --->   Operation 1211 'phi' 'e_1_32' <Predicate = true> <Delay = 0.00>
ST_84 : Operation 1212 [1/1] (0.00ns)   --->   "%c_1_32 = phi i32 [ %b_1_31, %65 ], [ 0, %62 ]" [sha256_impl.c:283]   --->   Operation 1212 'phi' 'c_1_32' <Predicate = true> <Delay = 0.00>
ST_84 : Operation 1213 [1/1] (0.00ns)   --->   "%b_1_32 = phi i32 [ %a_1_31, %65 ], [ 0, %62 ]" [sha256_impl.c:283]   --->   Operation 1213 'phi' 'b_1_32' <Predicate = true> <Delay = 0.00>
ST_84 : Operation 1214 [1/1] (0.00ns)   --->   "%a_1_32 = phi i32 [ %add_ln283_32, %65 ], [ 0, %62 ]" [sha256_impl.c:283]   --->   Operation 1214 'phi' 'a_1_32' <Predicate = true> <Delay = 0.00>
ST_84 : Operation 1215 [1/1] (1.76ns)   --->   "br i1 %trunc_ln269, label %67, label %66" [sha256_impl.c:271]   --->   Operation 1215 'br' <Predicate = true> <Delay = 1.76>
ST_84 : Operation 1216 [1/1] (3.75ns)   --->   "%tmp_2_32 = call fastcc i32 @EP1(i32 %e_1_32)" [sha256_impl.c:273]   --->   Operation 1216 'call' 'tmp_2_32' <Predicate = (trunc_ln269)> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_84 : Operation 1217 [1/1] (2.97ns)   --->   "%tmp_3_32 = call fastcc i32 @CH(i32 %e_1_32, i32 %f_1_32, i32 %f_1_31)" [sha256_impl.c:273]   --->   Operation 1217 'call' 'tmp_3_32' <Predicate = (trunc_ln269)> <Delay = 2.97> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_84 : Operation 1218 [1/1] (3.75ns)   --->   "%tmp_4_32 = call fastcc i32 @EP0(i32 %a_1_32)" [sha256_impl.c:275]   --->   Operation 1218 'call' 'tmp_4_32' <Predicate = (trunc_ln269)> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_84 : Operation 1219 [1/1] (1.69ns)   --->   "%tmp_5_32 = call fastcc i32 @MAJ(i32 %a_1_32, i32 %b_1_32, i32 %c_1_32)" [sha256_impl.c:275]   --->   Operation 1219 'call' 'tmp_5_32' <Predicate = (trunc_ln269)> <Delay = 1.69> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 85 <SV = 84> <Delay = 8.74>
ST_85 : Operation 1220 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln273_132 = add i32 %tmp_3_32, %f_1_30" [sha256_impl.c:273]   --->   Operation 1220 'add' 'add_ln273_132' <Predicate = (trunc_ln269)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_85 : Operation 1221 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln273_133 = add i32 %m_33, 773529912" [sha256_impl.c:273]   --->   Operation 1221 'add' 'add_ln273_133' <Predicate = (trunc_ln269)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_85 : Operation 1222 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%add_ln273_134 = add i32 %add_ln273_133, %tmp_2_32" [sha256_impl.c:273]   --->   Operation 1222 'add' 'add_ln273_134' <Predicate = (trunc_ln269)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_85 : Operation 1223 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%add_ln273_135 = add i32 %add_ln273_134, %add_ln273_132" [sha256_impl.c:273]   --->   Operation 1223 'add' 'add_ln273_135' <Predicate = (trunc_ln269)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>

State 86 <SV = 85> <Delay = 7.83>
ST_86 : Operation 1224 [1/1] (2.55ns)   --->   "%add_ln279_33 = add i32 %add_ln273_135, %c_1_31" [sha256_impl.c:279]   --->   Operation 1224 'add' 'add_ln279_33' <Predicate = (trunc_ln269)> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_86 : Operation 1225 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln283_97 = add i32 %add_ln273_135, %tmp_5_32" [sha256_impl.c:283]   --->   Operation 1225 'add' 'add_ln283_97' <Predicate = (trunc_ln269)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_86 : Operation 1226 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%add_ln283_33 = add i32 %add_ln283_97, %tmp_4_32" [sha256_impl.c:283]   --->   Operation 1226 'add' 'add_ln283_33' <Predicate = (trunc_ln269)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_86 : Operation 1227 [1/1] (1.76ns)   --->   "br label %66" [sha256_impl.c:285]   --->   Operation 1227 'br' <Predicate = (trunc_ln269)> <Delay = 1.76>
ST_86 : Operation 1228 [1/1] (0.00ns)   --->   "%c_1_33 = phi i32 [ %b_1_32, %67 ], [ 0, %64 ]" [sha256_impl.c:283]   --->   Operation 1228 'phi' 'c_1_33' <Predicate = true> <Delay = 0.00>
ST_86 : Operation 1229 [1/1] (0.00ns)   --->   "%b_1_33 = phi i32 [ %a_1_32, %67 ], [ 0, %64 ]" [sha256_impl.c:283]   --->   Operation 1229 'phi' 'b_1_33' <Predicate = true> <Delay = 0.00>
ST_86 : Operation 1230 [1/1] (0.00ns)   --->   "%a_1_33 = phi i32 [ %add_ln283_33, %67 ], [ 0, %64 ]" [sha256_impl.c:283]   --->   Operation 1230 'phi' 'a_1_33' <Predicate = true> <Delay = 0.00>
ST_86 : Operation 1231 [1/1] (1.76ns)   --->   "br i1 %trunc_ln269, label %69, label %68" [sha256_impl.c:271]   --->   Operation 1231 'br' <Predicate = true> <Delay = 1.76>
ST_86 : Operation 1232 [1/1] (1.69ns)   --->   "%tmp_5_33 = call fastcc i32 @MAJ(i32 %a_1_33, i32 %b_1_33, i32 %c_1_33)" [sha256_impl.c:275]   --->   Operation 1232 'call' 'tmp_5_33' <Predicate = (trunc_ln269)> <Delay = 1.69> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 87 <SV = 86> <Delay = 8.12>
ST_87 : Operation 1233 [1/1] (0.00ns)   --->   "%f_1_33 = phi i32 [ %e_1_32, %67 ], [ %c_1_31, %64 ]" [sha256_impl.c:279]   --->   Operation 1233 'phi' 'f_1_33' <Predicate = true> <Delay = 0.00>
ST_87 : Operation 1234 [1/1] (0.00ns)   --->   "%e_1_33 = phi i32 [ %add_ln279_33, %67 ], [ %c_1_31, %64 ]" [sha256_impl.c:279]   --->   Operation 1234 'phi' 'e_1_33' <Predicate = true> <Delay = 0.00>
ST_87 : Operation 1235 [1/1] (3.75ns)   --->   "%tmp_2_33 = call fastcc i32 @EP1(i32 %e_1_33)" [sha256_impl.c:273]   --->   Operation 1235 'call' 'tmp_2_33' <Predicate = (trunc_ln269)> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_87 : Operation 1236 [1/1] (2.97ns)   --->   "%tmp_3_33 = call fastcc i32 @CH(i32 %e_1_33, i32 %f_1_33, i32 %f_1_32)" [sha256_impl.c:273]   --->   Operation 1236 'call' 'tmp_3_33' <Predicate = (trunc_ln269)> <Delay = 2.97> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_87 : Operation 1237 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln273_137 = add i32 %m_34, 1294757372" [sha256_impl.c:273]   --->   Operation 1237 'add' 'add_ln273_137' <Predicate = (trunc_ln269)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_87 : Operation 1238 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%add_ln273_138 = add i32 %add_ln273_137, %tmp_2_33" [sha256_impl.c:273]   --->   Operation 1238 'add' 'add_ln273_138' <Predicate = (trunc_ln269)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_87 : Operation 1239 [1/1] (3.75ns)   --->   "%tmp_4_33 = call fastcc i32 @EP0(i32 %a_1_33)" [sha256_impl.c:275]   --->   Operation 1239 'call' 'tmp_4_33' <Predicate = (trunc_ln269)> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 88 <SV = 87> <Delay = 8.74>
ST_88 : Operation 1240 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln273_136 = add i32 %tmp_3_33, %f_1_31" [sha256_impl.c:273]   --->   Operation 1240 'add' 'add_ln273_136' <Predicate = (trunc_ln269)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_88 : Operation 1241 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%add_ln273_139 = add i32 %add_ln273_138, %add_ln273_136" [sha256_impl.c:273]   --->   Operation 1241 'add' 'add_ln273_139' <Predicate = (trunc_ln269)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_88 : Operation 1242 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln283_98 = add i32 %add_ln273_139, %tmp_5_33" [sha256_impl.c:283]   --->   Operation 1242 'add' 'add_ln283_98' <Predicate = (trunc_ln269)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_88 : Operation 1243 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%add_ln283_34 = add i32 %add_ln283_98, %tmp_4_33" [sha256_impl.c:283]   --->   Operation 1243 'add' 'add_ln283_34' <Predicate = (trunc_ln269)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>

State 89 <SV = 88> <Delay = 8.07>
ST_89 : Operation 1244 [1/1] (2.55ns)   --->   "%add_ln279_34 = add i32 %add_ln273_139, %c_1_32" [sha256_impl.c:279]   --->   Operation 1244 'add' 'add_ln279_34' <Predicate = (trunc_ln269)> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_89 : Operation 1245 [1/1] (1.76ns)   --->   "br label %68" [sha256_impl.c:285]   --->   Operation 1245 'br' <Predicate = (trunc_ln269)> <Delay = 1.76>
ST_89 : Operation 1246 [1/1] (0.00ns)   --->   "%f_1_34 = phi i32 [ %e_1_33, %69 ], [ %c_1_32, %66 ]" [sha256_impl.c:279]   --->   Operation 1246 'phi' 'f_1_34' <Predicate = true> <Delay = 0.00>
ST_89 : Operation 1247 [1/1] (0.00ns)   --->   "%e_1_34 = phi i32 [ %add_ln279_34, %69 ], [ %c_1_32, %66 ]" [sha256_impl.c:279]   --->   Operation 1247 'phi' 'e_1_34' <Predicate = true> <Delay = 0.00>
ST_89 : Operation 1248 [1/1] (0.00ns)   --->   "%c_1_34 = phi i32 [ %b_1_33, %69 ], [ 0, %66 ]" [sha256_impl.c:283]   --->   Operation 1248 'phi' 'c_1_34' <Predicate = true> <Delay = 0.00>
ST_89 : Operation 1249 [1/1] (0.00ns)   --->   "%b_1_34 = phi i32 [ %a_1_33, %69 ], [ 0, %66 ]" [sha256_impl.c:283]   --->   Operation 1249 'phi' 'b_1_34' <Predicate = true> <Delay = 0.00>
ST_89 : Operation 1250 [1/1] (0.00ns)   --->   "%a_1_34 = phi i32 [ %add_ln283_34, %69 ], [ 0, %66 ]" [sha256_impl.c:283]   --->   Operation 1250 'phi' 'a_1_34' <Predicate = true> <Delay = 0.00>
ST_89 : Operation 1251 [1/1] (1.76ns)   --->   "br i1 %trunc_ln269, label %71, label %70" [sha256_impl.c:271]   --->   Operation 1251 'br' <Predicate = true> <Delay = 1.76>
ST_89 : Operation 1252 [1/1] (3.75ns)   --->   "%tmp_2_34 = call fastcc i32 @EP1(i32 %e_1_34)" [sha256_impl.c:273]   --->   Operation 1252 'call' 'tmp_2_34' <Predicate = (trunc_ln269)> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_89 : Operation 1253 [1/1] (2.97ns)   --->   "%tmp_3_34 = call fastcc i32 @CH(i32 %e_1_34, i32 %f_1_34, i32 %f_1_33)" [sha256_impl.c:273]   --->   Operation 1253 'call' 'tmp_3_34' <Predicate = (trunc_ln269)> <Delay = 2.97> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_89 : Operation 1254 [1/1] (3.75ns)   --->   "%tmp_4_34 = call fastcc i32 @EP0(i32 %a_1_34)" [sha256_impl.c:275]   --->   Operation 1254 'call' 'tmp_4_34' <Predicate = (trunc_ln269)> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_89 : Operation 1255 [1/1] (1.69ns)   --->   "%tmp_5_34 = call fastcc i32 @MAJ(i32 %a_1_34, i32 %b_1_34, i32 %c_1_34)" [sha256_impl.c:275]   --->   Operation 1255 'call' 'tmp_5_34' <Predicate = (trunc_ln269)> <Delay = 1.69> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 90 <SV = 89> <Delay = 8.74>
ST_90 : Operation 1256 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln273_140 = add i32 %tmp_3_34, %f_1_32" [sha256_impl.c:273]   --->   Operation 1256 'add' 'add_ln273_140' <Predicate = (trunc_ln269)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_90 : Operation 1257 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln273_141 = add i32 %m_35, 1396182291" [sha256_impl.c:273]   --->   Operation 1257 'add' 'add_ln273_141' <Predicate = (trunc_ln269)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_90 : Operation 1258 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%add_ln273_142 = add i32 %add_ln273_141, %tmp_2_34" [sha256_impl.c:273]   --->   Operation 1258 'add' 'add_ln273_142' <Predicate = (trunc_ln269)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_90 : Operation 1259 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%add_ln273_143 = add i32 %add_ln273_142, %add_ln273_140" [sha256_impl.c:273]   --->   Operation 1259 'add' 'add_ln273_143' <Predicate = (trunc_ln269)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>

State 91 <SV = 90> <Delay = 7.83>
ST_91 : Operation 1260 [1/1] (2.55ns)   --->   "%add_ln279_35 = add i32 %add_ln273_143, %c_1_33" [sha256_impl.c:279]   --->   Operation 1260 'add' 'add_ln279_35' <Predicate = (trunc_ln269)> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_91 : Operation 1261 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln283_99 = add i32 %add_ln273_143, %tmp_5_34" [sha256_impl.c:283]   --->   Operation 1261 'add' 'add_ln283_99' <Predicate = (trunc_ln269)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_91 : Operation 1262 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%add_ln283_35 = add i32 %add_ln283_99, %tmp_4_34" [sha256_impl.c:283]   --->   Operation 1262 'add' 'add_ln283_35' <Predicate = (trunc_ln269)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_91 : Operation 1263 [1/1] (1.76ns)   --->   "br label %70" [sha256_impl.c:285]   --->   Operation 1263 'br' <Predicate = (trunc_ln269)> <Delay = 1.76>
ST_91 : Operation 1264 [1/1] (0.00ns)   --->   "%c_1_35 = phi i32 [ %b_1_34, %71 ], [ 0, %68 ]" [sha256_impl.c:283]   --->   Operation 1264 'phi' 'c_1_35' <Predicate = true> <Delay = 0.00>
ST_91 : Operation 1265 [1/1] (0.00ns)   --->   "%b_1_35 = phi i32 [ %a_1_34, %71 ], [ 0, %68 ]" [sha256_impl.c:283]   --->   Operation 1265 'phi' 'b_1_35' <Predicate = true> <Delay = 0.00>
ST_91 : Operation 1266 [1/1] (0.00ns)   --->   "%a_1_35 = phi i32 [ %add_ln283_35, %71 ], [ 0, %68 ]" [sha256_impl.c:283]   --->   Operation 1266 'phi' 'a_1_35' <Predicate = true> <Delay = 0.00>
ST_91 : Operation 1267 [1/1] (1.76ns)   --->   "br i1 %trunc_ln269, label %73, label %72" [sha256_impl.c:271]   --->   Operation 1267 'br' <Predicate = true> <Delay = 1.76>
ST_91 : Operation 1268 [1/1] (1.69ns)   --->   "%tmp_5_35 = call fastcc i32 @MAJ(i32 %a_1_35, i32 %b_1_35, i32 %c_1_35)" [sha256_impl.c:275]   --->   Operation 1268 'call' 'tmp_5_35' <Predicate = (trunc_ln269)> <Delay = 1.69> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 92 <SV = 91> <Delay = 8.12>
ST_92 : Operation 1269 [1/1] (0.00ns)   --->   "%f_1_35 = phi i32 [ %e_1_34, %71 ], [ %c_1_33, %68 ]" [sha256_impl.c:279]   --->   Operation 1269 'phi' 'f_1_35' <Predicate = true> <Delay = 0.00>
ST_92 : Operation 1270 [1/1] (0.00ns)   --->   "%e_1_35 = phi i32 [ %add_ln279_35, %71 ], [ %c_1_33, %68 ]" [sha256_impl.c:279]   --->   Operation 1270 'phi' 'e_1_35' <Predicate = true> <Delay = 0.00>
ST_92 : Operation 1271 [1/1] (3.75ns)   --->   "%tmp_2_35 = call fastcc i32 @EP1(i32 %e_1_35)" [sha256_impl.c:273]   --->   Operation 1271 'call' 'tmp_2_35' <Predicate = (trunc_ln269)> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_92 : Operation 1272 [1/1] (2.97ns)   --->   "%tmp_3_35 = call fastcc i32 @CH(i32 %e_1_35, i32 %f_1_35, i32 %f_1_34)" [sha256_impl.c:273]   --->   Operation 1272 'call' 'tmp_3_35' <Predicate = (trunc_ln269)> <Delay = 2.97> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_92 : Operation 1273 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln273_145 = add i32 %m_36, 1695183700" [sha256_impl.c:273]   --->   Operation 1273 'add' 'add_ln273_145' <Predicate = (trunc_ln269)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_92 : Operation 1274 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%add_ln273_146 = add i32 %add_ln273_145, %tmp_2_35" [sha256_impl.c:273]   --->   Operation 1274 'add' 'add_ln273_146' <Predicate = (trunc_ln269)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_92 : Operation 1275 [1/1] (3.75ns)   --->   "%tmp_4_35 = call fastcc i32 @EP0(i32 %a_1_35)" [sha256_impl.c:275]   --->   Operation 1275 'call' 'tmp_4_35' <Predicate = (trunc_ln269)> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 93 <SV = 92> <Delay = 8.74>
ST_93 : Operation 1276 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln273_144 = add i32 %tmp_3_35, %f_1_33" [sha256_impl.c:273]   --->   Operation 1276 'add' 'add_ln273_144' <Predicate = (trunc_ln269)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_93 : Operation 1277 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%add_ln273_147 = add i32 %add_ln273_146, %add_ln273_144" [sha256_impl.c:273]   --->   Operation 1277 'add' 'add_ln273_147' <Predicate = (trunc_ln269)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_93 : Operation 1278 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln283_100 = add i32 %add_ln273_147, %tmp_5_35" [sha256_impl.c:283]   --->   Operation 1278 'add' 'add_ln283_100' <Predicate = (trunc_ln269)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_93 : Operation 1279 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%add_ln283_36 = add i32 %add_ln283_100, %tmp_4_35" [sha256_impl.c:283]   --->   Operation 1279 'add' 'add_ln283_36' <Predicate = (trunc_ln269)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>

State 94 <SV = 93> <Delay = 8.07>
ST_94 : Operation 1280 [1/1] (2.55ns)   --->   "%add_ln279_36 = add i32 %add_ln273_147, %c_1_34" [sha256_impl.c:279]   --->   Operation 1280 'add' 'add_ln279_36' <Predicate = (trunc_ln269)> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_94 : Operation 1281 [1/1] (1.76ns)   --->   "br label %72" [sha256_impl.c:285]   --->   Operation 1281 'br' <Predicate = (trunc_ln269)> <Delay = 1.76>
ST_94 : Operation 1282 [1/1] (0.00ns)   --->   "%f_1_36 = phi i32 [ %e_1_35, %73 ], [ %c_1_34, %70 ]" [sha256_impl.c:279]   --->   Operation 1282 'phi' 'f_1_36' <Predicate = true> <Delay = 0.00>
ST_94 : Operation 1283 [1/1] (0.00ns)   --->   "%e_1_36 = phi i32 [ %add_ln279_36, %73 ], [ %c_1_34, %70 ]" [sha256_impl.c:279]   --->   Operation 1283 'phi' 'e_1_36' <Predicate = true> <Delay = 0.00>
ST_94 : Operation 1284 [1/1] (0.00ns)   --->   "%c_1_36 = phi i32 [ %b_1_35, %73 ], [ 0, %70 ]" [sha256_impl.c:283]   --->   Operation 1284 'phi' 'c_1_36' <Predicate = true> <Delay = 0.00>
ST_94 : Operation 1285 [1/1] (0.00ns)   --->   "%b_1_36 = phi i32 [ %a_1_35, %73 ], [ 0, %70 ]" [sha256_impl.c:283]   --->   Operation 1285 'phi' 'b_1_36' <Predicate = true> <Delay = 0.00>
ST_94 : Operation 1286 [1/1] (0.00ns)   --->   "%a_1_36 = phi i32 [ %add_ln283_36, %73 ], [ 0, %70 ]" [sha256_impl.c:283]   --->   Operation 1286 'phi' 'a_1_36' <Predicate = true> <Delay = 0.00>
ST_94 : Operation 1287 [1/1] (1.76ns)   --->   "br i1 %trunc_ln269, label %75, label %74" [sha256_impl.c:271]   --->   Operation 1287 'br' <Predicate = true> <Delay = 1.76>
ST_94 : Operation 1288 [1/1] (3.75ns)   --->   "%tmp_2_36 = call fastcc i32 @EP1(i32 %e_1_36)" [sha256_impl.c:273]   --->   Operation 1288 'call' 'tmp_2_36' <Predicate = (trunc_ln269)> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_94 : Operation 1289 [1/1] (2.97ns)   --->   "%tmp_3_36 = call fastcc i32 @CH(i32 %e_1_36, i32 %f_1_36, i32 %f_1_35)" [sha256_impl.c:273]   --->   Operation 1289 'call' 'tmp_3_36' <Predicate = (trunc_ln269)> <Delay = 2.97> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_94 : Operation 1290 [1/1] (3.75ns)   --->   "%tmp_4_36 = call fastcc i32 @EP0(i32 %a_1_36)" [sha256_impl.c:275]   --->   Operation 1290 'call' 'tmp_4_36' <Predicate = (trunc_ln269)> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_94 : Operation 1291 [1/1] (1.69ns)   --->   "%tmp_5_36 = call fastcc i32 @MAJ(i32 %a_1_36, i32 %b_1_36, i32 %c_1_36)" [sha256_impl.c:275]   --->   Operation 1291 'call' 'tmp_5_36' <Predicate = (trunc_ln269)> <Delay = 1.69> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 95 <SV = 94> <Delay = 8.74>
ST_95 : Operation 1292 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln273_148 = add i32 %tmp_3_36, %f_1_34" [sha256_impl.c:273]   --->   Operation 1292 'add' 'add_ln273_148' <Predicate = (trunc_ln269)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_95 : Operation 1293 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln273_149 = add i32 %m_37, 1986661051" [sha256_impl.c:273]   --->   Operation 1293 'add' 'add_ln273_149' <Predicate = (trunc_ln269)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_95 : Operation 1294 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%add_ln273_150 = add i32 %add_ln273_149, %tmp_2_36" [sha256_impl.c:273]   --->   Operation 1294 'add' 'add_ln273_150' <Predicate = (trunc_ln269)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_95 : Operation 1295 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%add_ln273_151 = add i32 %add_ln273_150, %add_ln273_148" [sha256_impl.c:273]   --->   Operation 1295 'add' 'add_ln273_151' <Predicate = (trunc_ln269)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>

State 96 <SV = 95> <Delay = 7.83>
ST_96 : Operation 1296 [1/1] (2.55ns)   --->   "%add_ln279_37 = add i32 %add_ln273_151, %c_1_35" [sha256_impl.c:279]   --->   Operation 1296 'add' 'add_ln279_37' <Predicate = (trunc_ln269)> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_96 : Operation 1297 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln283_101 = add i32 %add_ln273_151, %tmp_5_36" [sha256_impl.c:283]   --->   Operation 1297 'add' 'add_ln283_101' <Predicate = (trunc_ln269)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_96 : Operation 1298 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%add_ln283_37 = add i32 %add_ln283_101, %tmp_4_36" [sha256_impl.c:283]   --->   Operation 1298 'add' 'add_ln283_37' <Predicate = (trunc_ln269)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_96 : Operation 1299 [1/1] (1.76ns)   --->   "br label %74" [sha256_impl.c:285]   --->   Operation 1299 'br' <Predicate = (trunc_ln269)> <Delay = 1.76>
ST_96 : Operation 1300 [1/1] (0.00ns)   --->   "%c_1_37 = phi i32 [ %b_1_36, %75 ], [ 0, %72 ]" [sha256_impl.c:283]   --->   Operation 1300 'phi' 'c_1_37' <Predicate = true> <Delay = 0.00>
ST_96 : Operation 1301 [1/1] (0.00ns)   --->   "%b_1_37 = phi i32 [ %a_1_36, %75 ], [ 0, %72 ]" [sha256_impl.c:283]   --->   Operation 1301 'phi' 'b_1_37' <Predicate = true> <Delay = 0.00>
ST_96 : Operation 1302 [1/1] (0.00ns)   --->   "%a_1_37 = phi i32 [ %add_ln283_37, %75 ], [ 0, %72 ]" [sha256_impl.c:283]   --->   Operation 1302 'phi' 'a_1_37' <Predicate = true> <Delay = 0.00>
ST_96 : Operation 1303 [1/1] (1.76ns)   --->   "br i1 %trunc_ln269, label %77, label %76" [sha256_impl.c:271]   --->   Operation 1303 'br' <Predicate = true> <Delay = 1.76>
ST_96 : Operation 1304 [1/1] (1.69ns)   --->   "%tmp_5_37 = call fastcc i32 @MAJ(i32 %a_1_37, i32 %b_1_37, i32 %c_1_37)" [sha256_impl.c:275]   --->   Operation 1304 'call' 'tmp_5_37' <Predicate = (trunc_ln269)> <Delay = 1.69> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 97 <SV = 96> <Delay = 8.12>
ST_97 : Operation 1305 [1/1] (0.00ns)   --->   "%f_1_37 = phi i32 [ %e_1_36, %75 ], [ %c_1_35, %72 ]" [sha256_impl.c:279]   --->   Operation 1305 'phi' 'f_1_37' <Predicate = true> <Delay = 0.00>
ST_97 : Operation 1306 [1/1] (0.00ns)   --->   "%e_1_37 = phi i32 [ %add_ln279_37, %75 ], [ %c_1_35, %72 ]" [sha256_impl.c:279]   --->   Operation 1306 'phi' 'e_1_37' <Predicate = true> <Delay = 0.00>
ST_97 : Operation 1307 [1/1] (3.75ns)   --->   "%tmp_2_37 = call fastcc i32 @EP1(i32 %e_1_37)" [sha256_impl.c:273]   --->   Operation 1307 'call' 'tmp_2_37' <Predicate = (trunc_ln269)> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_97 : Operation 1308 [1/1] (2.97ns)   --->   "%tmp_3_37 = call fastcc i32 @CH(i32 %e_1_37, i32 %f_1_37, i32 %f_1_36)" [sha256_impl.c:273]   --->   Operation 1308 'call' 'tmp_3_37' <Predicate = (trunc_ln269)> <Delay = 2.97> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_97 : Operation 1309 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln273_153 = add i32 %tmp_2_37, %m_38" [sha256_impl.c:273]   --->   Operation 1309 'add' 'add_ln273_153' <Predicate = (trunc_ln269)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_97 : Operation 1310 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%add_ln273_154 = add i32 %add_ln273_153, %f_1_35" [sha256_impl.c:273]   --->   Operation 1310 'add' 'add_ln273_154' <Predicate = (trunc_ln269)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_97 : Operation 1311 [1/1] (3.75ns)   --->   "%tmp_4_37 = call fastcc i32 @EP0(i32 %a_1_37)" [sha256_impl.c:275]   --->   Operation 1311 'call' 'tmp_4_37' <Predicate = (trunc_ln269)> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 98 <SV = 97> <Delay = 8.74>
ST_98 : Operation 1312 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln273_152 = add i32 %tmp_3_37, -2117940946" [sha256_impl.c:273]   --->   Operation 1312 'add' 'add_ln273_152' <Predicate = (trunc_ln269)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_98 : Operation 1313 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%add_ln273_155 = add i32 %add_ln273_154, %add_ln273_152" [sha256_impl.c:273]   --->   Operation 1313 'add' 'add_ln273_155' <Predicate = (trunc_ln269)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_98 : Operation 1314 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln283_102 = add i32 %add_ln273_155, %tmp_5_37" [sha256_impl.c:283]   --->   Operation 1314 'add' 'add_ln283_102' <Predicate = (trunc_ln269)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_98 : Operation 1315 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%add_ln283_38 = add i32 %add_ln283_102, %tmp_4_37" [sha256_impl.c:283]   --->   Operation 1315 'add' 'add_ln283_38' <Predicate = (trunc_ln269)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>

State 99 <SV = 98> <Delay = 8.07>
ST_99 : Operation 1316 [1/1] (2.55ns)   --->   "%add_ln279_38 = add i32 %add_ln273_155, %c_1_36" [sha256_impl.c:279]   --->   Operation 1316 'add' 'add_ln279_38' <Predicate = (trunc_ln269)> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_99 : Operation 1317 [1/1] (1.76ns)   --->   "br label %76" [sha256_impl.c:285]   --->   Operation 1317 'br' <Predicate = (trunc_ln269)> <Delay = 1.76>
ST_99 : Operation 1318 [1/1] (0.00ns)   --->   "%f_1_38 = phi i32 [ %e_1_37, %77 ], [ %c_1_36, %74 ]" [sha256_impl.c:279]   --->   Operation 1318 'phi' 'f_1_38' <Predicate = true> <Delay = 0.00>
ST_99 : Operation 1319 [1/1] (0.00ns)   --->   "%e_1_38 = phi i32 [ %add_ln279_38, %77 ], [ %c_1_36, %74 ]" [sha256_impl.c:279]   --->   Operation 1319 'phi' 'e_1_38' <Predicate = true> <Delay = 0.00>
ST_99 : Operation 1320 [1/1] (0.00ns)   --->   "%c_1_38 = phi i32 [ %b_1_37, %77 ], [ 0, %74 ]" [sha256_impl.c:283]   --->   Operation 1320 'phi' 'c_1_38' <Predicate = true> <Delay = 0.00>
ST_99 : Operation 1321 [1/1] (0.00ns)   --->   "%b_1_38 = phi i32 [ %a_1_37, %77 ], [ 0, %74 ]" [sha256_impl.c:283]   --->   Operation 1321 'phi' 'b_1_38' <Predicate = true> <Delay = 0.00>
ST_99 : Operation 1322 [1/1] (0.00ns)   --->   "%a_1_38 = phi i32 [ %add_ln283_38, %77 ], [ 0, %74 ]" [sha256_impl.c:283]   --->   Operation 1322 'phi' 'a_1_38' <Predicate = true> <Delay = 0.00>
ST_99 : Operation 1323 [1/1] (1.76ns)   --->   "br i1 %trunc_ln269, label %79, label %78" [sha256_impl.c:271]   --->   Operation 1323 'br' <Predicate = true> <Delay = 1.76>
ST_99 : Operation 1324 [1/1] (3.75ns)   --->   "%tmp_2_38 = call fastcc i32 @EP1(i32 %e_1_38)" [sha256_impl.c:273]   --->   Operation 1324 'call' 'tmp_2_38' <Predicate = (trunc_ln269)> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_99 : Operation 1325 [1/1] (2.97ns)   --->   "%tmp_3_38 = call fastcc i32 @CH(i32 %e_1_38, i32 %f_1_38, i32 %f_1_37)" [sha256_impl.c:273]   --->   Operation 1325 'call' 'tmp_3_38' <Predicate = (trunc_ln269)> <Delay = 2.97> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_99 : Operation 1326 [1/1] (3.75ns)   --->   "%tmp_4_38 = call fastcc i32 @EP0(i32 %a_1_38)" [sha256_impl.c:275]   --->   Operation 1326 'call' 'tmp_4_38' <Predicate = (trunc_ln269)> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_99 : Operation 1327 [1/1] (1.69ns)   --->   "%tmp_5_38 = call fastcc i32 @MAJ(i32 %a_1_38, i32 %b_1_38, i32 %c_1_38)" [sha256_impl.c:275]   --->   Operation 1327 'call' 'tmp_5_38' <Predicate = (trunc_ln269)> <Delay = 1.69> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 100 <SV = 99> <Delay = 8.74>
ST_100 : Operation 1328 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln273_156 = add i32 %tmp_3_38, -1838011259" [sha256_impl.c:273]   --->   Operation 1328 'add' 'add_ln273_156' <Predicate = (trunc_ln269)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_100 : Operation 1329 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln273_157 = add i32 %tmp_2_38, %m_39" [sha256_impl.c:273]   --->   Operation 1329 'add' 'add_ln273_157' <Predicate = (trunc_ln269)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_100 : Operation 1330 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%add_ln273_158 = add i32 %add_ln273_157, %f_1_36" [sha256_impl.c:273]   --->   Operation 1330 'add' 'add_ln273_158' <Predicate = (trunc_ln269)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_100 : Operation 1331 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%add_ln273_159 = add i32 %add_ln273_158, %add_ln273_156" [sha256_impl.c:273]   --->   Operation 1331 'add' 'add_ln273_159' <Predicate = (trunc_ln269)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>

State 101 <SV = 100> <Delay = 7.83>
ST_101 : Operation 1332 [1/1] (2.55ns)   --->   "%add_ln279_39 = add i32 %add_ln273_159, %c_1_37" [sha256_impl.c:279]   --->   Operation 1332 'add' 'add_ln279_39' <Predicate = (trunc_ln269)> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_101 : Operation 1333 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln283_103 = add i32 %add_ln273_159, %tmp_5_38" [sha256_impl.c:283]   --->   Operation 1333 'add' 'add_ln283_103' <Predicate = (trunc_ln269)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_101 : Operation 1334 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%add_ln283_39 = add i32 %add_ln283_103, %tmp_4_38" [sha256_impl.c:283]   --->   Operation 1334 'add' 'add_ln283_39' <Predicate = (trunc_ln269)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_101 : Operation 1335 [1/1] (1.76ns)   --->   "br label %78" [sha256_impl.c:285]   --->   Operation 1335 'br' <Predicate = (trunc_ln269)> <Delay = 1.76>
ST_101 : Operation 1336 [1/1] (0.00ns)   --->   "%c_1_39 = phi i32 [ %b_1_38, %79 ], [ 0, %76 ]" [sha256_impl.c:283]   --->   Operation 1336 'phi' 'c_1_39' <Predicate = true> <Delay = 0.00>
ST_101 : Operation 1337 [1/1] (0.00ns)   --->   "%b_1_39 = phi i32 [ %a_1_38, %79 ], [ 0, %76 ]" [sha256_impl.c:283]   --->   Operation 1337 'phi' 'b_1_39' <Predicate = true> <Delay = 0.00>
ST_101 : Operation 1338 [1/1] (0.00ns)   --->   "%a_1_39 = phi i32 [ %add_ln283_39, %79 ], [ 0, %76 ]" [sha256_impl.c:283]   --->   Operation 1338 'phi' 'a_1_39' <Predicate = true> <Delay = 0.00>
ST_101 : Operation 1339 [1/1] (1.76ns)   --->   "br i1 %trunc_ln269, label %81, label %80" [sha256_impl.c:271]   --->   Operation 1339 'br' <Predicate = true> <Delay = 1.76>
ST_101 : Operation 1340 [1/1] (1.69ns)   --->   "%tmp_5_39 = call fastcc i32 @MAJ(i32 %a_1_39, i32 %b_1_39, i32 %c_1_39)" [sha256_impl.c:275]   --->   Operation 1340 'call' 'tmp_5_39' <Predicate = (trunc_ln269)> <Delay = 1.69> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 102 <SV = 101> <Delay = 8.12>
ST_102 : Operation 1341 [1/1] (0.00ns)   --->   "%f_1_39 = phi i32 [ %e_1_38, %79 ], [ %c_1_37, %76 ]" [sha256_impl.c:279]   --->   Operation 1341 'phi' 'f_1_39' <Predicate = true> <Delay = 0.00>
ST_102 : Operation 1342 [1/1] (0.00ns)   --->   "%e_1_39 = phi i32 [ %add_ln279_39, %79 ], [ %c_1_37, %76 ]" [sha256_impl.c:279]   --->   Operation 1342 'phi' 'e_1_39' <Predicate = true> <Delay = 0.00>
ST_102 : Operation 1343 [1/1] (3.75ns)   --->   "%tmp_2_39 = call fastcc i32 @EP1(i32 %e_1_39)" [sha256_impl.c:273]   --->   Operation 1343 'call' 'tmp_2_39' <Predicate = (trunc_ln269)> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_102 : Operation 1344 [1/1] (2.97ns)   --->   "%tmp_3_39 = call fastcc i32 @CH(i32 %e_1_39, i32 %f_1_39, i32 %f_1_38)" [sha256_impl.c:273]   --->   Operation 1344 'call' 'tmp_3_39' <Predicate = (trunc_ln269)> <Delay = 2.97> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_102 : Operation 1345 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln273_161 = add i32 %tmp_2_39, %m_40" [sha256_impl.c:273]   --->   Operation 1345 'add' 'add_ln273_161' <Predicate = (trunc_ln269)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_102 : Operation 1346 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%add_ln273_162 = add i32 %add_ln273_161, %f_1_37" [sha256_impl.c:273]   --->   Operation 1346 'add' 'add_ln273_162' <Predicate = (trunc_ln269)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_102 : Operation 1347 [1/1] (3.75ns)   --->   "%tmp_4_39 = call fastcc i32 @EP0(i32 %a_1_39)" [sha256_impl.c:275]   --->   Operation 1347 'call' 'tmp_4_39' <Predicate = (trunc_ln269)> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 103 <SV = 102> <Delay = 8.74>
ST_103 : Operation 1348 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln273_160 = add i32 %tmp_3_39, -1564481375" [sha256_impl.c:273]   --->   Operation 1348 'add' 'add_ln273_160' <Predicate = (trunc_ln269)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_103 : Operation 1349 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%add_ln273_163 = add i32 %add_ln273_162, %add_ln273_160" [sha256_impl.c:273]   --->   Operation 1349 'add' 'add_ln273_163' <Predicate = (trunc_ln269)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_103 : Operation 1350 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln283_104 = add i32 %add_ln273_163, %tmp_5_39" [sha256_impl.c:283]   --->   Operation 1350 'add' 'add_ln283_104' <Predicate = (trunc_ln269)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_103 : Operation 1351 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%add_ln283_40 = add i32 %add_ln283_104, %tmp_4_39" [sha256_impl.c:283]   --->   Operation 1351 'add' 'add_ln283_40' <Predicate = (trunc_ln269)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>

State 104 <SV = 103> <Delay = 8.07>
ST_104 : Operation 1352 [1/1] (2.55ns)   --->   "%add_ln279_40 = add i32 %add_ln273_163, %c_1_38" [sha256_impl.c:279]   --->   Operation 1352 'add' 'add_ln279_40' <Predicate = (trunc_ln269)> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_104 : Operation 1353 [1/1] (1.76ns)   --->   "br label %80" [sha256_impl.c:285]   --->   Operation 1353 'br' <Predicate = (trunc_ln269)> <Delay = 1.76>
ST_104 : Operation 1354 [1/1] (0.00ns)   --->   "%f_1_40 = phi i32 [ %e_1_39, %81 ], [ %c_1_38, %78 ]" [sha256_impl.c:279]   --->   Operation 1354 'phi' 'f_1_40' <Predicate = true> <Delay = 0.00>
ST_104 : Operation 1355 [1/1] (0.00ns)   --->   "%e_1_40 = phi i32 [ %add_ln279_40, %81 ], [ %c_1_38, %78 ]" [sha256_impl.c:279]   --->   Operation 1355 'phi' 'e_1_40' <Predicate = true> <Delay = 0.00>
ST_104 : Operation 1356 [1/1] (0.00ns)   --->   "%c_1_40 = phi i32 [ %b_1_39, %81 ], [ 0, %78 ]" [sha256_impl.c:283]   --->   Operation 1356 'phi' 'c_1_40' <Predicate = true> <Delay = 0.00>
ST_104 : Operation 1357 [1/1] (0.00ns)   --->   "%b_1_40 = phi i32 [ %a_1_39, %81 ], [ 0, %78 ]" [sha256_impl.c:283]   --->   Operation 1357 'phi' 'b_1_40' <Predicate = true> <Delay = 0.00>
ST_104 : Operation 1358 [1/1] (0.00ns)   --->   "%a_1_40 = phi i32 [ %add_ln283_40, %81 ], [ 0, %78 ]" [sha256_impl.c:283]   --->   Operation 1358 'phi' 'a_1_40' <Predicate = true> <Delay = 0.00>
ST_104 : Operation 1359 [1/1] (1.76ns)   --->   "br i1 %trunc_ln269, label %83, label %82" [sha256_impl.c:271]   --->   Operation 1359 'br' <Predicate = true> <Delay = 1.76>
ST_104 : Operation 1360 [1/1] (3.75ns)   --->   "%tmp_2_40 = call fastcc i32 @EP1(i32 %e_1_40)" [sha256_impl.c:273]   --->   Operation 1360 'call' 'tmp_2_40' <Predicate = (trunc_ln269)> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_104 : Operation 1361 [1/1] (2.97ns)   --->   "%tmp_3_40 = call fastcc i32 @CH(i32 %e_1_40, i32 %f_1_40, i32 %f_1_39)" [sha256_impl.c:273]   --->   Operation 1361 'call' 'tmp_3_40' <Predicate = (trunc_ln269)> <Delay = 2.97> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_104 : Operation 1362 [1/1] (3.75ns)   --->   "%tmp_4_40 = call fastcc i32 @EP0(i32 %a_1_40)" [sha256_impl.c:275]   --->   Operation 1362 'call' 'tmp_4_40' <Predicate = (trunc_ln269)> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_104 : Operation 1363 [1/1] (1.69ns)   --->   "%tmp_5_40 = call fastcc i32 @MAJ(i32 %a_1_40, i32 %b_1_40, i32 %c_1_40)" [sha256_impl.c:275]   --->   Operation 1363 'call' 'tmp_5_40' <Predicate = (trunc_ln269)> <Delay = 1.69> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 105 <SV = 104> <Delay = 8.74>
ST_105 : Operation 1364 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln273_164 = add i32 %tmp_3_40, -1474664885" [sha256_impl.c:273]   --->   Operation 1364 'add' 'add_ln273_164' <Predicate = (trunc_ln269)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_105 : Operation 1365 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln273_165 = add i32 %tmp_2_40, %m_41" [sha256_impl.c:273]   --->   Operation 1365 'add' 'add_ln273_165' <Predicate = (trunc_ln269)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_105 : Operation 1366 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%add_ln273_166 = add i32 %add_ln273_165, %f_1_38" [sha256_impl.c:273]   --->   Operation 1366 'add' 'add_ln273_166' <Predicate = (trunc_ln269)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_105 : Operation 1367 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%add_ln273_167 = add i32 %add_ln273_166, %add_ln273_164" [sha256_impl.c:273]   --->   Operation 1367 'add' 'add_ln273_167' <Predicate = (trunc_ln269)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>

State 106 <SV = 105> <Delay = 7.83>
ST_106 : Operation 1368 [1/1] (2.55ns)   --->   "%add_ln279_41 = add i32 %add_ln273_167, %c_1_39" [sha256_impl.c:279]   --->   Operation 1368 'add' 'add_ln279_41' <Predicate = (trunc_ln269)> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_106 : Operation 1369 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln283_105 = add i32 %add_ln273_167, %tmp_5_40" [sha256_impl.c:283]   --->   Operation 1369 'add' 'add_ln283_105' <Predicate = (trunc_ln269)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_106 : Operation 1370 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%add_ln283_41 = add i32 %add_ln283_105, %tmp_4_40" [sha256_impl.c:283]   --->   Operation 1370 'add' 'add_ln283_41' <Predicate = (trunc_ln269)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_106 : Operation 1371 [1/1] (1.76ns)   --->   "br label %82" [sha256_impl.c:285]   --->   Operation 1371 'br' <Predicate = (trunc_ln269)> <Delay = 1.76>
ST_106 : Operation 1372 [1/1] (0.00ns)   --->   "%c_1_41 = phi i32 [ %b_1_40, %83 ], [ 0, %80 ]" [sha256_impl.c:283]   --->   Operation 1372 'phi' 'c_1_41' <Predicate = true> <Delay = 0.00>
ST_106 : Operation 1373 [1/1] (0.00ns)   --->   "%b_1_41 = phi i32 [ %a_1_40, %83 ], [ 0, %80 ]" [sha256_impl.c:283]   --->   Operation 1373 'phi' 'b_1_41' <Predicate = true> <Delay = 0.00>
ST_106 : Operation 1374 [1/1] (0.00ns)   --->   "%a_1_41 = phi i32 [ %add_ln283_41, %83 ], [ 0, %80 ]" [sha256_impl.c:283]   --->   Operation 1374 'phi' 'a_1_41' <Predicate = true> <Delay = 0.00>
ST_106 : Operation 1375 [1/1] (1.76ns)   --->   "br i1 %trunc_ln269, label %85, label %84" [sha256_impl.c:271]   --->   Operation 1375 'br' <Predicate = true> <Delay = 1.76>
ST_106 : Operation 1376 [1/1] (1.69ns)   --->   "%tmp_5_41 = call fastcc i32 @MAJ(i32 %a_1_41, i32 %b_1_41, i32 %c_1_41)" [sha256_impl.c:275]   --->   Operation 1376 'call' 'tmp_5_41' <Predicate = (trunc_ln269)> <Delay = 1.69> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 107 <SV = 106> <Delay = 8.12>
ST_107 : Operation 1377 [1/1] (0.00ns)   --->   "%f_1_41 = phi i32 [ %e_1_40, %83 ], [ %c_1_39, %80 ]" [sha256_impl.c:279]   --->   Operation 1377 'phi' 'f_1_41' <Predicate = true> <Delay = 0.00>
ST_107 : Operation 1378 [1/1] (0.00ns)   --->   "%e_1_41 = phi i32 [ %add_ln279_41, %83 ], [ %c_1_39, %80 ]" [sha256_impl.c:279]   --->   Operation 1378 'phi' 'e_1_41' <Predicate = true> <Delay = 0.00>
ST_107 : Operation 1379 [1/1] (3.75ns)   --->   "%tmp_2_41 = call fastcc i32 @EP1(i32 %e_1_41)" [sha256_impl.c:273]   --->   Operation 1379 'call' 'tmp_2_41' <Predicate = (trunc_ln269)> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_107 : Operation 1380 [1/1] (2.97ns)   --->   "%tmp_3_41 = call fastcc i32 @CH(i32 %e_1_41, i32 %f_1_41, i32 %f_1_40)" [sha256_impl.c:273]   --->   Operation 1380 'call' 'tmp_3_41' <Predicate = (trunc_ln269)> <Delay = 2.97> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_107 : Operation 1381 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln273_169 = add i32 %m_42, -1035236496" [sha256_impl.c:273]   --->   Operation 1381 'add' 'add_ln273_169' <Predicate = (trunc_ln269)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_107 : Operation 1382 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%add_ln273_170 = add i32 %add_ln273_169, %tmp_2_41" [sha256_impl.c:273]   --->   Operation 1382 'add' 'add_ln273_170' <Predicate = (trunc_ln269)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_107 : Operation 1383 [1/1] (3.75ns)   --->   "%tmp_4_41 = call fastcc i32 @EP0(i32 %a_1_41)" [sha256_impl.c:275]   --->   Operation 1383 'call' 'tmp_4_41' <Predicate = (trunc_ln269)> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 108 <SV = 107> <Delay = 8.74>
ST_108 : Operation 1384 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln273_168 = add i32 %tmp_3_41, %f_1_39" [sha256_impl.c:273]   --->   Operation 1384 'add' 'add_ln273_168' <Predicate = (trunc_ln269)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_108 : Operation 1385 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%add_ln273_171 = add i32 %add_ln273_170, %add_ln273_168" [sha256_impl.c:273]   --->   Operation 1385 'add' 'add_ln273_171' <Predicate = (trunc_ln269)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_108 : Operation 1386 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln283_106 = add i32 %add_ln273_171, %tmp_5_41" [sha256_impl.c:283]   --->   Operation 1386 'add' 'add_ln283_106' <Predicate = (trunc_ln269)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_108 : Operation 1387 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%add_ln283_42 = add i32 %add_ln283_106, %tmp_4_41" [sha256_impl.c:283]   --->   Operation 1387 'add' 'add_ln283_42' <Predicate = (trunc_ln269)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>

State 109 <SV = 108> <Delay = 8.07>
ST_109 : Operation 1388 [1/1] (2.55ns)   --->   "%add_ln279_42 = add i32 %add_ln273_171, %c_1_40" [sha256_impl.c:279]   --->   Operation 1388 'add' 'add_ln279_42' <Predicate = (trunc_ln269)> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_109 : Operation 1389 [1/1] (1.76ns)   --->   "br label %84" [sha256_impl.c:285]   --->   Operation 1389 'br' <Predicate = (trunc_ln269)> <Delay = 1.76>
ST_109 : Operation 1390 [1/1] (0.00ns)   --->   "%f_1_42 = phi i32 [ %e_1_41, %85 ], [ %c_1_40, %82 ]" [sha256_impl.c:279]   --->   Operation 1390 'phi' 'f_1_42' <Predicate = true> <Delay = 0.00>
ST_109 : Operation 1391 [1/1] (0.00ns)   --->   "%e_1_42 = phi i32 [ %add_ln279_42, %85 ], [ %c_1_40, %82 ]" [sha256_impl.c:279]   --->   Operation 1391 'phi' 'e_1_42' <Predicate = true> <Delay = 0.00>
ST_109 : Operation 1392 [1/1] (0.00ns)   --->   "%c_1_42 = phi i32 [ %b_1_41, %85 ], [ 0, %82 ]" [sha256_impl.c:283]   --->   Operation 1392 'phi' 'c_1_42' <Predicate = true> <Delay = 0.00>
ST_109 : Operation 1393 [1/1] (0.00ns)   --->   "%b_1_42 = phi i32 [ %a_1_41, %85 ], [ 0, %82 ]" [sha256_impl.c:283]   --->   Operation 1393 'phi' 'b_1_42' <Predicate = true> <Delay = 0.00>
ST_109 : Operation 1394 [1/1] (0.00ns)   --->   "%a_1_42 = phi i32 [ %add_ln283_42, %85 ], [ 0, %82 ]" [sha256_impl.c:283]   --->   Operation 1394 'phi' 'a_1_42' <Predicate = true> <Delay = 0.00>
ST_109 : Operation 1395 [1/1] (1.76ns)   --->   "br i1 %trunc_ln269, label %87, label %86" [sha256_impl.c:271]   --->   Operation 1395 'br' <Predicate = true> <Delay = 1.76>
ST_109 : Operation 1396 [1/1] (3.75ns)   --->   "%tmp_2_42 = call fastcc i32 @EP1(i32 %e_1_42)" [sha256_impl.c:273]   --->   Operation 1396 'call' 'tmp_2_42' <Predicate = (trunc_ln269)> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_109 : Operation 1397 [1/1] (2.97ns)   --->   "%tmp_3_42 = call fastcc i32 @CH(i32 %e_1_42, i32 %f_1_42, i32 %f_1_41)" [sha256_impl.c:273]   --->   Operation 1397 'call' 'tmp_3_42' <Predicate = (trunc_ln269)> <Delay = 2.97> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_109 : Operation 1398 [1/1] (3.75ns)   --->   "%tmp_4_42 = call fastcc i32 @EP0(i32 %a_1_42)" [sha256_impl.c:275]   --->   Operation 1398 'call' 'tmp_4_42' <Predicate = (trunc_ln269)> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_109 : Operation 1399 [1/1] (1.69ns)   --->   "%tmp_5_42 = call fastcc i32 @MAJ(i32 %a_1_42, i32 %b_1_42, i32 %c_1_42)" [sha256_impl.c:275]   --->   Operation 1399 'call' 'tmp_5_42' <Predicate = (trunc_ln269)> <Delay = 1.69> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 110 <SV = 109> <Delay = 8.74>
ST_110 : Operation 1400 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln273_172 = add i32 %tmp_3_42, %f_1_40" [sha256_impl.c:273]   --->   Operation 1400 'add' 'add_ln273_172' <Predicate = (trunc_ln269)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_110 : Operation 1401 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln273_173 = add i32 %m_43, -949202525" [sha256_impl.c:273]   --->   Operation 1401 'add' 'add_ln273_173' <Predicate = (trunc_ln269)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_110 : Operation 1402 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%add_ln273_174 = add i32 %add_ln273_173, %tmp_2_42" [sha256_impl.c:273]   --->   Operation 1402 'add' 'add_ln273_174' <Predicate = (trunc_ln269)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_110 : Operation 1403 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%add_ln273_175 = add i32 %add_ln273_174, %add_ln273_172" [sha256_impl.c:273]   --->   Operation 1403 'add' 'add_ln273_175' <Predicate = (trunc_ln269)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>

State 111 <SV = 110> <Delay = 7.83>
ST_111 : Operation 1404 [1/1] (2.55ns)   --->   "%add_ln279_43 = add i32 %add_ln273_175, %c_1_41" [sha256_impl.c:279]   --->   Operation 1404 'add' 'add_ln279_43' <Predicate = (trunc_ln269)> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_111 : Operation 1405 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln283_107 = add i32 %add_ln273_175, %tmp_5_42" [sha256_impl.c:283]   --->   Operation 1405 'add' 'add_ln283_107' <Predicate = (trunc_ln269)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_111 : Operation 1406 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%add_ln283_43 = add i32 %add_ln283_107, %tmp_4_42" [sha256_impl.c:283]   --->   Operation 1406 'add' 'add_ln283_43' <Predicate = (trunc_ln269)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_111 : Operation 1407 [1/1] (1.76ns)   --->   "br label %86" [sha256_impl.c:285]   --->   Operation 1407 'br' <Predicate = (trunc_ln269)> <Delay = 1.76>
ST_111 : Operation 1408 [1/1] (0.00ns)   --->   "%c_1_43 = phi i32 [ %b_1_42, %87 ], [ 0, %84 ]" [sha256_impl.c:283]   --->   Operation 1408 'phi' 'c_1_43' <Predicate = true> <Delay = 0.00>
ST_111 : Operation 1409 [1/1] (0.00ns)   --->   "%b_1_43 = phi i32 [ %a_1_42, %87 ], [ 0, %84 ]" [sha256_impl.c:283]   --->   Operation 1409 'phi' 'b_1_43' <Predicate = true> <Delay = 0.00>
ST_111 : Operation 1410 [1/1] (0.00ns)   --->   "%a_1_43 = phi i32 [ %add_ln283_43, %87 ], [ 0, %84 ]" [sha256_impl.c:283]   --->   Operation 1410 'phi' 'a_1_43' <Predicate = true> <Delay = 0.00>
ST_111 : Operation 1411 [1/1] (1.76ns)   --->   "br i1 %trunc_ln269, label %89, label %88" [sha256_impl.c:271]   --->   Operation 1411 'br' <Predicate = true> <Delay = 1.76>
ST_111 : Operation 1412 [1/1] (1.69ns)   --->   "%tmp_5_43 = call fastcc i32 @MAJ(i32 %a_1_43, i32 %b_1_43, i32 %c_1_43)" [sha256_impl.c:275]   --->   Operation 1412 'call' 'tmp_5_43' <Predicate = (trunc_ln269)> <Delay = 1.69> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 112 <SV = 111> <Delay = 8.12>
ST_112 : Operation 1413 [1/1] (0.00ns)   --->   "%f_1_43 = phi i32 [ %e_1_42, %87 ], [ %c_1_41, %84 ]" [sha256_impl.c:279]   --->   Operation 1413 'phi' 'f_1_43' <Predicate = true> <Delay = 0.00>
ST_112 : Operation 1414 [1/1] (0.00ns)   --->   "%e_1_43 = phi i32 [ %add_ln279_43, %87 ], [ %c_1_41, %84 ]" [sha256_impl.c:279]   --->   Operation 1414 'phi' 'e_1_43' <Predicate = true> <Delay = 0.00>
ST_112 : Operation 1415 [1/1] (3.75ns)   --->   "%tmp_2_43 = call fastcc i32 @EP1(i32 %e_1_43)" [sha256_impl.c:273]   --->   Operation 1415 'call' 'tmp_2_43' <Predicate = (trunc_ln269)> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_112 : Operation 1416 [1/1] (2.97ns)   --->   "%tmp_3_43 = call fastcc i32 @CH(i32 %e_1_43, i32 %f_1_43, i32 %f_1_42)" [sha256_impl.c:273]   --->   Operation 1416 'call' 'tmp_3_43' <Predicate = (trunc_ln269)> <Delay = 2.97> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_112 : Operation 1417 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln273_177 = add i32 %m_44, -778901479" [sha256_impl.c:273]   --->   Operation 1417 'add' 'add_ln273_177' <Predicate = (trunc_ln269)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_112 : Operation 1418 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%add_ln273_178 = add i32 %add_ln273_177, %tmp_2_43" [sha256_impl.c:273]   --->   Operation 1418 'add' 'add_ln273_178' <Predicate = (trunc_ln269)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_112 : Operation 1419 [1/1] (3.75ns)   --->   "%tmp_4_43 = call fastcc i32 @EP0(i32 %a_1_43)" [sha256_impl.c:275]   --->   Operation 1419 'call' 'tmp_4_43' <Predicate = (trunc_ln269)> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 113 <SV = 112> <Delay = 8.74>
ST_113 : Operation 1420 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln273_176 = add i32 %tmp_3_43, %f_1_41" [sha256_impl.c:273]   --->   Operation 1420 'add' 'add_ln273_176' <Predicate = (trunc_ln269)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_113 : Operation 1421 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%add_ln273_179 = add i32 %add_ln273_178, %add_ln273_176" [sha256_impl.c:273]   --->   Operation 1421 'add' 'add_ln273_179' <Predicate = (trunc_ln269)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_113 : Operation 1422 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln283_108 = add i32 %add_ln273_179, %tmp_5_43" [sha256_impl.c:283]   --->   Operation 1422 'add' 'add_ln283_108' <Predicate = (trunc_ln269)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_113 : Operation 1423 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%add_ln283_44 = add i32 %add_ln283_108, %tmp_4_43" [sha256_impl.c:283]   --->   Operation 1423 'add' 'add_ln283_44' <Predicate = (trunc_ln269)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>

State 114 <SV = 113> <Delay = 8.07>
ST_114 : Operation 1424 [1/1] (2.55ns)   --->   "%add_ln279_44 = add i32 %add_ln273_179, %c_1_42" [sha256_impl.c:279]   --->   Operation 1424 'add' 'add_ln279_44' <Predicate = (trunc_ln269)> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_114 : Operation 1425 [1/1] (1.76ns)   --->   "br label %88" [sha256_impl.c:285]   --->   Operation 1425 'br' <Predicate = (trunc_ln269)> <Delay = 1.76>
ST_114 : Operation 1426 [1/1] (0.00ns)   --->   "%f_1_44 = phi i32 [ %e_1_43, %89 ], [ %c_1_42, %86 ]" [sha256_impl.c:279]   --->   Operation 1426 'phi' 'f_1_44' <Predicate = true> <Delay = 0.00>
ST_114 : Operation 1427 [1/1] (0.00ns)   --->   "%e_1_44 = phi i32 [ %add_ln279_44, %89 ], [ %c_1_42, %86 ]" [sha256_impl.c:279]   --->   Operation 1427 'phi' 'e_1_44' <Predicate = true> <Delay = 0.00>
ST_114 : Operation 1428 [1/1] (0.00ns)   --->   "%c_1_44 = phi i32 [ %b_1_43, %89 ], [ 0, %86 ]" [sha256_impl.c:283]   --->   Operation 1428 'phi' 'c_1_44' <Predicate = true> <Delay = 0.00>
ST_114 : Operation 1429 [1/1] (0.00ns)   --->   "%b_1_44 = phi i32 [ %a_1_43, %89 ], [ 0, %86 ]" [sha256_impl.c:283]   --->   Operation 1429 'phi' 'b_1_44' <Predicate = true> <Delay = 0.00>
ST_114 : Operation 1430 [1/1] (0.00ns)   --->   "%a_1_44 = phi i32 [ %add_ln283_44, %89 ], [ 0, %86 ]" [sha256_impl.c:283]   --->   Operation 1430 'phi' 'a_1_44' <Predicate = true> <Delay = 0.00>
ST_114 : Operation 1431 [1/1] (1.76ns)   --->   "br i1 %trunc_ln269, label %91, label %90" [sha256_impl.c:271]   --->   Operation 1431 'br' <Predicate = true> <Delay = 1.76>
ST_114 : Operation 1432 [1/1] (3.75ns)   --->   "%tmp_2_44 = call fastcc i32 @EP1(i32 %e_1_44)" [sha256_impl.c:273]   --->   Operation 1432 'call' 'tmp_2_44' <Predicate = (trunc_ln269)> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_114 : Operation 1433 [1/1] (2.97ns)   --->   "%tmp_3_44 = call fastcc i32 @CH(i32 %e_1_44, i32 %f_1_44, i32 %f_1_43)" [sha256_impl.c:273]   --->   Operation 1433 'call' 'tmp_3_44' <Predicate = (trunc_ln269)> <Delay = 2.97> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_114 : Operation 1434 [1/1] (3.75ns)   --->   "%tmp_4_44 = call fastcc i32 @EP0(i32 %a_1_44)" [sha256_impl.c:275]   --->   Operation 1434 'call' 'tmp_4_44' <Predicate = (trunc_ln269)> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_114 : Operation 1435 [1/1] (1.69ns)   --->   "%tmp_5_44 = call fastcc i32 @MAJ(i32 %a_1_44, i32 %b_1_44, i32 %c_1_44)" [sha256_impl.c:275]   --->   Operation 1435 'call' 'tmp_5_44' <Predicate = (trunc_ln269)> <Delay = 1.69> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 115 <SV = 114> <Delay = 8.74>
ST_115 : Operation 1436 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln273_180 = add i32 %tmp_3_44, %f_1_42" [sha256_impl.c:273]   --->   Operation 1436 'add' 'add_ln273_180' <Predicate = (trunc_ln269)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_115 : Operation 1437 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln273_181 = add i32 %m_45, -694614492" [sha256_impl.c:273]   --->   Operation 1437 'add' 'add_ln273_181' <Predicate = (trunc_ln269)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_115 : Operation 1438 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%add_ln273_182 = add i32 %add_ln273_181, %tmp_2_44" [sha256_impl.c:273]   --->   Operation 1438 'add' 'add_ln273_182' <Predicate = (trunc_ln269)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_115 : Operation 1439 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%add_ln273_183 = add i32 %add_ln273_182, %add_ln273_180" [sha256_impl.c:273]   --->   Operation 1439 'add' 'add_ln273_183' <Predicate = (trunc_ln269)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>

State 116 <SV = 115> <Delay = 7.83>
ST_116 : Operation 1440 [1/1] (2.55ns)   --->   "%add_ln279_45 = add i32 %add_ln273_183, %c_1_43" [sha256_impl.c:279]   --->   Operation 1440 'add' 'add_ln279_45' <Predicate = (trunc_ln269)> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_116 : Operation 1441 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln283_109 = add i32 %add_ln273_183, %tmp_5_44" [sha256_impl.c:283]   --->   Operation 1441 'add' 'add_ln283_109' <Predicate = (trunc_ln269)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_116 : Operation 1442 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%add_ln283_45 = add i32 %add_ln283_109, %tmp_4_44" [sha256_impl.c:283]   --->   Operation 1442 'add' 'add_ln283_45' <Predicate = (trunc_ln269)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_116 : Operation 1443 [1/1] (1.76ns)   --->   "br label %90" [sha256_impl.c:285]   --->   Operation 1443 'br' <Predicate = (trunc_ln269)> <Delay = 1.76>
ST_116 : Operation 1444 [1/1] (0.00ns)   --->   "%c_1_45 = phi i32 [ %b_1_44, %91 ], [ 0, %88 ]" [sha256_impl.c:283]   --->   Operation 1444 'phi' 'c_1_45' <Predicate = true> <Delay = 0.00>
ST_116 : Operation 1445 [1/1] (0.00ns)   --->   "%b_1_45 = phi i32 [ %a_1_44, %91 ], [ 0, %88 ]" [sha256_impl.c:283]   --->   Operation 1445 'phi' 'b_1_45' <Predicate = true> <Delay = 0.00>
ST_116 : Operation 1446 [1/1] (0.00ns)   --->   "%a_1_45 = phi i32 [ %add_ln283_45, %91 ], [ 0, %88 ]" [sha256_impl.c:283]   --->   Operation 1446 'phi' 'a_1_45' <Predicate = true> <Delay = 0.00>
ST_116 : Operation 1447 [1/1] (1.76ns)   --->   "br i1 %trunc_ln269, label %93, label %92" [sha256_impl.c:271]   --->   Operation 1447 'br' <Predicate = true> <Delay = 1.76>
ST_116 : Operation 1448 [1/1] (1.69ns)   --->   "%tmp_5_45 = call fastcc i32 @MAJ(i32 %a_1_45, i32 %b_1_45, i32 %c_1_45)" [sha256_impl.c:275]   --->   Operation 1448 'call' 'tmp_5_45' <Predicate = (trunc_ln269)> <Delay = 1.69> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 117 <SV = 116> <Delay = 8.12>
ST_117 : Operation 1449 [1/1] (0.00ns)   --->   "%f_1_45 = phi i32 [ %e_1_44, %91 ], [ %c_1_43, %88 ]" [sha256_impl.c:279]   --->   Operation 1449 'phi' 'f_1_45' <Predicate = true> <Delay = 0.00>
ST_117 : Operation 1450 [1/1] (0.00ns)   --->   "%e_1_45 = phi i32 [ %add_ln279_45, %91 ], [ %c_1_43, %88 ]" [sha256_impl.c:279]   --->   Operation 1450 'phi' 'e_1_45' <Predicate = true> <Delay = 0.00>
ST_117 : Operation 1451 [1/1] (3.75ns)   --->   "%tmp_2_45 = call fastcc i32 @EP1(i32 %e_1_45)" [sha256_impl.c:273]   --->   Operation 1451 'call' 'tmp_2_45' <Predicate = (trunc_ln269)> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_117 : Operation 1452 [1/1] (2.97ns)   --->   "%tmp_3_45 = call fastcc i32 @CH(i32 %e_1_45, i32 %f_1_45, i32 %f_1_44)" [sha256_impl.c:273]   --->   Operation 1452 'call' 'tmp_3_45' <Predicate = (trunc_ln269)> <Delay = 2.97> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_117 : Operation 1453 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln273_185 = add i32 %m_46, -200395387" [sha256_impl.c:273]   --->   Operation 1453 'add' 'add_ln273_185' <Predicate = (trunc_ln269)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_117 : Operation 1454 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%add_ln273_186 = add i32 %add_ln273_185, %tmp_2_45" [sha256_impl.c:273]   --->   Operation 1454 'add' 'add_ln273_186' <Predicate = (trunc_ln269)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_117 : Operation 1455 [1/1] (3.75ns)   --->   "%tmp_4_45 = call fastcc i32 @EP0(i32 %a_1_45)" [sha256_impl.c:275]   --->   Operation 1455 'call' 'tmp_4_45' <Predicate = (trunc_ln269)> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 118 <SV = 117> <Delay = 8.74>
ST_118 : Operation 1456 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln273_184 = add i32 %tmp_3_45, %f_1_43" [sha256_impl.c:273]   --->   Operation 1456 'add' 'add_ln273_184' <Predicate = (trunc_ln269)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_118 : Operation 1457 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%add_ln273_187 = add i32 %add_ln273_186, %add_ln273_184" [sha256_impl.c:273]   --->   Operation 1457 'add' 'add_ln273_187' <Predicate = (trunc_ln269)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_118 : Operation 1458 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln283_110 = add i32 %add_ln273_187, %tmp_5_45" [sha256_impl.c:283]   --->   Operation 1458 'add' 'add_ln283_110' <Predicate = (trunc_ln269)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_118 : Operation 1459 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%add_ln283_46 = add i32 %add_ln283_110, %tmp_4_45" [sha256_impl.c:283]   --->   Operation 1459 'add' 'add_ln283_46' <Predicate = (trunc_ln269)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>

State 119 <SV = 118> <Delay = 8.07>
ST_119 : Operation 1460 [1/1] (2.55ns)   --->   "%add_ln279_46 = add i32 %add_ln273_187, %c_1_44" [sha256_impl.c:279]   --->   Operation 1460 'add' 'add_ln279_46' <Predicate = (trunc_ln269)> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_119 : Operation 1461 [1/1] (1.76ns)   --->   "br label %92" [sha256_impl.c:285]   --->   Operation 1461 'br' <Predicate = (trunc_ln269)> <Delay = 1.76>
ST_119 : Operation 1462 [1/1] (0.00ns)   --->   "%f_1_46 = phi i32 [ %e_1_45, %93 ], [ %c_1_44, %90 ]" [sha256_impl.c:279]   --->   Operation 1462 'phi' 'f_1_46' <Predicate = true> <Delay = 0.00>
ST_119 : Operation 1463 [1/1] (0.00ns)   --->   "%e_1_46 = phi i32 [ %add_ln279_46, %93 ], [ %c_1_44, %90 ]" [sha256_impl.c:279]   --->   Operation 1463 'phi' 'e_1_46' <Predicate = true> <Delay = 0.00>
ST_119 : Operation 1464 [1/1] (0.00ns)   --->   "%c_1_46 = phi i32 [ %b_1_45, %93 ], [ 0, %90 ]" [sha256_impl.c:283]   --->   Operation 1464 'phi' 'c_1_46' <Predicate = true> <Delay = 0.00>
ST_119 : Operation 1465 [1/1] (0.00ns)   --->   "%b_1_46 = phi i32 [ %a_1_45, %93 ], [ 0, %90 ]" [sha256_impl.c:283]   --->   Operation 1465 'phi' 'b_1_46' <Predicate = true> <Delay = 0.00>
ST_119 : Operation 1466 [1/1] (0.00ns)   --->   "%a_1_46 = phi i32 [ %add_ln283_46, %93 ], [ 0, %90 ]" [sha256_impl.c:283]   --->   Operation 1466 'phi' 'a_1_46' <Predicate = true> <Delay = 0.00>
ST_119 : Operation 1467 [1/1] (1.76ns)   --->   "br i1 %trunc_ln269, label %95, label %94" [sha256_impl.c:271]   --->   Operation 1467 'br' <Predicate = true> <Delay = 1.76>
ST_119 : Operation 1468 [1/1] (3.75ns)   --->   "%tmp_2_46 = call fastcc i32 @EP1(i32 %e_1_46)" [sha256_impl.c:273]   --->   Operation 1468 'call' 'tmp_2_46' <Predicate = (trunc_ln269)> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_119 : Operation 1469 [1/1] (2.97ns)   --->   "%tmp_3_46 = call fastcc i32 @CH(i32 %e_1_46, i32 %f_1_46, i32 %f_1_45)" [sha256_impl.c:273]   --->   Operation 1469 'call' 'tmp_3_46' <Predicate = (trunc_ln269)> <Delay = 2.97> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_119 : Operation 1470 [1/1] (3.75ns)   --->   "%tmp_4_46 = call fastcc i32 @EP0(i32 %a_1_46)" [sha256_impl.c:275]   --->   Operation 1470 'call' 'tmp_4_46' <Predicate = (trunc_ln269)> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_119 : Operation 1471 [1/1] (1.69ns)   --->   "%tmp_5_46 = call fastcc i32 @MAJ(i32 %a_1_46, i32 %b_1_46, i32 %c_1_46)" [sha256_impl.c:275]   --->   Operation 1471 'call' 'tmp_5_46' <Predicate = (trunc_ln269)> <Delay = 1.69> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 120 <SV = 119> <Delay = 8.74>
ST_120 : Operation 1472 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln273_188 = add i32 %tmp_3_46, %f_1_44" [sha256_impl.c:273]   --->   Operation 1472 'add' 'add_ln273_188' <Predicate = (trunc_ln269)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_120 : Operation 1473 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln273_189 = add i32 %m_47, 275423344" [sha256_impl.c:273]   --->   Operation 1473 'add' 'add_ln273_189' <Predicate = (trunc_ln269)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_120 : Operation 1474 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%add_ln273_190 = add i32 %add_ln273_189, %tmp_2_46" [sha256_impl.c:273]   --->   Operation 1474 'add' 'add_ln273_190' <Predicate = (trunc_ln269)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_120 : Operation 1475 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%add_ln273_191 = add i32 %add_ln273_190, %add_ln273_188" [sha256_impl.c:273]   --->   Operation 1475 'add' 'add_ln273_191' <Predicate = (trunc_ln269)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_120 : Operation 1476 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln273_259 = add i32 %m_56, %m_47" [sha256_impl.c:273]   --->   Operation 1476 'add' 'add_ln273_259' <Predicate = (trunc_ln269)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_120 : Operation 1477 [1/1] (2.55ns)   --->   "%add_ln273_260 = add i32 %tmp_1_46, -965641998" [sha256_impl.c:273]   --->   Operation 1477 'add' 'add_ln273_260' <Predicate = (trunc_ln269)> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_120 : Operation 1478 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%add_ln273_261 = add i32 %add_ln273_260, %add_ln273_259" [sha256_impl.c:273]   --->   Operation 1478 'add' 'add_ln273_261' <Predicate = (trunc_ln269)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>

State 121 <SV = 120> <Delay = 7.83>
ST_121 : Operation 1479 [1/1] (2.55ns)   --->   "%add_ln279_47 = add i32 %add_ln273_191, %c_1_45" [sha256_impl.c:279]   --->   Operation 1479 'add' 'add_ln279_47' <Predicate = (trunc_ln269)> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_121 : Operation 1480 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln283_111 = add i32 %add_ln273_191, %tmp_5_46" [sha256_impl.c:283]   --->   Operation 1480 'add' 'add_ln283_111' <Predicate = (trunc_ln269)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_121 : Operation 1481 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%add_ln283_47 = add i32 %add_ln283_111, %tmp_4_46" [sha256_impl.c:283]   --->   Operation 1481 'add' 'add_ln283_47' <Predicate = (trunc_ln269)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_121 : Operation 1482 [1/1] (1.76ns)   --->   "br label %94" [sha256_impl.c:285]   --->   Operation 1482 'br' <Predicate = (trunc_ln269)> <Delay = 1.76>
ST_121 : Operation 1483 [1/1] (0.00ns)   --->   "%c_1_47 = phi i32 [ %b_1_46, %95 ], [ 0, %92 ]" [sha256_impl.c:283]   --->   Operation 1483 'phi' 'c_1_47' <Predicate = true> <Delay = 0.00>
ST_121 : Operation 1484 [1/1] (0.00ns)   --->   "%b_1_47 = phi i32 [ %a_1_46, %95 ], [ 0, %92 ]" [sha256_impl.c:283]   --->   Operation 1484 'phi' 'b_1_47' <Predicate = true> <Delay = 0.00>
ST_121 : Operation 1485 [1/1] (0.00ns)   --->   "%a_1_47 = phi i32 [ %add_ln283_47, %95 ], [ 0, %92 ]" [sha256_impl.c:283]   --->   Operation 1485 'phi' 'a_1_47' <Predicate = true> <Delay = 0.00>
ST_121 : Operation 1486 [1/1] (1.76ns)   --->   "br i1 %trunc_ln269, label %97, label %96" [sha256_impl.c:271]   --->   Operation 1486 'br' <Predicate = true> <Delay = 1.76>
ST_121 : Operation 1487 [1/1] (1.69ns)   --->   "%tmp_5_47 = call fastcc i32 @MAJ(i32 %a_1_47, i32 %b_1_47, i32 %c_1_47)" [sha256_impl.c:275]   --->   Operation 1487 'call' 'tmp_5_47' <Predicate = (trunc_ln269)> <Delay = 1.69> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 122 <SV = 121> <Delay = 8.12>
ST_122 : Operation 1488 [1/1] (0.00ns)   --->   "%f_1_47 = phi i32 [ %e_1_46, %95 ], [ %c_1_45, %92 ]" [sha256_impl.c:279]   --->   Operation 1488 'phi' 'f_1_47' <Predicate = true> <Delay = 0.00>
ST_122 : Operation 1489 [1/1] (0.00ns)   --->   "%e_1_47 = phi i32 [ %add_ln279_47, %95 ], [ %c_1_45, %92 ]" [sha256_impl.c:279]   --->   Operation 1489 'phi' 'e_1_47' <Predicate = true> <Delay = 0.00>
ST_122 : Operation 1490 [1/1] (3.75ns)   --->   "%tmp_2_47 = call fastcc i32 @EP1(i32 %e_1_47)" [sha256_impl.c:273]   --->   Operation 1490 'call' 'tmp_2_47' <Predicate = (trunc_ln269)> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_122 : Operation 1491 [1/1] (2.97ns)   --->   "%tmp_3_47 = call fastcc i32 @CH(i32 %e_1_47, i32 %f_1_47, i32 %f_1_46)" [sha256_impl.c:273]   --->   Operation 1491 'call' 'tmp_3_47' <Predicate = (trunc_ln269)> <Delay = 2.97> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_122 : Operation 1492 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln273_193 = add i32 %m_48, 430227734" [sha256_impl.c:273]   --->   Operation 1492 'add' 'add_ln273_193' <Predicate = (trunc_ln269)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_122 : Operation 1493 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%add_ln273_194 = add i32 %add_ln273_193, %tmp_2_47" [sha256_impl.c:273]   --->   Operation 1493 'add' 'add_ln273_194' <Predicate = (trunc_ln269)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_122 : Operation 1494 [1/1] (3.75ns)   --->   "%tmp_4_47 = call fastcc i32 @EP0(i32 %a_1_47)" [sha256_impl.c:275]   --->   Operation 1494 'call' 'tmp_4_47' <Predicate = (trunc_ln269)> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 123 <SV = 122> <Delay = 8.74>
ST_123 : Operation 1495 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln273_192 = add i32 %tmp_3_47, %f_1_45" [sha256_impl.c:273]   --->   Operation 1495 'add' 'add_ln273_192' <Predicate = (trunc_ln269)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_123 : Operation 1496 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%add_ln273_195 = add i32 %add_ln273_194, %add_ln273_192" [sha256_impl.c:273]   --->   Operation 1496 'add' 'add_ln273_195' <Predicate = (trunc_ln269)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_123 : Operation 1497 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln283_112 = add i32 %add_ln273_195, %tmp_5_47" [sha256_impl.c:283]   --->   Operation 1497 'add' 'add_ln283_112' <Predicate = (trunc_ln269)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_123 : Operation 1498 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%add_ln283_48 = add i32 %add_ln283_112, %tmp_4_47" [sha256_impl.c:283]   --->   Operation 1498 'add' 'add_ln283_48' <Predicate = (trunc_ln269)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>

State 124 <SV = 123> <Delay = 8.07>
ST_124 : Operation 1499 [1/1] (2.55ns)   --->   "%add_ln279_48 = add i32 %add_ln273_195, %c_1_46" [sha256_impl.c:279]   --->   Operation 1499 'add' 'add_ln279_48' <Predicate = (trunc_ln269)> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_124 : Operation 1500 [1/1] (1.76ns)   --->   "br label %96" [sha256_impl.c:285]   --->   Operation 1500 'br' <Predicate = (trunc_ln269)> <Delay = 1.76>
ST_124 : Operation 1501 [1/1] (0.00ns)   --->   "%f_1_48 = phi i32 [ %e_1_47, %97 ], [ %c_1_46, %94 ]" [sha256_impl.c:279]   --->   Operation 1501 'phi' 'f_1_48' <Predicate = true> <Delay = 0.00>
ST_124 : Operation 1502 [1/1] (0.00ns)   --->   "%e_1_48 = phi i32 [ %add_ln279_48, %97 ], [ %c_1_46, %94 ]" [sha256_impl.c:279]   --->   Operation 1502 'phi' 'e_1_48' <Predicate = true> <Delay = 0.00>
ST_124 : Operation 1503 [1/1] (0.00ns)   --->   "%c_1_48 = phi i32 [ %b_1_47, %97 ], [ 0, %94 ]" [sha256_impl.c:283]   --->   Operation 1503 'phi' 'c_1_48' <Predicate = true> <Delay = 0.00>
ST_124 : Operation 1504 [1/1] (0.00ns)   --->   "%b_1_48 = phi i32 [ %a_1_47, %97 ], [ 0, %94 ]" [sha256_impl.c:283]   --->   Operation 1504 'phi' 'b_1_48' <Predicate = true> <Delay = 0.00>
ST_124 : Operation 1505 [1/1] (0.00ns)   --->   "%a_1_48 = phi i32 [ %add_ln283_48, %97 ], [ 0, %94 ]" [sha256_impl.c:283]   --->   Operation 1505 'phi' 'a_1_48' <Predicate = true> <Delay = 0.00>
ST_124 : Operation 1506 [1/1] (1.76ns)   --->   "br i1 %trunc_ln269, label %99, label %98" [sha256_impl.c:271]   --->   Operation 1506 'br' <Predicate = true> <Delay = 1.76>
ST_124 : Operation 1507 [1/1] (3.75ns)   --->   "%tmp_2_48 = call fastcc i32 @EP1(i32 %e_1_48)" [sha256_impl.c:273]   --->   Operation 1507 'call' 'tmp_2_48' <Predicate = (trunc_ln269)> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_124 : Operation 1508 [1/1] (2.97ns)   --->   "%tmp_3_48 = call fastcc i32 @CH(i32 %e_1_48, i32 %f_1_48, i32 %f_1_47)" [sha256_impl.c:273]   --->   Operation 1508 'call' 'tmp_3_48' <Predicate = (trunc_ln269)> <Delay = 2.97> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_124 : Operation 1509 [1/1] (3.75ns)   --->   "%tmp_4_48 = call fastcc i32 @EP0(i32 %a_1_48)" [sha256_impl.c:275]   --->   Operation 1509 'call' 'tmp_4_48' <Predicate = (trunc_ln269)> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_124 : Operation 1510 [1/1] (1.69ns)   --->   "%tmp_5_48 = call fastcc i32 @MAJ(i32 %a_1_48, i32 %b_1_48, i32 %c_1_48)" [sha256_impl.c:275]   --->   Operation 1510 'call' 'tmp_5_48' <Predicate = (trunc_ln269)> <Delay = 1.69> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 125 <SV = 124> <Delay = 8.74>
ST_125 : Operation 1511 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln273_196 = add i32 %tmp_3_48, %f_1_46" [sha256_impl.c:273]   --->   Operation 1511 'add' 'add_ln273_196' <Predicate = (trunc_ln269)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_125 : Operation 1512 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln273_197 = add i32 %m_49, 506948616" [sha256_impl.c:273]   --->   Operation 1512 'add' 'add_ln273_197' <Predicate = (trunc_ln269)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_125 : Operation 1513 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%add_ln273_198 = add i32 %add_ln273_197, %tmp_2_48" [sha256_impl.c:273]   --->   Operation 1513 'add' 'add_ln273_198' <Predicate = (trunc_ln269)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_125 : Operation 1514 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%add_ln273_199 = add i32 %add_ln273_198, %add_ln273_196" [sha256_impl.c:273]   --->   Operation 1514 'add' 'add_ln273_199' <Predicate = (trunc_ln269)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>

State 126 <SV = 125> <Delay = 7.83>
ST_126 : Operation 1515 [1/1] (2.55ns)   --->   "%add_ln279_49 = add i32 %add_ln273_199, %c_1_47" [sha256_impl.c:279]   --->   Operation 1515 'add' 'add_ln279_49' <Predicate = (trunc_ln269)> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_126 : Operation 1516 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln283_113 = add i32 %add_ln273_199, %tmp_5_48" [sha256_impl.c:283]   --->   Operation 1516 'add' 'add_ln283_113' <Predicate = (trunc_ln269)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_126 : Operation 1517 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%add_ln283_49 = add i32 %add_ln283_113, %tmp_4_48" [sha256_impl.c:283]   --->   Operation 1517 'add' 'add_ln283_49' <Predicate = (trunc_ln269)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_126 : Operation 1518 [1/1] (1.76ns)   --->   "br label %98" [sha256_impl.c:285]   --->   Operation 1518 'br' <Predicate = (trunc_ln269)> <Delay = 1.76>
ST_126 : Operation 1519 [1/1] (0.00ns)   --->   "%c_1_49 = phi i32 [ %b_1_48, %99 ], [ 0, %96 ]" [sha256_impl.c:283]   --->   Operation 1519 'phi' 'c_1_49' <Predicate = true> <Delay = 0.00>
ST_126 : Operation 1520 [1/1] (0.00ns)   --->   "%b_1_49 = phi i32 [ %a_1_48, %99 ], [ 0, %96 ]" [sha256_impl.c:283]   --->   Operation 1520 'phi' 'b_1_49' <Predicate = true> <Delay = 0.00>
ST_126 : Operation 1521 [1/1] (0.00ns)   --->   "%a_1_49 = phi i32 [ %add_ln283_49, %99 ], [ 0, %96 ]" [sha256_impl.c:283]   --->   Operation 1521 'phi' 'a_1_49' <Predicate = true> <Delay = 0.00>
ST_126 : Operation 1522 [1/1] (1.76ns)   --->   "br i1 %trunc_ln269, label %101, label %100" [sha256_impl.c:271]   --->   Operation 1522 'br' <Predicate = true> <Delay = 1.76>
ST_126 : Operation 1523 [1/1] (1.69ns)   --->   "%tmp_5_49 = call fastcc i32 @MAJ(i32 %a_1_49, i32 %b_1_49, i32 %c_1_49)" [sha256_impl.c:275]   --->   Operation 1523 'call' 'tmp_5_49' <Predicate = (trunc_ln269)> <Delay = 1.69> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 127 <SV = 126> <Delay = 8.12>
ST_127 : Operation 1524 [1/1] (0.00ns)   --->   "%f_1_49 = phi i32 [ %e_1_48, %99 ], [ %c_1_47, %96 ]" [sha256_impl.c:279]   --->   Operation 1524 'phi' 'f_1_49' <Predicate = true> <Delay = 0.00>
ST_127 : Operation 1525 [1/1] (0.00ns)   --->   "%e_1_49 = phi i32 [ %add_ln279_49, %99 ], [ %c_1_47, %96 ]" [sha256_impl.c:279]   --->   Operation 1525 'phi' 'e_1_49' <Predicate = true> <Delay = 0.00>
ST_127 : Operation 1526 [1/1] (3.75ns)   --->   "%tmp_2_49 = call fastcc i32 @EP1(i32 %e_1_49)" [sha256_impl.c:273]   --->   Operation 1526 'call' 'tmp_2_49' <Predicate = (trunc_ln269)> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_127 : Operation 1527 [1/1] (2.97ns)   --->   "%tmp_3_49 = call fastcc i32 @CH(i32 %e_1_49, i32 %f_1_49, i32 %f_1_48)" [sha256_impl.c:273]   --->   Operation 1527 'call' 'tmp_3_49' <Predicate = (trunc_ln269)> <Delay = 2.97> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_127 : Operation 1528 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln273_201 = add i32 %m_50, 659060556" [sha256_impl.c:273]   --->   Operation 1528 'add' 'add_ln273_201' <Predicate = (trunc_ln269)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_127 : Operation 1529 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%add_ln273_202 = add i32 %add_ln273_201, %tmp_2_49" [sha256_impl.c:273]   --->   Operation 1529 'add' 'add_ln273_202' <Predicate = (trunc_ln269)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_127 : Operation 1530 [1/1] (3.75ns)   --->   "%tmp_4_49 = call fastcc i32 @EP0(i32 %a_1_49)" [sha256_impl.c:275]   --->   Operation 1530 'call' 'tmp_4_49' <Predicate = (trunc_ln269)> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 128 <SV = 127> <Delay = 8.74>
ST_128 : Operation 1531 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln273_200 = add i32 %tmp_3_49, %f_1_47" [sha256_impl.c:273]   --->   Operation 1531 'add' 'add_ln273_200' <Predicate = (trunc_ln269)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_128 : Operation 1532 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%add_ln273_203 = add i32 %add_ln273_202, %add_ln273_200" [sha256_impl.c:273]   --->   Operation 1532 'add' 'add_ln273_203' <Predicate = (trunc_ln269)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_128 : Operation 1533 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln283_114 = add i32 %add_ln273_203, %tmp_5_49" [sha256_impl.c:283]   --->   Operation 1533 'add' 'add_ln283_114' <Predicate = (trunc_ln269)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_128 : Operation 1534 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%add_ln283_50 = add i32 %add_ln283_114, %tmp_4_49" [sha256_impl.c:283]   --->   Operation 1534 'add' 'add_ln283_50' <Predicate = (trunc_ln269)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>

State 129 <SV = 128> <Delay = 8.07>
ST_129 : Operation 1535 [1/1] (2.55ns)   --->   "%add_ln279_50 = add i32 %add_ln273_203, %c_1_48" [sha256_impl.c:279]   --->   Operation 1535 'add' 'add_ln279_50' <Predicate = (trunc_ln269)> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_129 : Operation 1536 [1/1] (1.76ns)   --->   "br label %100" [sha256_impl.c:285]   --->   Operation 1536 'br' <Predicate = (trunc_ln269)> <Delay = 1.76>
ST_129 : Operation 1537 [1/1] (0.00ns)   --->   "%f_1_50 = phi i32 [ %e_1_49, %101 ], [ %c_1_48, %98 ]" [sha256_impl.c:279]   --->   Operation 1537 'phi' 'f_1_50' <Predicate = true> <Delay = 0.00>
ST_129 : Operation 1538 [1/1] (0.00ns)   --->   "%e_1_50 = phi i32 [ %add_ln279_50, %101 ], [ %c_1_48, %98 ]" [sha256_impl.c:279]   --->   Operation 1538 'phi' 'e_1_50' <Predicate = true> <Delay = 0.00>
ST_129 : Operation 1539 [1/1] (0.00ns)   --->   "%c_1_50 = phi i32 [ %b_1_49, %101 ], [ 0, %98 ]" [sha256_impl.c:283]   --->   Operation 1539 'phi' 'c_1_50' <Predicate = true> <Delay = 0.00>
ST_129 : Operation 1540 [1/1] (0.00ns)   --->   "%b_1_50 = phi i32 [ %a_1_49, %101 ], [ 0, %98 ]" [sha256_impl.c:283]   --->   Operation 1540 'phi' 'b_1_50' <Predicate = true> <Delay = 0.00>
ST_129 : Operation 1541 [1/1] (0.00ns)   --->   "%a_1_50 = phi i32 [ %add_ln283_50, %101 ], [ 0, %98 ]" [sha256_impl.c:283]   --->   Operation 1541 'phi' 'a_1_50' <Predicate = true> <Delay = 0.00>
ST_129 : Operation 1542 [1/1] (1.76ns)   --->   "br i1 %trunc_ln269, label %103, label %102" [sha256_impl.c:271]   --->   Operation 1542 'br' <Predicate = true> <Delay = 1.76>
ST_129 : Operation 1543 [1/1] (3.75ns)   --->   "%tmp_2_50 = call fastcc i32 @EP1(i32 %e_1_50)" [sha256_impl.c:273]   --->   Operation 1543 'call' 'tmp_2_50' <Predicate = (trunc_ln269)> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_129 : Operation 1544 [1/1] (2.97ns)   --->   "%tmp_3_50 = call fastcc i32 @CH(i32 %e_1_50, i32 %f_1_50, i32 %f_1_49)" [sha256_impl.c:273]   --->   Operation 1544 'call' 'tmp_3_50' <Predicate = (trunc_ln269)> <Delay = 2.97> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_129 : Operation 1545 [1/1] (3.75ns)   --->   "%tmp_4_50 = call fastcc i32 @EP0(i32 %a_1_50)" [sha256_impl.c:275]   --->   Operation 1545 'call' 'tmp_4_50' <Predicate = (trunc_ln269)> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_129 : Operation 1546 [1/1] (1.69ns)   --->   "%tmp_5_50 = call fastcc i32 @MAJ(i32 %a_1_50, i32 %b_1_50, i32 %c_1_50)" [sha256_impl.c:275]   --->   Operation 1546 'call' 'tmp_5_50' <Predicate = (trunc_ln269)> <Delay = 1.69> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 130 <SV = 129> <Delay = 8.74>
ST_130 : Operation 1547 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln273_204 = add i32 %tmp_3_50, %f_1_48" [sha256_impl.c:273]   --->   Operation 1547 'add' 'add_ln273_204' <Predicate = (trunc_ln269)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_130 : Operation 1548 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln273_205 = add i32 %m_51, 883997877" [sha256_impl.c:273]   --->   Operation 1548 'add' 'add_ln273_205' <Predicate = (trunc_ln269)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_130 : Operation 1549 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%add_ln273_206 = add i32 %add_ln273_205, %tmp_2_50" [sha256_impl.c:273]   --->   Operation 1549 'add' 'add_ln273_206' <Predicate = (trunc_ln269)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_130 : Operation 1550 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%add_ln273_207 = add i32 %add_ln273_206, %add_ln273_204" [sha256_impl.c:273]   --->   Operation 1550 'add' 'add_ln273_207' <Predicate = (trunc_ln269)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>

State 131 <SV = 130> <Delay = 7.83>
ST_131 : Operation 1551 [1/1] (2.55ns)   --->   "%add_ln279_51 = add i32 %add_ln273_207, %c_1_49" [sha256_impl.c:279]   --->   Operation 1551 'add' 'add_ln279_51' <Predicate = (trunc_ln269)> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_131 : Operation 1552 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln283_115 = add i32 %add_ln273_207, %tmp_5_50" [sha256_impl.c:283]   --->   Operation 1552 'add' 'add_ln283_115' <Predicate = (trunc_ln269)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_131 : Operation 1553 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%add_ln283_51 = add i32 %add_ln283_115, %tmp_4_50" [sha256_impl.c:283]   --->   Operation 1553 'add' 'add_ln283_51' <Predicate = (trunc_ln269)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_131 : Operation 1554 [1/1] (1.76ns)   --->   "br label %102" [sha256_impl.c:285]   --->   Operation 1554 'br' <Predicate = (trunc_ln269)> <Delay = 1.76>
ST_131 : Operation 1555 [1/1] (0.00ns)   --->   "%c_1_51 = phi i32 [ %b_1_50, %103 ], [ 0, %100 ]" [sha256_impl.c:283]   --->   Operation 1555 'phi' 'c_1_51' <Predicate = true> <Delay = 0.00>
ST_131 : Operation 1556 [1/1] (0.00ns)   --->   "%b_1_51 = phi i32 [ %a_1_50, %103 ], [ 0, %100 ]" [sha256_impl.c:283]   --->   Operation 1556 'phi' 'b_1_51' <Predicate = true> <Delay = 0.00>
ST_131 : Operation 1557 [1/1] (0.00ns)   --->   "%a_1_51 = phi i32 [ %add_ln283_51, %103 ], [ 0, %100 ]" [sha256_impl.c:283]   --->   Operation 1557 'phi' 'a_1_51' <Predicate = true> <Delay = 0.00>
ST_131 : Operation 1558 [1/1] (1.76ns)   --->   "br i1 %trunc_ln269, label %105, label %104" [sha256_impl.c:271]   --->   Operation 1558 'br' <Predicate = true> <Delay = 1.76>
ST_131 : Operation 1559 [1/1] (1.69ns)   --->   "%tmp_5_51 = call fastcc i32 @MAJ(i32 %a_1_51, i32 %b_1_51, i32 %c_1_51)" [sha256_impl.c:275]   --->   Operation 1559 'call' 'tmp_5_51' <Predicate = (trunc_ln269)> <Delay = 1.69> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 132 <SV = 131> <Delay = 8.12>
ST_132 : Operation 1560 [1/1] (0.00ns)   --->   "%f_1_51 = phi i32 [ %e_1_50, %103 ], [ %c_1_49, %100 ]" [sha256_impl.c:279]   --->   Operation 1560 'phi' 'f_1_51' <Predicate = true> <Delay = 0.00>
ST_132 : Operation 1561 [1/1] (0.00ns)   --->   "%e_1_51 = phi i32 [ %add_ln279_51, %103 ], [ %c_1_49, %100 ]" [sha256_impl.c:279]   --->   Operation 1561 'phi' 'e_1_51' <Predicate = true> <Delay = 0.00>
ST_132 : Operation 1562 [1/1] (3.75ns)   --->   "%tmp_2_51 = call fastcc i32 @EP1(i32 %e_1_51)" [sha256_impl.c:273]   --->   Operation 1562 'call' 'tmp_2_51' <Predicate = (trunc_ln269)> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_132 : Operation 1563 [1/1] (2.97ns)   --->   "%tmp_3_51 = call fastcc i32 @CH(i32 %e_1_51, i32 %f_1_51, i32 %f_1_50)" [sha256_impl.c:273]   --->   Operation 1563 'call' 'tmp_3_51' <Predicate = (trunc_ln269)> <Delay = 2.97> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_132 : Operation 1564 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln273_209 = add i32 %m_52, 958139571" [sha256_impl.c:273]   --->   Operation 1564 'add' 'add_ln273_209' <Predicate = (trunc_ln269)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_132 : Operation 1565 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%add_ln273_210 = add i32 %add_ln273_209, %tmp_2_51" [sha256_impl.c:273]   --->   Operation 1565 'add' 'add_ln273_210' <Predicate = (trunc_ln269)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_132 : Operation 1566 [1/1] (3.75ns)   --->   "%tmp_4_51 = call fastcc i32 @EP0(i32 %a_1_51)" [sha256_impl.c:275]   --->   Operation 1566 'call' 'tmp_4_51' <Predicate = (trunc_ln269)> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 133 <SV = 132> <Delay = 8.74>
ST_133 : Operation 1567 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln273_208 = add i32 %tmp_3_51, %f_1_49" [sha256_impl.c:273]   --->   Operation 1567 'add' 'add_ln273_208' <Predicate = (trunc_ln269)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_133 : Operation 1568 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%add_ln273_211 = add i32 %add_ln273_210, %add_ln273_208" [sha256_impl.c:273]   --->   Operation 1568 'add' 'add_ln273_211' <Predicate = (trunc_ln269)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_133 : Operation 1569 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln283_116 = add i32 %add_ln273_211, %tmp_5_51" [sha256_impl.c:283]   --->   Operation 1569 'add' 'add_ln283_116' <Predicate = (trunc_ln269)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_133 : Operation 1570 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%add_ln283_52 = add i32 %add_ln283_116, %tmp_4_51" [sha256_impl.c:283]   --->   Operation 1570 'add' 'add_ln283_52' <Predicate = (trunc_ln269)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>

State 134 <SV = 133> <Delay = 8.07>
ST_134 : Operation 1571 [1/1] (2.55ns)   --->   "%add_ln279_52 = add i32 %add_ln273_211, %c_1_50" [sha256_impl.c:279]   --->   Operation 1571 'add' 'add_ln279_52' <Predicate = (trunc_ln269)> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_134 : Operation 1572 [1/1] (1.76ns)   --->   "br label %104" [sha256_impl.c:285]   --->   Operation 1572 'br' <Predicate = (trunc_ln269)> <Delay = 1.76>
ST_134 : Operation 1573 [1/1] (0.00ns)   --->   "%f_1_52 = phi i32 [ %e_1_51, %105 ], [ %c_1_50, %102 ]" [sha256_impl.c:279]   --->   Operation 1573 'phi' 'f_1_52' <Predicate = true> <Delay = 0.00>
ST_134 : Operation 1574 [1/1] (0.00ns)   --->   "%e_1_52 = phi i32 [ %add_ln279_52, %105 ], [ %c_1_50, %102 ]" [sha256_impl.c:279]   --->   Operation 1574 'phi' 'e_1_52' <Predicate = true> <Delay = 0.00>
ST_134 : Operation 1575 [1/1] (0.00ns)   --->   "%c_1_52 = phi i32 [ %b_1_51, %105 ], [ 0, %102 ]" [sha256_impl.c:283]   --->   Operation 1575 'phi' 'c_1_52' <Predicate = true> <Delay = 0.00>
ST_134 : Operation 1576 [1/1] (0.00ns)   --->   "%b_1_52 = phi i32 [ %a_1_51, %105 ], [ 0, %102 ]" [sha256_impl.c:283]   --->   Operation 1576 'phi' 'b_1_52' <Predicate = true> <Delay = 0.00>
ST_134 : Operation 1577 [1/1] (0.00ns)   --->   "%a_1_52 = phi i32 [ %add_ln283_52, %105 ], [ 0, %102 ]" [sha256_impl.c:283]   --->   Operation 1577 'phi' 'a_1_52' <Predicate = true> <Delay = 0.00>
ST_134 : Operation 1578 [1/1] (1.76ns)   --->   "br i1 %trunc_ln269, label %107, label %106" [sha256_impl.c:271]   --->   Operation 1578 'br' <Predicate = true> <Delay = 1.76>
ST_134 : Operation 1579 [1/1] (3.75ns)   --->   "%tmp_2_52 = call fastcc i32 @EP1(i32 %e_1_52)" [sha256_impl.c:273]   --->   Operation 1579 'call' 'tmp_2_52' <Predicate = (trunc_ln269)> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_134 : Operation 1580 [1/1] (2.97ns)   --->   "%tmp_3_52 = call fastcc i32 @CH(i32 %e_1_52, i32 %f_1_52, i32 %f_1_51)" [sha256_impl.c:273]   --->   Operation 1580 'call' 'tmp_3_52' <Predicate = (trunc_ln269)> <Delay = 2.97> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_134 : Operation 1581 [1/1] (3.75ns)   --->   "%tmp_4_52 = call fastcc i32 @EP0(i32 %a_1_52)" [sha256_impl.c:275]   --->   Operation 1581 'call' 'tmp_4_52' <Predicate = (trunc_ln269)> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_134 : Operation 1582 [1/1] (1.69ns)   --->   "%tmp_5_52 = call fastcc i32 @MAJ(i32 %a_1_52, i32 %b_1_52, i32 %c_1_52)" [sha256_impl.c:275]   --->   Operation 1582 'call' 'tmp_5_52' <Predicate = (trunc_ln269)> <Delay = 1.69> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 135 <SV = 134> <Delay = 8.74>
ST_135 : Operation 1583 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln273_212 = add i32 %tmp_3_52, %f_1_50" [sha256_impl.c:273]   --->   Operation 1583 'add' 'add_ln273_212' <Predicate = (trunc_ln269)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_135 : Operation 1584 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln273_213 = add i32 %m_53, 1322822218" [sha256_impl.c:273]   --->   Operation 1584 'add' 'add_ln273_213' <Predicate = (trunc_ln269)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_135 : Operation 1585 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%add_ln273_214 = add i32 %add_ln273_213, %tmp_2_52" [sha256_impl.c:273]   --->   Operation 1585 'add' 'add_ln273_214' <Predicate = (trunc_ln269)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_135 : Operation 1586 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%add_ln273_215 = add i32 %add_ln273_214, %add_ln273_212" [sha256_impl.c:273]   --->   Operation 1586 'add' 'add_ln273_215' <Predicate = (trunc_ln269)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>

State 136 <SV = 135> <Delay = 7.83>
ST_136 : Operation 1587 [1/1] (2.55ns)   --->   "%add_ln279_53 = add i32 %add_ln273_215, %c_1_51" [sha256_impl.c:279]   --->   Operation 1587 'add' 'add_ln279_53' <Predicate = (trunc_ln269)> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_136 : Operation 1588 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln283_117 = add i32 %add_ln273_215, %tmp_5_52" [sha256_impl.c:283]   --->   Operation 1588 'add' 'add_ln283_117' <Predicate = (trunc_ln269)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_136 : Operation 1589 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%add_ln283_53 = add i32 %add_ln283_117, %tmp_4_52" [sha256_impl.c:283]   --->   Operation 1589 'add' 'add_ln283_53' <Predicate = (trunc_ln269)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_136 : Operation 1590 [1/1] (1.76ns)   --->   "br label %106" [sha256_impl.c:285]   --->   Operation 1590 'br' <Predicate = (trunc_ln269)> <Delay = 1.76>
ST_136 : Operation 1591 [1/1] (0.00ns)   --->   "%c_1_53 = phi i32 [ %b_1_52, %107 ], [ 0, %104 ]" [sha256_impl.c:283]   --->   Operation 1591 'phi' 'c_1_53' <Predicate = true> <Delay = 0.00>
ST_136 : Operation 1592 [1/1] (0.00ns)   --->   "%b_1_53 = phi i32 [ %a_1_52, %107 ], [ 0, %104 ]" [sha256_impl.c:283]   --->   Operation 1592 'phi' 'b_1_53' <Predicate = true> <Delay = 0.00>
ST_136 : Operation 1593 [1/1] (0.00ns)   --->   "%a_1_53 = phi i32 [ %add_ln283_53, %107 ], [ 0, %104 ]" [sha256_impl.c:283]   --->   Operation 1593 'phi' 'a_1_53' <Predicate = true> <Delay = 0.00>
ST_136 : Operation 1594 [1/1] (1.76ns)   --->   "br i1 %trunc_ln269, label %109, label %108" [sha256_impl.c:271]   --->   Operation 1594 'br' <Predicate = true> <Delay = 1.76>
ST_136 : Operation 1595 [1/1] (1.69ns)   --->   "%tmp_5_53 = call fastcc i32 @MAJ(i32 %a_1_53, i32 %b_1_53, i32 %c_1_53)" [sha256_impl.c:275]   --->   Operation 1595 'call' 'tmp_5_53' <Predicate = (trunc_ln269)> <Delay = 1.69> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 137 <SV = 136> <Delay = 0.00>
ST_137 : Operation 1596 [1/1] (0.00ns)   --->   "%f_1_53 = phi i32 [ %e_1_52, %107 ], [ %c_1_51, %104 ]" [sha256_impl.c:279]   --->   Operation 1596 'phi' 'f_1_53' <Predicate = true> <Delay = 0.00>
ST_137 : Operation 1597 [1/1] (0.00ns)   --->   "%e_1_53 = phi i32 [ %add_ln279_53, %107 ], [ %c_1_51, %104 ]" [sha256_impl.c:279]   --->   Operation 1597 'phi' 'e_1_53' <Predicate = true> <Delay = 0.00>

State 138 <SV = 137> <Delay = 8.12>
ST_138 : Operation 1598 [1/1] (3.75ns)   --->   "%tmp_2_53 = call fastcc i32 @EP1(i32 %e_1_53)" [sha256_impl.c:273]   --->   Operation 1598 'call' 'tmp_2_53' <Predicate = (trunc_ln269)> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_138 : Operation 1599 [1/1] (2.97ns)   --->   "%tmp_3_53 = call fastcc i32 @CH(i32 %e_1_53, i32 %f_1_53, i32 %f_1_52)" [sha256_impl.c:273]   --->   Operation 1599 'call' 'tmp_3_53' <Predicate = (trunc_ln269)> <Delay = 2.97> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_138 : Operation 1600 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln273_217 = add i32 %m_54, 1537002063" [sha256_impl.c:273]   --->   Operation 1600 'add' 'add_ln273_217' <Predicate = (trunc_ln269)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_138 : Operation 1601 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%add_ln273_218 = add i32 %add_ln273_217, %tmp_2_53" [sha256_impl.c:273]   --->   Operation 1601 'add' 'add_ln273_218' <Predicate = (trunc_ln269)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_138 : Operation 1602 [1/1] (3.75ns)   --->   "%tmp_4_53 = call fastcc i32 @EP0(i32 %a_1_53)" [sha256_impl.c:275]   --->   Operation 1602 'call' 'tmp_4_53' <Predicate = (trunc_ln269)> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 139 <SV = 138> <Delay = 8.74>
ST_139 : Operation 1603 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln273_216 = add i32 %tmp_3_53, %f_1_51" [sha256_impl.c:273]   --->   Operation 1603 'add' 'add_ln273_216' <Predicate = (trunc_ln269)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_139 : Operation 1604 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%add_ln273_219 = add i32 %add_ln273_218, %add_ln273_216" [sha256_impl.c:273]   --->   Operation 1604 'add' 'add_ln273_219' <Predicate = (trunc_ln269)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_139 : Operation 1605 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln283_118 = add i32 %add_ln273_219, %tmp_5_53" [sha256_impl.c:283]   --->   Operation 1605 'add' 'add_ln283_118' <Predicate = (trunc_ln269)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_139 : Operation 1606 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%add_ln283_54 = add i32 %add_ln283_118, %tmp_4_53" [sha256_impl.c:283]   --->   Operation 1606 'add' 'add_ln283_54' <Predicate = (trunc_ln269)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>

State 140 <SV = 139> <Delay = 3.46>
ST_140 : Operation 1607 [1/1] (2.55ns)   --->   "%add_ln279_54 = add i32 %add_ln273_219, %c_1_52" [sha256_impl.c:279]   --->   Operation 1607 'add' 'add_ln279_54' <Predicate = (trunc_ln269)> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_140 : Operation 1608 [1/1] (1.76ns)   --->   "br label %108" [sha256_impl.c:285]   --->   Operation 1608 'br' <Predicate = (trunc_ln269)> <Delay = 1.76>
ST_140 : Operation 1609 [1/1] (0.00ns)   --->   "%c_1_54 = phi i32 [ %b_1_53, %109 ], [ 0, %106 ]" [sha256_impl.c:283]   --->   Operation 1609 'phi' 'c_1_54' <Predicate = true> <Delay = 0.00>
ST_140 : Operation 1610 [1/1] (0.00ns)   --->   "%b_1_54 = phi i32 [ %a_1_53, %109 ], [ 0, %106 ]" [sha256_impl.c:283]   --->   Operation 1610 'phi' 'b_1_54' <Predicate = true> <Delay = 0.00>
ST_140 : Operation 1611 [1/1] (0.00ns)   --->   "%a_1_54 = phi i32 [ %add_ln283_54, %109 ], [ 0, %106 ]" [sha256_impl.c:283]   --->   Operation 1611 'phi' 'a_1_54' <Predicate = true> <Delay = 0.00>
ST_140 : Operation 1612 [1/1] (1.76ns)   --->   "br i1 %trunc_ln269, label %111, label %110" [sha256_impl.c:271]   --->   Operation 1612 'br' <Predicate = true> <Delay = 1.76>
ST_140 : Operation 1613 [1/1] (1.69ns)   --->   "%tmp_5_54 = call fastcc i32 @MAJ(i32 %a_1_54, i32 %b_1_54, i32 %c_1_54)" [sha256_impl.c:275]   --->   Operation 1613 'call' 'tmp_5_54' <Predicate = (trunc_ln269)> <Delay = 1.69> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 141 <SV = 140> <Delay = 8.12>
ST_141 : Operation 1614 [1/1] (0.00ns)   --->   "%f_1_54 = phi i32 [ %e_1_53, %109 ], [ %c_1_52, %106 ]" [sha256_impl.c:279]   --->   Operation 1614 'phi' 'f_1_54' <Predicate = true> <Delay = 0.00>
ST_141 : Operation 1615 [1/1] (0.00ns)   --->   "%e_1_54 = phi i32 [ %add_ln279_54, %109 ], [ %c_1_52, %106 ]" [sha256_impl.c:279]   --->   Operation 1615 'phi' 'e_1_54' <Predicate = true> <Delay = 0.00>
ST_141 : Operation 1616 [1/1] (3.75ns)   --->   "%tmp_2_54 = call fastcc i32 @EP1(i32 %e_1_54)" [sha256_impl.c:273]   --->   Operation 1616 'call' 'tmp_2_54' <Predicate = (trunc_ln269)> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_141 : Operation 1617 [1/1] (2.97ns)   --->   "%tmp_3_54 = call fastcc i32 @CH(i32 %e_1_54, i32 %f_1_54, i32 %f_1_53)" [sha256_impl.c:273]   --->   Operation 1617 'call' 'tmp_3_54' <Predicate = (trunc_ln269)> <Delay = 2.97> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_141 : Operation 1618 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln273_221 = add i32 %m_55, 1747873779" [sha256_impl.c:273]   --->   Operation 1618 'add' 'add_ln273_221' <Predicate = (trunc_ln269)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_141 : Operation 1619 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%add_ln273_222 = add i32 %add_ln273_221, %tmp_2_54" [sha256_impl.c:273]   --->   Operation 1619 'add' 'add_ln273_222' <Predicate = (trunc_ln269)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_141 : Operation 1620 [1/1] (3.75ns)   --->   "%tmp_4_54 = call fastcc i32 @EP0(i32 %a_1_54)" [sha256_impl.c:275]   --->   Operation 1620 'call' 'tmp_4_54' <Predicate = (trunc_ln269)> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 142 <SV = 141> <Delay = 8.74>
ST_142 : Operation 1621 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln273_220 = add i32 %tmp_3_54, %f_1_52" [sha256_impl.c:273]   --->   Operation 1621 'add' 'add_ln273_220' <Predicate = (trunc_ln269)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_142 : Operation 1622 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%add_ln273_223 = add i32 %add_ln273_222, %add_ln273_220" [sha256_impl.c:273]   --->   Operation 1622 'add' 'add_ln273_223' <Predicate = (trunc_ln269)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_142 : Operation 1623 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln283_119 = add i32 %add_ln273_223, %tmp_5_54" [sha256_impl.c:283]   --->   Operation 1623 'add' 'add_ln283_119' <Predicate = (trunc_ln269)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_142 : Operation 1624 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%add_ln283_55 = add i32 %add_ln283_119, %tmp_4_54" [sha256_impl.c:283]   --->   Operation 1624 'add' 'add_ln283_55' <Predicate = (trunc_ln269)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>

State 143 <SV = 142> <Delay = 8.07>
ST_143 : Operation 1625 [1/1] (2.55ns)   --->   "%add_ln279_55 = add i32 %add_ln273_223, %c_1_53" [sha256_impl.c:279]   --->   Operation 1625 'add' 'add_ln279_55' <Predicate = (trunc_ln269)> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_143 : Operation 1626 [1/1] (1.76ns)   --->   "br label %110" [sha256_impl.c:285]   --->   Operation 1626 'br' <Predicate = (trunc_ln269)> <Delay = 1.76>
ST_143 : Operation 1627 [1/1] (0.00ns)   --->   "%f_1_55 = phi i32 [ %e_1_54, %111 ], [ %c_1_53, %108 ]" [sha256_impl.c:279]   --->   Operation 1627 'phi' 'f_1_55' <Predicate = true> <Delay = 0.00>
ST_143 : Operation 1628 [1/1] (0.00ns)   --->   "%e_1_55 = phi i32 [ %add_ln279_55, %111 ], [ %c_1_53, %108 ]" [sha256_impl.c:279]   --->   Operation 1628 'phi' 'e_1_55' <Predicate = true> <Delay = 0.00>
ST_143 : Operation 1629 [1/1] (0.00ns)   --->   "%c_1_55 = phi i32 [ %b_1_54, %111 ], [ 0, %108 ]" [sha256_impl.c:283]   --->   Operation 1629 'phi' 'c_1_55' <Predicate = true> <Delay = 0.00>
ST_143 : Operation 1630 [1/1] (0.00ns)   --->   "%b_1_55 = phi i32 [ %a_1_54, %111 ], [ 0, %108 ]" [sha256_impl.c:283]   --->   Operation 1630 'phi' 'b_1_55' <Predicate = true> <Delay = 0.00>
ST_143 : Operation 1631 [1/1] (0.00ns)   --->   "%a_1_55 = phi i32 [ %add_ln283_55, %111 ], [ 0, %108 ]" [sha256_impl.c:283]   --->   Operation 1631 'phi' 'a_1_55' <Predicate = true> <Delay = 0.00>
ST_143 : Operation 1632 [1/1] (1.76ns)   --->   "br i1 %trunc_ln269, label %113, label %112" [sha256_impl.c:271]   --->   Operation 1632 'br' <Predicate = true> <Delay = 1.76>
ST_143 : Operation 1633 [1/1] (3.75ns)   --->   "%tmp_2_55 = call fastcc i32 @EP1(i32 %e_1_55)" [sha256_impl.c:273]   --->   Operation 1633 'call' 'tmp_2_55' <Predicate = (trunc_ln269)> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_143 : Operation 1634 [1/1] (2.97ns)   --->   "%tmp_3_55 = call fastcc i32 @CH(i32 %e_1_55, i32 %f_1_55, i32 %f_1_54)" [sha256_impl.c:273]   --->   Operation 1634 'call' 'tmp_3_55' <Predicate = (trunc_ln269)> <Delay = 2.97> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_143 : Operation 1635 [1/1] (3.75ns)   --->   "%tmp_4_55 = call fastcc i32 @EP0(i32 %a_1_55)" [sha256_impl.c:275]   --->   Operation 1635 'call' 'tmp_4_55' <Predicate = (trunc_ln269)> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_143 : Operation 1636 [1/1] (1.69ns)   --->   "%tmp_5_55 = call fastcc i32 @MAJ(i32 %a_1_55, i32 %b_1_55, i32 %c_1_55)" [sha256_impl.c:275]   --->   Operation 1636 'call' 'tmp_5_55' <Predicate = (trunc_ln269)> <Delay = 1.69> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 144 <SV = 143> <Delay = 8.74>
ST_144 : Operation 1637 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln273_224 = add i32 %tmp_3_55, %f_1_53" [sha256_impl.c:273]   --->   Operation 1637 'add' 'add_ln273_224' <Predicate = (trunc_ln269)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_144 : Operation 1638 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln273_225 = add i32 %m_56, 1955562222" [sha256_impl.c:273]   --->   Operation 1638 'add' 'add_ln273_225' <Predicate = (trunc_ln269)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_144 : Operation 1639 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%add_ln273_226 = add i32 %add_ln273_225, %tmp_2_55" [sha256_impl.c:273]   --->   Operation 1639 'add' 'add_ln273_226' <Predicate = (trunc_ln269)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_144 : Operation 1640 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%add_ln273_227 = add i32 %add_ln273_226, %add_ln273_224" [sha256_impl.c:273]   --->   Operation 1640 'add' 'add_ln273_227' <Predicate = (trunc_ln269)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>

State 145 <SV = 144> <Delay = 4.37>
ST_145 : Operation 1641 [1/1] (2.55ns)   --->   "%add_ln279_56 = add i32 %add_ln273_227, %c_1_54" [sha256_impl.c:279]   --->   Operation 1641 'add' 'add_ln279_56' <Predicate = (trunc_ln269)> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_145 : Operation 1642 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln283_120 = add i32 %add_ln273_227, %tmp_5_55" [sha256_impl.c:283]   --->   Operation 1642 'add' 'add_ln283_120' <Predicate = (trunc_ln269)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_145 : Operation 1643 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%add_ln283_56 = add i32 %add_ln283_120, %tmp_4_55" [sha256_impl.c:283]   --->   Operation 1643 'add' 'add_ln283_56' <Predicate = (trunc_ln269)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_145 : Operation 1644 [1/1] (1.76ns)   --->   "br label %112" [sha256_impl.c:285]   --->   Operation 1644 'br' <Predicate = (trunc_ln269)> <Delay = 1.76>

State 146 <SV = 145> <Delay = 8.12>
ST_146 : Operation 1645 [1/1] (0.00ns)   --->   "%f_1_56 = phi i32 [ %e_1_55, %113 ], [ %c_1_54, %110 ]" [sha256_impl.c:279]   --->   Operation 1645 'phi' 'f_1_56' <Predicate = true> <Delay = 0.00>
ST_146 : Operation 1646 [1/1] (0.00ns)   --->   "%e_1_56 = phi i32 [ %add_ln279_56, %113 ], [ %c_1_54, %110 ]" [sha256_impl.c:279]   --->   Operation 1646 'phi' 'e_1_56' <Predicate = true> <Delay = 0.00>
ST_146 : Operation 1647 [1/1] (0.00ns)   --->   "%c_1_56 = phi i32 [ %b_1_55, %113 ], [ 0, %110 ]" [sha256_impl.c:283]   --->   Operation 1647 'phi' 'c_1_56' <Predicate = true> <Delay = 0.00>
ST_146 : Operation 1648 [1/1] (0.00ns)   --->   "%b_1_56 = phi i32 [ %a_1_55, %113 ], [ 0, %110 ]" [sha256_impl.c:283]   --->   Operation 1648 'phi' 'b_1_56' <Predicate = true> <Delay = 0.00>
ST_146 : Operation 1649 [1/1] (0.00ns)   --->   "%a_1_56 = phi i32 [ %add_ln283_56, %113 ], [ 0, %110 ]" [sha256_impl.c:283]   --->   Operation 1649 'phi' 'a_1_56' <Predicate = true> <Delay = 0.00>
ST_146 : Operation 1650 [1/1] (1.76ns)   --->   "br i1 %trunc_ln269, label %115, label %114" [sha256_impl.c:271]   --->   Operation 1650 'br' <Predicate = true> <Delay = 1.76>
ST_146 : Operation 1651 [1/1] (3.75ns)   --->   "%tmp_2_56 = call fastcc i32 @EP1(i32 %e_1_56)" [sha256_impl.c:273]   --->   Operation 1651 'call' 'tmp_2_56' <Predicate = (trunc_ln269)> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_146 : Operation 1652 [1/1] (2.97ns)   --->   "%tmp_3_56 = call fastcc i32 @CH(i32 %e_1_56, i32 %f_1_56, i32 %f_1_55)" [sha256_impl.c:273]   --->   Operation 1652 'call' 'tmp_3_56' <Predicate = (trunc_ln269)> <Delay = 2.97> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_146 : Operation 1653 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln273_229 = add i32 %m_57, 2024104815" [sha256_impl.c:273]   --->   Operation 1653 'add' 'add_ln273_229' <Predicate = (trunc_ln269)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_146 : Operation 1654 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%add_ln273_230 = add i32 %add_ln273_229, %tmp_2_56" [sha256_impl.c:273]   --->   Operation 1654 'add' 'add_ln273_230' <Predicate = (trunc_ln269)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_146 : Operation 1655 [1/1] (3.75ns)   --->   "%tmp_4_56 = call fastcc i32 @EP0(i32 %a_1_56)" [sha256_impl.c:275]   --->   Operation 1655 'call' 'tmp_4_56' <Predicate = (trunc_ln269)> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_146 : Operation 1656 [1/1] (1.69ns)   --->   "%tmp_5_56 = call fastcc i32 @MAJ(i32 %a_1_56, i32 %b_1_56, i32 %c_1_56)" [sha256_impl.c:275]   --->   Operation 1656 'call' 'tmp_5_56' <Predicate = (trunc_ln269)> <Delay = 1.69> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 147 <SV = 146> <Delay = 8.74>
ST_147 : Operation 1657 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln273_228 = add i32 %tmp_3_56, %f_1_54" [sha256_impl.c:273]   --->   Operation 1657 'add' 'add_ln273_228' <Predicate = (trunc_ln269)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_147 : Operation 1658 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%add_ln273_231 = add i32 %add_ln273_230, %add_ln273_228" [sha256_impl.c:273]   --->   Operation 1658 'add' 'add_ln273_231' <Predicate = (trunc_ln269)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_147 : Operation 1659 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln283_121 = add i32 %add_ln273_231, %tmp_5_56" [sha256_impl.c:283]   --->   Operation 1659 'add' 'add_ln283_121' <Predicate = (trunc_ln269)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_147 : Operation 1660 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%add_ln283_57 = add i32 %add_ln283_121, %tmp_4_56" [sha256_impl.c:283]   --->   Operation 1660 'add' 'add_ln283_57' <Predicate = (trunc_ln269)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>

State 148 <SV = 147> <Delay = 2.55>
ST_148 : Operation 1661 [1/1] (2.55ns)   --->   "%add_ln279_57 = add i32 %add_ln273_231, %c_1_55" [sha256_impl.c:279]   --->   Operation 1661 'add' 'add_ln279_57' <Predicate = (trunc_ln269)> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_148 : Operation 1662 [1/1] (1.76ns)   --->   "br label %114" [sha256_impl.c:285]   --->   Operation 1662 'br' <Predicate = (trunc_ln269)> <Delay = 1.76>

State 149 <SV = 148> <Delay = 8.12>
ST_149 : Operation 1663 [1/1] (0.00ns)   --->   "%f_1_57 = phi i32 [ %e_1_56, %115 ], [ %c_1_55, %112 ]" [sha256_impl.c:279]   --->   Operation 1663 'phi' 'f_1_57' <Predicate = true> <Delay = 0.00>
ST_149 : Operation 1664 [1/1] (0.00ns)   --->   "%e_1_57 = phi i32 [ %add_ln279_57, %115 ], [ %c_1_55, %112 ]" [sha256_impl.c:279]   --->   Operation 1664 'phi' 'e_1_57' <Predicate = true> <Delay = 0.00>
ST_149 : Operation 1665 [1/1] (0.00ns)   --->   "%c_1_57 = phi i32 [ %b_1_56, %115 ], [ 0, %112 ]" [sha256_impl.c:283]   --->   Operation 1665 'phi' 'c_1_57' <Predicate = true> <Delay = 0.00>
ST_149 : Operation 1666 [1/1] (0.00ns)   --->   "%b_1_57 = phi i32 [ %a_1_56, %115 ], [ 0, %112 ]" [sha256_impl.c:283]   --->   Operation 1666 'phi' 'b_1_57' <Predicate = true> <Delay = 0.00>
ST_149 : Operation 1667 [1/1] (0.00ns)   --->   "%a_1_57 = phi i32 [ %add_ln283_57, %115 ], [ 0, %112 ]" [sha256_impl.c:283]   --->   Operation 1667 'phi' 'a_1_57' <Predicate = true> <Delay = 0.00>
ST_149 : Operation 1668 [1/1] (1.76ns)   --->   "br i1 %trunc_ln269, label %117, label %116" [sha256_impl.c:271]   --->   Operation 1668 'br' <Predicate = true> <Delay = 1.76>
ST_149 : Operation 1669 [1/1] (3.75ns)   --->   "%tmp_2_57 = call fastcc i32 @EP1(i32 %e_1_57)" [sha256_impl.c:273]   --->   Operation 1669 'call' 'tmp_2_57' <Predicate = (trunc_ln269)> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_149 : Operation 1670 [1/1] (2.97ns)   --->   "%tmp_3_57 = call fastcc i32 @CH(i32 %e_1_57, i32 %f_1_57, i32 %f_1_56)" [sha256_impl.c:273]   --->   Operation 1670 'call' 'tmp_3_57' <Predicate = (trunc_ln269)> <Delay = 2.97> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_149 : Operation 1671 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln273_233 = add i32 %tmp_2_57, %m_58" [sha256_impl.c:273]   --->   Operation 1671 'add' 'add_ln273_233' <Predicate = (trunc_ln269)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_149 : Operation 1672 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%add_ln273_234 = add i32 %add_ln273_233, %f_1_55" [sha256_impl.c:273]   --->   Operation 1672 'add' 'add_ln273_234' <Predicate = (trunc_ln269)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_149 : Operation 1673 [1/1] (3.75ns)   --->   "%tmp_4_57 = call fastcc i32 @EP0(i32 %a_1_57)" [sha256_impl.c:275]   --->   Operation 1673 'call' 'tmp_4_57' <Predicate = (trunc_ln269)> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_149 : Operation 1674 [1/1] (1.69ns)   --->   "%tmp_5_57 = call fastcc i32 @MAJ(i32 %a_1_57, i32 %b_1_57, i32 %c_1_57)" [sha256_impl.c:275]   --->   Operation 1674 'call' 'tmp_5_57' <Predicate = (trunc_ln269)> <Delay = 1.69> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 150 <SV = 149> <Delay = 8.74>
ST_150 : Operation 1675 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln273_232 = add i32 %tmp_3_57, -2067236844" [sha256_impl.c:273]   --->   Operation 1675 'add' 'add_ln273_232' <Predicate = (trunc_ln269)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_150 : Operation 1676 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%add_ln273_235 = add i32 %add_ln273_234, %add_ln273_232" [sha256_impl.c:273]   --->   Operation 1676 'add' 'add_ln273_235' <Predicate = (trunc_ln269)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_150 : Operation 1677 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln283_122 = add i32 %add_ln273_235, %tmp_5_57" [sha256_impl.c:283]   --->   Operation 1677 'add' 'add_ln283_122' <Predicate = (trunc_ln269)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_150 : Operation 1678 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%add_ln283_58 = add i32 %add_ln283_122, %tmp_4_57" [sha256_impl.c:283]   --->   Operation 1678 'add' 'add_ln283_58' <Predicate = (trunc_ln269)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>

State 151 <SV = 150> <Delay = 3.46>
ST_151 : Operation 1679 [1/1] (2.55ns)   --->   "%add_ln279_58 = add i32 %add_ln273_235, %c_1_56" [sha256_impl.c:279]   --->   Operation 1679 'add' 'add_ln279_58' <Predicate = (trunc_ln269)> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_151 : Operation 1680 [1/1] (1.76ns)   --->   "br label %116" [sha256_impl.c:285]   --->   Operation 1680 'br' <Predicate = (trunc_ln269)> <Delay = 1.76>
ST_151 : Operation 1681 [1/1] (0.00ns)   --->   "%c_1_58 = phi i32 [ %b_1_57, %117 ], [ 0, %114 ]" [sha256_impl.c:283]   --->   Operation 1681 'phi' 'c_1_58' <Predicate = true> <Delay = 0.00>
ST_151 : Operation 1682 [1/1] (0.00ns)   --->   "%b_1_58 = phi i32 [ %a_1_57, %117 ], [ 0, %114 ]" [sha256_impl.c:283]   --->   Operation 1682 'phi' 'b_1_58' <Predicate = true> <Delay = 0.00>
ST_151 : Operation 1683 [1/1] (0.00ns)   --->   "%a_1_58 = phi i32 [ %add_ln283_58, %117 ], [ 0, %114 ]" [sha256_impl.c:283]   --->   Operation 1683 'phi' 'a_1_58' <Predicate = true> <Delay = 0.00>
ST_151 : Operation 1684 [1/1] (1.76ns)   --->   "br i1 %trunc_ln269, label %119, label %118" [sha256_impl.c:271]   --->   Operation 1684 'br' <Predicate = true> <Delay = 1.76>
ST_151 : Operation 1685 [1/1] (1.69ns)   --->   "%tmp_5_58 = call fastcc i32 @MAJ(i32 %a_1_58, i32 %b_1_58, i32 %c_1_58)" [sha256_impl.c:275]   --->   Operation 1685 'call' 'tmp_5_58' <Predicate = (trunc_ln269)> <Delay = 1.69> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 152 <SV = 151> <Delay = 8.12>
ST_152 : Operation 1686 [1/1] (0.00ns)   --->   "%f_1_58 = phi i32 [ %e_1_57, %117 ], [ %c_1_56, %114 ]" [sha256_impl.c:279]   --->   Operation 1686 'phi' 'f_1_58' <Predicate = true> <Delay = 0.00>
ST_152 : Operation 1687 [1/1] (0.00ns)   --->   "%e_1_58 = phi i32 [ %add_ln279_58, %117 ], [ %c_1_56, %114 ]" [sha256_impl.c:279]   --->   Operation 1687 'phi' 'e_1_58' <Predicate = true> <Delay = 0.00>
ST_152 : Operation 1688 [1/1] (3.75ns)   --->   "%tmp_2_58 = call fastcc i32 @EP1(i32 %e_1_58)" [sha256_impl.c:273]   --->   Operation 1688 'call' 'tmp_2_58' <Predicate = (trunc_ln269)> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_152 : Operation 1689 [1/1] (2.97ns)   --->   "%tmp_3_58 = call fastcc i32 @CH(i32 %e_1_58, i32 %f_1_58, i32 %f_1_57)" [sha256_impl.c:273]   --->   Operation 1689 'call' 'tmp_3_58' <Predicate = (trunc_ln269)> <Delay = 2.97> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_152 : Operation 1690 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln273_237 = add i32 %tmp_2_58, %m_59" [sha256_impl.c:273]   --->   Operation 1690 'add' 'add_ln273_237' <Predicate = (trunc_ln269)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_152 : Operation 1691 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%add_ln273_238 = add i32 %add_ln273_237, %f_1_56" [sha256_impl.c:273]   --->   Operation 1691 'add' 'add_ln273_238' <Predicate = (trunc_ln269)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_152 : Operation 1692 [1/1] (3.75ns)   --->   "%tmp_4_58 = call fastcc i32 @EP0(i32 %a_1_58)" [sha256_impl.c:275]   --->   Operation 1692 'call' 'tmp_4_58' <Predicate = (trunc_ln269)> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 153 <SV = 152> <Delay = 8.74>
ST_153 : Operation 1693 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln273_236 = add i32 %tmp_3_58, -1933114872" [sha256_impl.c:273]   --->   Operation 1693 'add' 'add_ln273_236' <Predicate = (trunc_ln269)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_153 : Operation 1694 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%add_ln273_239 = add i32 %add_ln273_238, %add_ln273_236" [sha256_impl.c:273]   --->   Operation 1694 'add' 'add_ln273_239' <Predicate = (trunc_ln269)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_153 : Operation 1695 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln283_123 = add i32 %add_ln273_239, %tmp_5_58" [sha256_impl.c:283]   --->   Operation 1695 'add' 'add_ln283_123' <Predicate = (trunc_ln269)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_153 : Operation 1696 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%add_ln283_59 = add i32 %add_ln283_123, %tmp_4_58" [sha256_impl.c:283]   --->   Operation 1696 'add' 'add_ln283_59' <Predicate = (trunc_ln269)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>

State 154 <SV = 153> <Delay = 3.46>
ST_154 : Operation 1697 [1/1] (2.55ns)   --->   "%add_ln279_59 = add i32 %add_ln273_239, %c_1_57" [sha256_impl.c:279]   --->   Operation 1697 'add' 'add_ln279_59' <Predicate = (trunc_ln269)> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_154 : Operation 1698 [1/1] (1.76ns)   --->   "br label %118" [sha256_impl.c:285]   --->   Operation 1698 'br' <Predicate = (trunc_ln269)> <Delay = 1.76>
ST_154 : Operation 1699 [1/1] (0.00ns)   --->   "%c_1_59 = phi i32 [ %b_1_58, %119 ], [ 0, %116 ]" [sha256_impl.c:283]   --->   Operation 1699 'phi' 'c_1_59' <Predicate = true> <Delay = 0.00>
ST_154 : Operation 1700 [1/1] (0.00ns)   --->   "%b_1_59 = phi i32 [ %a_1_58, %119 ], [ 0, %116 ]" [sha256_impl.c:283]   --->   Operation 1700 'phi' 'b_1_59' <Predicate = true> <Delay = 0.00>
ST_154 : Operation 1701 [1/1] (0.00ns)   --->   "%a_1_59 = phi i32 [ %add_ln283_59, %119 ], [ 0, %116 ]" [sha256_impl.c:283]   --->   Operation 1701 'phi' 'a_1_59' <Predicate = true> <Delay = 0.00>
ST_154 : Operation 1702 [1/1] (1.76ns)   --->   "br i1 %trunc_ln269, label %121, label %120" [sha256_impl.c:271]   --->   Operation 1702 'br' <Predicate = true> <Delay = 1.76>
ST_154 : Operation 1703 [1/1] (1.69ns)   --->   "%tmp_5_59 = call fastcc i32 @MAJ(i32 %a_1_59, i32 %b_1_59, i32 %c_1_59)" [sha256_impl.c:275]   --->   Operation 1703 'call' 'tmp_5_59' <Predicate = (trunc_ln269)> <Delay = 1.69> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 155 <SV = 154> <Delay = 8.12>
ST_155 : Operation 1704 [1/1] (0.00ns)   --->   "%f_1_59 = phi i32 [ %e_1_58, %119 ], [ %c_1_57, %116 ]" [sha256_impl.c:279]   --->   Operation 1704 'phi' 'f_1_59' <Predicate = true> <Delay = 0.00>
ST_155 : Operation 1705 [1/1] (0.00ns)   --->   "%e_1_59 = phi i32 [ %add_ln279_59, %119 ], [ %c_1_57, %116 ]" [sha256_impl.c:279]   --->   Operation 1705 'phi' 'e_1_59' <Predicate = true> <Delay = 0.00>
ST_155 : Operation 1706 [1/1] (3.75ns)   --->   "%tmp_2_59 = call fastcc i32 @EP1(i32 %e_1_59)" [sha256_impl.c:273]   --->   Operation 1706 'call' 'tmp_2_59' <Predicate = (trunc_ln269)> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_155 : Operation 1707 [1/1] (2.97ns)   --->   "%tmp_3_59 = call fastcc i32 @CH(i32 %e_1_59, i32 %f_1_59, i32 %f_1_58)" [sha256_impl.c:273]   --->   Operation 1707 'call' 'tmp_3_59' <Predicate = (trunc_ln269)> <Delay = 2.97> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_155 : Operation 1708 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln273_241 = add i32 %tmp_2_59, %m_60" [sha256_impl.c:273]   --->   Operation 1708 'add' 'add_ln273_241' <Predicate = (trunc_ln269)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_155 : Operation 1709 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%add_ln273_242 = add i32 %add_ln273_241, %f_1_57" [sha256_impl.c:273]   --->   Operation 1709 'add' 'add_ln273_242' <Predicate = (trunc_ln269)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_155 : Operation 1710 [1/1] (3.75ns)   --->   "%tmp_4_59 = call fastcc i32 @EP0(i32 %a_1_59)" [sha256_impl.c:275]   --->   Operation 1710 'call' 'tmp_4_59' <Predicate = (trunc_ln269)> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 156 <SV = 155> <Delay = 8.74>
ST_156 : Operation 1711 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln273_240 = add i32 %tmp_3_59, -1866530822" [sha256_impl.c:273]   --->   Operation 1711 'add' 'add_ln273_240' <Predicate = (trunc_ln269)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_156 : Operation 1712 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%add_ln273_243 = add i32 %add_ln273_242, %add_ln273_240" [sha256_impl.c:273]   --->   Operation 1712 'add' 'add_ln273_243' <Predicate = (trunc_ln269)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_156 : Operation 1713 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln283_124 = add i32 %add_ln273_243, %tmp_5_59" [sha256_impl.c:283]   --->   Operation 1713 'add' 'add_ln283_124' <Predicate = (trunc_ln269)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_156 : Operation 1714 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%add_ln283_60 = add i32 %add_ln283_124, %tmp_4_59" [sha256_impl.c:283]   --->   Operation 1714 'add' 'add_ln283_60' <Predicate = (trunc_ln269)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>

State 157 <SV = 156> <Delay = 3.46>
ST_157 : Operation 1715 [1/1] (2.55ns)   --->   "%add_ln279_60 = add i32 %add_ln273_243, %c_1_58" [sha256_impl.c:279]   --->   Operation 1715 'add' 'add_ln279_60' <Predicate = (trunc_ln269)> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_157 : Operation 1716 [1/1] (1.76ns)   --->   "br label %120" [sha256_impl.c:285]   --->   Operation 1716 'br' <Predicate = (trunc_ln269)> <Delay = 1.76>
ST_157 : Operation 1717 [1/1] (0.00ns)   --->   "%c_1_60 = phi i32 [ %b_1_59, %121 ], [ 0, %118 ]" [sha256_impl.c:283]   --->   Operation 1717 'phi' 'c_1_60' <Predicate = true> <Delay = 0.00>
ST_157 : Operation 1718 [1/1] (0.00ns)   --->   "%b_1_60 = phi i32 [ %a_1_59, %121 ], [ 0, %118 ]" [sha256_impl.c:283]   --->   Operation 1718 'phi' 'b_1_60' <Predicate = true> <Delay = 0.00>
ST_157 : Operation 1719 [1/1] (0.00ns)   --->   "%a_1_60 = phi i32 [ %add_ln283_60, %121 ], [ 0, %118 ]" [sha256_impl.c:283]   --->   Operation 1719 'phi' 'a_1_60' <Predicate = true> <Delay = 0.00>
ST_157 : Operation 1720 [1/1] (1.76ns)   --->   "br i1 %trunc_ln269, label %123, label %122" [sha256_impl.c:271]   --->   Operation 1720 'br' <Predicate = true> <Delay = 1.76>
ST_157 : Operation 1721 [1/1] (1.69ns)   --->   "%tmp_5_60 = call fastcc i32 @MAJ(i32 %a_1_60, i32 %b_1_60, i32 %c_1_60)" [sha256_impl.c:275]   --->   Operation 1721 'call' 'tmp_5_60' <Predicate = (trunc_ln269)> <Delay = 1.69> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 158 <SV = 157> <Delay = 8.12>
ST_158 : Operation 1722 [1/1] (0.00ns)   --->   "%f_1_60 = phi i32 [ %e_1_59, %121 ], [ %c_1_58, %118 ]" [sha256_impl.c:279]   --->   Operation 1722 'phi' 'f_1_60' <Predicate = true> <Delay = 0.00>
ST_158 : Operation 1723 [1/1] (0.00ns)   --->   "%e_1_60 = phi i32 [ %add_ln279_60, %121 ], [ %c_1_58, %118 ]" [sha256_impl.c:279]   --->   Operation 1723 'phi' 'e_1_60' <Predicate = true> <Delay = 0.00>
ST_158 : Operation 1724 [1/1] (3.75ns)   --->   "%tmp_2_60 = call fastcc i32 @EP1(i32 %e_1_60)" [sha256_impl.c:273]   --->   Operation 1724 'call' 'tmp_2_60' <Predicate = (trunc_ln269)> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_158 : Operation 1725 [1/1] (2.97ns)   --->   "%tmp_3_60 = call fastcc i32 @CH(i32 %e_1_60, i32 %f_1_60, i32 %f_1_59)" [sha256_impl.c:273]   --->   Operation 1725 'call' 'tmp_3_60' <Predicate = (trunc_ln269)> <Delay = 2.97> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_158 : Operation 1726 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln273_245 = add i32 %tmp_2_60, %m_61" [sha256_impl.c:273]   --->   Operation 1726 'add' 'add_ln273_245' <Predicate = (trunc_ln269)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_158 : Operation 1727 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%add_ln273_246 = add i32 %add_ln273_245, %f_1_58" [sha256_impl.c:273]   --->   Operation 1727 'add' 'add_ln273_246' <Predicate = (trunc_ln269)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_158 : Operation 1728 [1/1] (3.75ns)   --->   "%tmp_4_60 = call fastcc i32 @EP0(i32 %a_1_60)" [sha256_impl.c:275]   --->   Operation 1728 'call' 'tmp_4_60' <Predicate = (trunc_ln269)> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 159 <SV = 158> <Delay = 8.74>
ST_159 : Operation 1729 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln273_244 = add i32 %tmp_3_60, -1538233109" [sha256_impl.c:273]   --->   Operation 1729 'add' 'add_ln273_244' <Predicate = (trunc_ln269)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_159 : Operation 1730 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%add_ln273_247 = add i32 %add_ln273_246, %add_ln273_244" [sha256_impl.c:273]   --->   Operation 1730 'add' 'add_ln273_247' <Predicate = (trunc_ln269)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_159 : Operation 1731 [1/1] (2.55ns)   --->   "%add_ln279_61 = add i32 %add_ln273_247, %c_1_59" [sha256_impl.c:279]   --->   Operation 1731 'add' 'add_ln279_61' <Predicate = (trunc_ln269)> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_159 : Operation 1732 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln283_125 = add i32 %add_ln273_247, %tmp_5_60" [sha256_impl.c:283]   --->   Operation 1732 'add' 'add_ln283_125' <Predicate = (trunc_ln269)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_159 : Operation 1733 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%add_ln283_61 = add i32 %add_ln283_125, %tmp_4_60" [sha256_impl.c:283]   --->   Operation 1733 'add' 'add_ln283_61' <Predicate = (trunc_ln269)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>

State 160 <SV = 159> <Delay = 8.07>
ST_160 : Operation 1734 [1/1] (1.76ns)   --->   "br label %122" [sha256_impl.c:285]   --->   Operation 1734 'br' <Predicate = (trunc_ln269)> <Delay = 1.76>
ST_160 : Operation 1735 [1/1] (0.00ns)   --->   "%f_1_61 = phi i32 [ %e_1_60, %123 ], [ %c_1_59, %120 ]" [sha256_impl.c:279]   --->   Operation 1735 'phi' 'f_1_61' <Predicate = true> <Delay = 0.00>
ST_160 : Operation 1736 [1/1] (0.00ns)   --->   "%e_1_61 = phi i32 [ %add_ln279_61, %123 ], [ %c_1_59, %120 ]" [sha256_impl.c:279]   --->   Operation 1736 'phi' 'e_1_61' <Predicate = true> <Delay = 0.00>
ST_160 : Operation 1737 [1/1] (0.00ns)   --->   "%c_1_61 = phi i32 [ %b_1_60, %123 ], [ 0, %120 ]" [sha256_impl.c:283]   --->   Operation 1737 'phi' 'c_1_61' <Predicate = true> <Delay = 0.00>
ST_160 : Operation 1738 [1/1] (0.00ns)   --->   "%b_1_61 = phi i32 [ %a_1_60, %123 ], [ 0, %120 ]" [sha256_impl.c:283]   --->   Operation 1738 'phi' 'b_1_61' <Predicate = true> <Delay = 0.00>
ST_160 : Operation 1739 [1/1] (0.00ns)   --->   "%a_1_61 = phi i32 [ %add_ln283_61, %123 ], [ 0, %120 ]" [sha256_impl.c:283]   --->   Operation 1739 'phi' 'a_1_61' <Predicate = true> <Delay = 0.00>
ST_160 : Operation 1740 [1/1] (1.76ns)   --->   "br i1 %trunc_ln269, label %125, label %124" [sha256_impl.c:271]   --->   Operation 1740 'br' <Predicate = true> <Delay = 1.76>
ST_160 : Operation 1741 [1/1] (3.75ns)   --->   "%tmp_2_61 = call fastcc i32 @EP1(i32 %e_1_61)" [sha256_impl.c:273]   --->   Operation 1741 'call' 'tmp_2_61' <Predicate = (trunc_ln269)> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_160 : Operation 1742 [1/1] (2.97ns)   --->   "%tmp_3_61 = call fastcc i32 @CH(i32 %e_1_61, i32 %f_1_61, i32 %f_1_60)" [sha256_impl.c:273]   --->   Operation 1742 'call' 'tmp_3_61' <Predicate = (trunc_ln269)> <Delay = 2.97> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_160 : Operation 1743 [1/1] (2.55ns)   --->   "%add_ln273_248 = add i32 %tmp_3_61, -1090935817" [sha256_impl.c:273]   --->   Operation 1743 'add' 'add_ln273_248' <Predicate = (trunc_ln269)> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_160 : Operation 1744 [1/1] (2.55ns)   --->   "%add_ln273_249 = add i32 %f_1_59, %tmp_2_61" [sha256_impl.c:273]   --->   Operation 1744 'add' 'add_ln273_249' <Predicate = (trunc_ln269)> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_160 : Operation 1745 [1/1] (3.75ns)   --->   "%tmp_4_61 = call fastcc i32 @EP0(i32 %a_1_61)" [sha256_impl.c:275]   --->   Operation 1745 'call' 'tmp_4_61' <Predicate = (trunc_ln269)> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_160 : Operation 1746 [1/1] (1.69ns)   --->   "%tmp_5_61 = call fastcc i32 @MAJ(i32 %a_1_61, i32 %b_1_61, i32 %c_1_61)" [sha256_impl.c:275]   --->   Operation 1746 'call' 'tmp_5_61' <Predicate = (trunc_ln269)> <Delay = 1.69> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_160 : Operation 1747 [1/1] (1.76ns)   --->   "br i1 %trunc_ln269, label %127, label %126" [sha256_impl.c:271]   --->   Operation 1747 'br' <Predicate = true> <Delay = 1.76>

State 161 <SV = 160> <Delay = 8.74>
ST_161 : Operation 1748 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln273_250 = add i32 %add_ln273_249, %add_ln273_248" [sha256_impl.c:273]   --->   Operation 1748 'add' 'add_ln273_250' <Predicate = (trunc_ln269)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_161 : Operation 1749 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%add_ln273_252 = add i32 %add_ln273_254, %add_ln273_250" [sha256_impl.c:273]   --->   Operation 1749 'add' 'add_ln273_252' <Predicate = (trunc_ln269)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_161 : Operation 1750 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln283_126 = add i32 %add_ln273_252, %tmp_5_61" [sha256_impl.c:283]   --->   Operation 1750 'add' 'add_ln283_126' <Predicate = (trunc_ln269)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_161 : Operation 1751 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%add_ln283_62 = add i32 %add_ln283_126, %tmp_4_61" [sha256_impl.c:283]   --->   Operation 1751 'add' 'add_ln283_62' <Predicate = (trunc_ln269)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>

State 162 <SV = 161> <Delay = 2.55>
ST_162 : Operation 1752 [1/1] (2.55ns)   --->   "%add_ln279_62 = add i32 %add_ln273_252, %c_1_60" [sha256_impl.c:279]   --->   Operation 1752 'add' 'add_ln279_62' <Predicate = (trunc_ln269)> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_162 : Operation 1753 [1/1] (1.76ns)   --->   "br label %124" [sha256_impl.c:285]   --->   Operation 1753 'br' <Predicate = (trunc_ln269)> <Delay = 1.76>

State 163 <SV = 162> <Delay = 6.30>
ST_163 : Operation 1754 [1/1] (0.00ns)   --->   "%f_1_62 = phi i32 [ %e_1_61, %125 ], [ %c_1_60, %122 ]" [sha256_impl.c:279]   --->   Operation 1754 'phi' 'f_1_62' <Predicate = true> <Delay = 0.00>
ST_163 : Operation 1755 [1/1] (0.00ns)   --->   "%e_1_62 = phi i32 [ %add_ln279_62, %125 ], [ %c_1_60, %122 ]" [sha256_impl.c:279]   --->   Operation 1755 'phi' 'e_1_62' <Predicate = true> <Delay = 0.00>
ST_163 : Operation 1756 [1/1] (0.00ns)   --->   "%c_1_62 = phi i32 [ %b_1_61, %125 ], [ 0, %122 ]" [sha256_impl.c:283]   --->   Operation 1756 'phi' 'c_1_62' <Predicate = true> <Delay = 0.00>
ST_163 : Operation 1757 [1/1] (0.00ns)   --->   "%b_1_62 = phi i32 [ %a_1_61, %125 ], [ 0, %122 ]" [sha256_impl.c:283]   --->   Operation 1757 'phi' 'b_1_62' <Predicate = true> <Delay = 0.00>
ST_163 : Operation 1758 [1/1] (0.00ns)   --->   "%a_1_62 = phi i32 [ %add_ln283_62, %125 ], [ 0, %122 ]" [sha256_impl.c:283]   --->   Operation 1758 'phi' 'a_1_62' <Predicate = true> <Delay = 0.00>
ST_163 : Operation 1759 [1/1] (3.75ns)   --->   "%tmp_2_62 = call fastcc i32 @EP1(i32 %e_1_62)" [sha256_impl.c:273]   --->   Operation 1759 'call' 'tmp_2_62' <Predicate = (trunc_ln269)> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_163 : Operation 1760 [1/1] (2.97ns)   --->   "%tmp_3_62 = call fastcc i32 @CH(i32 %e_1_62, i32 %f_1_62, i32 %f_1_61)" [sha256_impl.c:273]   --->   Operation 1760 'call' 'tmp_3_62' <Predicate = (trunc_ln269)> <Delay = 2.97> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_163 : Operation 1761 [1/1] (2.55ns)   --->   "%add_ln273_256 = add i32 %tmp_3_62, %f_1_60" [sha256_impl.c:273]   --->   Operation 1761 'add' 'add_ln273_256' <Predicate = (trunc_ln269)> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_163 : Operation 1762 [1/1] (2.55ns)   --->   "%add_ln273_257 = add i32 %tmp_2_62, %tmp_47" [sha256_impl.c:273]   --->   Operation 1762 'add' 'add_ln273_257' <Predicate = (trunc_ln269)> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_163 : Operation 1763 [1/1] (3.75ns)   --->   "%tmp_4_62 = call fastcc i32 @EP0(i32 %a_1_62)" [sha256_impl.c:275]   --->   Operation 1763 'call' 'tmp_4_62' <Predicate = (trunc_ln269)> <Delay = 3.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_163 : Operation 1764 [1/1] (1.69ns)   --->   "%tmp_5_62 = call fastcc i32 @MAJ(i32 %a_1_62, i32 %b_1_62, i32 %c_1_62)" [sha256_impl.c:275]   --->   Operation 1764 'call' 'tmp_5_62' <Predicate = (trunc_ln269)> <Delay = 1.69> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_163 : Operation 1765 [1/1] (2.55ns)   --->   "%add_ln311 = add i32 %c_1_62, %ctx_state_3_read_1" [sha256_impl.c:311]   --->   Operation 1765 'add' 'add_ln311' <Predicate = true> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_163 : Operation 1766 [1/1] (2.55ns)   --->   "%add_ln314 = add i32 %f_1_62, %ctx_state_6_read_1" [sha256_impl.c:314]   --->   Operation 1766 'add' 'add_ln314' <Predicate = true> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_163 : Operation 1767 [1/1] (2.55ns)   --->   "%add_ln315 = add i32 %f_1_61, %ctx_state_7_read_1" [sha256_impl.c:315]   --->   Operation 1767 'add' 'add_ln315' <Predicate = true> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 164 <SV = 163> <Delay = 8.74>
ST_164 : Operation 1768 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln273_258 = add i32 %add_ln273_257, %add_ln273_256" [sha256_impl.c:273]   --->   Operation 1768 'add' 'add_ln273_258' <Predicate = (trunc_ln269)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_164 : Operation 1769 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%add_ln273_255 = add i32 %add_ln273_261, %add_ln273_258" [sha256_impl.c:273]   --->   Operation 1769 'add' 'add_ln273_255' <Predicate = (trunc_ln269)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_164 : Operation 1770 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln283_127 = add i32 %add_ln273_255, %tmp_5_62" [sha256_impl.c:283]   --->   Operation 1770 'add' 'add_ln283_127' <Predicate = (trunc_ln269)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_164 : Operation 1771 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%add_ln283_63 = add i32 %add_ln283_127, %tmp_4_62" [sha256_impl.c:283]   --->   Operation 1771 'add' 'add_ln283_63' <Predicate = (trunc_ln269)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>

State 165 <SV = 164> <Delay = 6.87>
ST_165 : Operation 1772 [1/1] (2.55ns)   --->   "%add_ln279_63 = add i32 %add_ln273_255, %c_1_61" [sha256_impl.c:279]   --->   Operation 1772 'add' 'add_ln279_63' <Predicate = (trunc_ln269)> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_165 : Operation 1773 [1/1] (1.76ns)   --->   "br label %126" [sha256_impl.c:285]   --->   Operation 1773 'br' <Predicate = (trunc_ln269)> <Delay = 1.76>
ST_165 : Operation 1774 [1/1] (0.00ns) (grouped into LUT with out node add_ln313)   --->   "%f_1_63 = phi i32 [ %e_1_62, %127 ], [ %c_1_61, %124 ]" [sha256_impl.c:279]   --->   Operation 1774 'phi' 'f_1_63' <Predicate = true> <Delay = 0.00>
ST_165 : Operation 1775 [1/1] (0.00ns) (grouped into LUT with out node add_ln312)   --->   "%e_1_63 = phi i32 [ %add_ln279_63, %127 ], [ %c_1_61, %124 ]" [sha256_impl.c:279]   --->   Operation 1775 'phi' 'e_1_63' <Predicate = true> <Delay = 0.00>
ST_165 : Operation 1776 [1/1] (0.00ns) (grouped into LUT with out node add_ln310)   --->   "%c_1_63 = phi i32 [ %b_1_62, %127 ], [ 0, %124 ]" [sha256_impl.c:283]   --->   Operation 1776 'phi' 'c_1_63' <Predicate = true> <Delay = 0.00>
ST_165 : Operation 1777 [1/1] (0.00ns) (grouped into LUT with out node add_ln309)   --->   "%b_1_63 = phi i32 [ %a_1_62, %127 ], [ 0, %124 ]" [sha256_impl.c:283]   --->   Operation 1777 'phi' 'b_1_63' <Predicate = true> <Delay = 0.00>
ST_165 : Operation 1778 [1/1] (0.00ns) (grouped into LUT with out node add_ln308)   --->   "%a_1_63 = phi i32 [ %add_ln283_63, %127 ], [ 0, %124 ]" [sha256_impl.c:283]   --->   Operation 1778 'phi' 'a_1_63' <Predicate = true> <Delay = 0.00>
ST_165 : Operation 1779 [1/1] (2.55ns) (out node of the LUT)   --->   "%add_ln308 = add i32 %a_1_63, %ctx_state_0_read_1" [sha256_impl.c:308]   --->   Operation 1779 'add' 'add_ln308' <Predicate = true> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_165 : Operation 1780 [1/1] (2.55ns) (out node of the LUT)   --->   "%add_ln309 = add i32 %b_1_63, %ctx_state_1_read_1" [sha256_impl.c:309]   --->   Operation 1780 'add' 'add_ln309' <Predicate = true> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_165 : Operation 1781 [1/1] (2.55ns) (out node of the LUT)   --->   "%add_ln310 = add i32 %c_1_63, %ctx_state_2_read_1" [sha256_impl.c:310]   --->   Operation 1781 'add' 'add_ln310' <Predicate = true> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_165 : Operation 1782 [1/1] (2.55ns) (out node of the LUT)   --->   "%add_ln312 = add i32 %e_1_63, %ctx_state_4_read_1" [sha256_impl.c:312]   --->   Operation 1782 'add' 'add_ln312' <Predicate = true> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_165 : Operation 1783 [1/1] (2.55ns) (out node of the LUT)   --->   "%add_ln313 = add i32 %f_1_63, %ctx_state_5_read_1" [sha256_impl.c:313]   --->   Operation 1783 'add' 'add_ln313' <Predicate = true> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_165 : Operation 1784 [1/1] (0.00ns)   --->   "%mrv = insertvalue { i32, i32, i32, i32, i32, i32, i32, i32 } undef, i32 %add_ln308, 0" [sha256_impl.c:316]   --->   Operation 1784 'insertvalue' 'mrv' <Predicate = true> <Delay = 0.00>
ST_165 : Operation 1785 [1/1] (0.00ns)   --->   "%mrv_1 = insertvalue { i32, i32, i32, i32, i32, i32, i32, i32 } %mrv, i32 %add_ln309, 1" [sha256_impl.c:316]   --->   Operation 1785 'insertvalue' 'mrv_1' <Predicate = true> <Delay = 0.00>
ST_165 : Operation 1786 [1/1] (0.00ns)   --->   "%mrv_2 = insertvalue { i32, i32, i32, i32, i32, i32, i32, i32 } %mrv_1, i32 %add_ln310, 2" [sha256_impl.c:316]   --->   Operation 1786 'insertvalue' 'mrv_2' <Predicate = true> <Delay = 0.00>
ST_165 : Operation 1787 [1/1] (0.00ns)   --->   "%mrv_3 = insertvalue { i32, i32, i32, i32, i32, i32, i32, i32 } %mrv_2, i32 %add_ln311, 3" [sha256_impl.c:316]   --->   Operation 1787 'insertvalue' 'mrv_3' <Predicate = true> <Delay = 0.00>
ST_165 : Operation 1788 [1/1] (0.00ns)   --->   "%mrv_4 = insertvalue { i32, i32, i32, i32, i32, i32, i32, i32 } %mrv_3, i32 %add_ln312, 4" [sha256_impl.c:316]   --->   Operation 1788 'insertvalue' 'mrv_4' <Predicate = true> <Delay = 0.00>
ST_165 : Operation 1789 [1/1] (0.00ns)   --->   "%mrv_5 = insertvalue { i32, i32, i32, i32, i32, i32, i32, i32 } %mrv_4, i32 %add_ln313, 5" [sha256_impl.c:316]   --->   Operation 1789 'insertvalue' 'mrv_5' <Predicate = true> <Delay = 0.00>
ST_165 : Operation 1790 [1/1] (0.00ns)   --->   "%mrv_6 = insertvalue { i32, i32, i32, i32, i32, i32, i32, i32 } %mrv_5, i32 %add_ln314, 6" [sha256_impl.c:316]   --->   Operation 1790 'insertvalue' 'mrv_6' <Predicate = true> <Delay = 0.00>
ST_165 : Operation 1791 [1/1] (0.00ns)   --->   "%mrv_7 = insertvalue { i32, i32, i32, i32, i32, i32, i32, i32 } %mrv_6, i32 %add_ln315, 7" [sha256_impl.c:316]   --->   Operation 1791 'insertvalue' 'mrv_7' <Predicate = true> <Delay = 0.00>
ST_165 : Operation 1792 [1/1] (0.00ns)   --->   "ret { i32, i32, i32, i32, i32, i32, i32, i32 } %mrv_7" [sha256_impl.c:316]   --->   Operation 1792 'ret' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 3.75ns
The critical path consists of the following:
	wire read on port 'ctx_state_4_read' (sha256_impl.c:246) [18]  (0 ns)
	'call' operation ('tmp_48', sha256_impl.c:273) to 'EP1' [405]  (3.75 ns)

 <State 2>: 6.69ns
The critical path consists of the following:
	'load' operation ('data_0_load', sha256_impl.c:252) on array 'data_0' [24]  (2.32 ns)
	'add' operation ('add_ln273_1', sha256_impl.c:273) [408]  (0 ns)
	'add' operation ('add_ln273_2', sha256_impl.c:273) [409]  (4.37 ns)

 <State 3>: 8.74ns
The critical path consists of the following:
	wire read on port 'ctx_state_7_read' (sha256_impl.c:246) [15]  (0 ns)
	'add' operation ('add_ln273', sha256_impl.c:273) [407]  (0 ns)
	'add' operation ('add_ln273_3', sha256_impl.c:273) [410]  (4.37 ns)
	'add' operation ('add_ln283_64', sha256_impl.c:283) [414]  (0 ns)
	'add' operation ('add_ln283', sha256_impl.c:283) [415]  (4.37 ns)

 <State 4>: 8.08ns
The critical path consists of the following:
	'add' operation ('add_ln279', sha256_impl.c:279) [413]  (2.55 ns)
	multiplexor before 'phi' operation ('e_1_0', sha256_impl.c:279) with incoming values : ('ctx_state_3_read_1', sha256_impl.c:246) ('add_ln279', sha256_impl.c:279) [419]  (1.77 ns)
	'phi' operation ('e_1_0', sha256_impl.c:279) with incoming values : ('ctx_state_3_read_1', sha256_impl.c:246) ('add_ln279', sha256_impl.c:279) [419]  (0 ns)
	'call' operation ('tmp_2_1', sha256_impl.c:273) to 'EP1' [425]  (3.75 ns)

 <State 5>: 8.74ns
The critical path consists of the following:
	'add' operation ('add_ln273_5', sha256_impl.c:273) [428]  (0 ns)
	'add' operation ('add_ln273_6', sha256_impl.c:273) [429]  (4.37 ns)
	'add' operation ('add_ln273_7', sha256_impl.c:273) [430]  (4.37 ns)

 <State 6>: 7.83ns
The critical path consists of the following:
	'add' operation ('add_ln283_65', sha256_impl.c:283) [434]  (0 ns)
	'add' operation ('add_ln283_1', sha256_impl.c:283) [435]  (4.37 ns)
	multiplexor before 'phi' operation ('a_1_1', sha256_impl.c:283) with incoming values : ('add_ln283_1', sha256_impl.c:283) [442]  (1.77 ns)
	'phi' operation ('a_1_1', sha256_impl.c:283) with incoming values : ('add_ln283_1', sha256_impl.c:283) [442]  (0 ns)
	'call' operation ('tmp_5_2', sha256_impl.c:275) to 'MAJ' [452]  (1.69 ns)

 <State 7>: 8.13ns
The critical path consists of the following:
	'phi' operation ('e_1_1', sha256_impl.c:279) with incoming values : ('ctx_state_2_read_1', sha256_impl.c:246) ('add_ln279_1', sha256_impl.c:279) [439]  (0 ns)
	'call' operation ('tmp_2_2', sha256_impl.c:273) to 'EP1' [445]  (3.75 ns)
	'add' operation ('add_ln273_9', sha256_impl.c:273) [448]  (0 ns)
	'add' operation ('add_ln273_10', sha256_impl.c:273) [449]  (4.37 ns)

 <State 8>: 8.74ns
The critical path consists of the following:
	'add' operation ('add_ln273_8', sha256_impl.c:273) [447]  (0 ns)
	'add' operation ('add_ln273_11', sha256_impl.c:273) [450]  (4.37 ns)
	'add' operation ('add_ln283_66', sha256_impl.c:283) [454]  (0 ns)
	'add' operation ('add_ln283_2', sha256_impl.c:283) [455]  (4.37 ns)

 <State 9>: 8.63ns
The critical path consists of the following:
	'load' operation ('data_0_load_14', sha256_impl.c:252) on array 'data_0' [150]  (2.32 ns)
	'call' operation ('tmp1', sha256_impl.c:256) to 'SIG1' [167]  (3.75 ns)
	'add' operation ('add_ln256', sha256_impl.c:256) [169]  (2.55 ns)

 <State 10>: 8.74ns
The critical path consists of the following:
	'add' operation ('add_ln273_13', sha256_impl.c:273) [468]  (0 ns)
	'add' operation ('add_ln273_14', sha256_impl.c:273) [469]  (4.37 ns)
	'add' operation ('add_ln273_15', sha256_impl.c:273) [470]  (4.37 ns)

 <State 11>: 7.83ns
The critical path consists of the following:
	'add' operation ('add_ln283_67', sha256_impl.c:283) [474]  (0 ns)
	'add' operation ('add_ln283_3', sha256_impl.c:283) [475]  (4.37 ns)
	multiplexor before 'phi' operation ('a_1_3', sha256_impl.c:283) with incoming values : ('add_ln283_3', sha256_impl.c:283) [482]  (1.77 ns)
	'phi' operation ('a_1_3', sha256_impl.c:283) with incoming values : ('add_ln283_3', sha256_impl.c:283) [482]  (0 ns)
	'call' operation ('tmp_5_4', sha256_impl.c:275) to 'MAJ' [492]  (1.69 ns)

 <State 12>: 8.13ns
The critical path consists of the following:
	'phi' operation ('e_1_3', sha256_impl.c:279) with incoming values : ('ctx_state_0_read_1', sha256_impl.c:246) ('add_ln279_3', sha256_impl.c:279) [479]  (0 ns)
	'call' operation ('tmp_2_4', sha256_impl.c:273) to 'EP1' [485]  (3.75 ns)
	'add' operation ('add_ln273_18', sha256_impl.c:273) [489]  (4.37 ns)

 <State 13>: 8.74ns
The critical path consists of the following:
	'add' operation ('add_ln273_16', sha256_impl.c:273) [487]  (0 ns)
	'add' operation ('add_ln273_19', sha256_impl.c:273) [490]  (4.37 ns)
	'add' operation ('add_ln283_68', sha256_impl.c:283) [494]  (0 ns)
	'add' operation ('add_ln283_4', sha256_impl.c:283) [495]  (4.37 ns)

 <State 14>: 8.08ns
The critical path consists of the following:
	'add' operation ('add_ln279_4', sha256_impl.c:279) [493]  (2.55 ns)
	multiplexor before 'phi' operation ('e_1_4', sha256_impl.c:279) with incoming values : ('add_ln283', sha256_impl.c:283) ('add_ln279_4', sha256_impl.c:279) [499]  (1.77 ns)
	'phi' operation ('e_1_4', sha256_impl.c:279) with incoming values : ('add_ln283', sha256_impl.c:283) ('add_ln279_4', sha256_impl.c:279) [499]  (0 ns)
	'call' operation ('tmp_2_5', sha256_impl.c:273) to 'EP1' [505]  (3.75 ns)

 <State 15>: 8.74ns
The critical path consists of the following:
	'add' operation ('add_ln273_21', sha256_impl.c:273) [508]  (0 ns)
	'add' operation ('add_ln273_22', sha256_impl.c:273) [509]  (4.37 ns)
	'add' operation ('add_ln273_23', sha256_impl.c:273) [510]  (4.37 ns)

 <State 16>: 8.13ns
The critical path consists of the following:
	'add' operation ('add_ln256_25', sha256_impl.c:256) [210]  (0 ns)
	'add' operation ('m[24]', sha256_impl.c:256) [211]  (4.37 ns)
	'call' operation ('tmp_10', sha256_impl.c:256) to 'SIG1' [217]  (3.75 ns)

 <State 17>: 8.13ns
The critical path consists of the following:
	'phi' operation ('e_1_5', sha256_impl.c:279) with incoming values : ('add_ln283_1', sha256_impl.c:283) ('add_ln279_5', sha256_impl.c:279) [519]  (0 ns)
	'call' operation ('tmp_2_6', sha256_impl.c:273) to 'EP1' [525]  (3.75 ns)
	'add' operation ('add_ln273_25', sha256_impl.c:273) [528]  (0 ns)
	'add' operation ('add_ln273_26', sha256_impl.c:273) [529]  (4.37 ns)

 <State 18>: 8.74ns
The critical path consists of the following:
	'add' operation ('add_ln273_24', sha256_impl.c:273) [527]  (0 ns)
	'add' operation ('add_ln273_27', sha256_impl.c:273) [530]  (4.37 ns)
	'add' operation ('add_ln283_70', sha256_impl.c:283) [534]  (0 ns)
	'add' operation ('add_ln283_6', sha256_impl.c:283) [535]  (4.37 ns)

 <State 19>: 8.13ns
The critical path consists of the following:
	'add' operation ('add_ln256_37', sha256_impl.c:256) [230]  (0 ns)
	'add' operation ('m[28]', sha256_impl.c:256) [231]  (4.37 ns)
	'call' operation ('tmp_14', sha256_impl.c:256) to 'SIG1' [237]  (3.75 ns)

 <State 20>: 8.74ns
The critical path consists of the following:
	'add' operation ('add_ln273_29', sha256_impl.c:273) [548]  (0 ns)
	'add' operation ('add_ln273_30', sha256_impl.c:273) [549]  (4.37 ns)
	'add' operation ('add_ln273_31', sha256_impl.c:273) [550]  (4.37 ns)

 <State 21>: 7.83ns
The critical path consists of the following:
	'add' operation ('add_ln283_71', sha256_impl.c:283) [554]  (0 ns)
	'add' operation ('add_ln283_7', sha256_impl.c:283) [555]  (4.37 ns)
	multiplexor before 'phi' operation ('a_1_7', sha256_impl.c:283) with incoming values : ('add_ln283_7', sha256_impl.c:283) [562]  (1.77 ns)
	'phi' operation ('a_1_7', sha256_impl.c:283) with incoming values : ('add_ln283_7', sha256_impl.c:283) [562]  (0 ns)
	'call' operation ('tmp_5_8', sha256_impl.c:275) to 'MAJ' [572]  (1.69 ns)

 <State 22>: 8.13ns
The critical path consists of the following:
	'add' operation ('add_ln256_49', sha256_impl.c:256) [250]  (0 ns)
	'add' operation ('m[32]', sha256_impl.c:256) [251]  (4.37 ns)
	'call' operation ('tmp_18', sha256_impl.c:256) to 'SIG1' [257]  (3.75 ns)

 <State 23>: 8.74ns
The critical path consists of the following:
	'add' operation ('add_ln273_32', sha256_impl.c:273) [567]  (0 ns)
	'add' operation ('add_ln273_35', sha256_impl.c:273) [570]  (4.37 ns)
	'add' operation ('add_ln283_72', sha256_impl.c:283) [574]  (0 ns)
	'add' operation ('add_ln283_8', sha256_impl.c:283) [575]  (4.37 ns)

 <State 24>: 8.08ns
The critical path consists of the following:
	'add' operation ('add_ln279_8', sha256_impl.c:279) [573]  (2.55 ns)
	multiplexor before 'phi' operation ('e_1_8', sha256_impl.c:279) with incoming values : ('add_ln283_4', sha256_impl.c:283) ('add_ln279_8', sha256_impl.c:279) [579]  (1.77 ns)
	'phi' operation ('e_1_8', sha256_impl.c:279) with incoming values : ('add_ln283_4', sha256_impl.c:283) ('add_ln279_8', sha256_impl.c:279) [579]  (0 ns)
	'call' operation ('tmp_2_9', sha256_impl.c:273) to 'EP1' [585]  (3.75 ns)

 <State 25>: 8.74ns
The critical path consists of the following:
	'add' operation ('add_ln273_37', sha256_impl.c:273) [588]  (0 ns)
	'add' operation ('add_ln273_38', sha256_impl.c:273) [589]  (4.37 ns)
	'add' operation ('add_ln273_39', sha256_impl.c:273) [590]  (4.37 ns)

 <State 26>: 7.83ns
The critical path consists of the following:
	'add' operation ('add_ln283_73', sha256_impl.c:283) [594]  (0 ns)
	'add' operation ('add_ln283_9', sha256_impl.c:283) [595]  (4.37 ns)
	multiplexor before 'phi' operation ('a_1_9', sha256_impl.c:283) with incoming values : ('add_ln283_9', sha256_impl.c:283) [602]  (1.77 ns)
	'phi' operation ('a_1_9', sha256_impl.c:283) with incoming values : ('add_ln283_9', sha256_impl.c:283) [602]  (0 ns)
	'call' operation ('tmp_5_s', sha256_impl.c:275) to 'MAJ' [612]  (1.69 ns)

 <State 27>: 8.13ns
The critical path consists of the following:
	'phi' operation ('e_1_9', sha256_impl.c:279) with incoming values : ('add_ln283_5', sha256_impl.c:283) ('add_ln279_9', sha256_impl.c:279) [599]  (0 ns)
	'call' operation ('tmp_2_s', sha256_impl.c:273) to 'EP1' [605]  (3.75 ns)
	'add' operation ('add_ln273_42', sha256_impl.c:273) [609]  (4.37 ns)

 <State 28>: 8.74ns
The critical path consists of the following:
	'add' operation ('add_ln273_40', sha256_impl.c:273) [607]  (0 ns)
	'add' operation ('add_ln273_43', sha256_impl.c:273) [610]  (4.37 ns)
	'add' operation ('add_ln283_74', sha256_impl.c:283) [614]  (0 ns)
	'add' operation ('add_ln283_10', sha256_impl.c:283) [615]  (4.37 ns)

 <State 29>: 8.08ns
The critical path consists of the following:
	'add' operation ('add_ln279_10', sha256_impl.c:279) [613]  (2.55 ns)
	multiplexor before 'phi' operation ('e_1_10', sha256_impl.c:279) with incoming values : ('add_ln283_6', sha256_impl.c:283) ('add_ln279_10', sha256_impl.c:279) [619]  (1.77 ns)
	'phi' operation ('e_1_10', sha256_impl.c:279) with incoming values : ('add_ln283_6', sha256_impl.c:283) ('add_ln279_10', sha256_impl.c:279) [619]  (0 ns)
	'call' operation ('tmp_2_10', sha256_impl.c:273) to 'EP1' [625]  (3.75 ns)

 <State 30>: 8.74ns
The critical path consists of the following:
	'add' operation ('add_ln273_45', sha256_impl.c:273) [628]  (0 ns)
	'add' operation ('add_ln273_46', sha256_impl.c:273) [629]  (4.37 ns)
	'add' operation ('add_ln273_47', sha256_impl.c:273) [630]  (4.37 ns)

 <State 31>: 8.13ns
The critical path consists of the following:
	'add' operation ('add_ln256_85', sha256_impl.c:256) [310]  (0 ns)
	'add' operation ('m[44]', sha256_impl.c:256) [311]  (4.37 ns)
	'call' operation ('tmp_30', sha256_impl.c:256) to 'SIG1' [317]  (3.75 ns)

 <State 32>: 8.13ns
The critical path consists of the following:
	'phi' operation ('e_1_11', sha256_impl.c:279) with incoming values : ('add_ln283_7', sha256_impl.c:283) ('add_ln279_11', sha256_impl.c:279) [639]  (0 ns)
	'call' operation ('tmp_2_11', sha256_impl.c:273) to 'EP1' [645]  (3.75 ns)
	'add' operation ('add_ln273_50', sha256_impl.c:273) [649]  (4.37 ns)

 <State 33>: 8.74ns
The critical path consists of the following:
	'add' operation ('add_ln273_48', sha256_impl.c:273) [647]  (0 ns)
	'add' operation ('add_ln273_51', sha256_impl.c:273) [650]  (4.37 ns)
	'add' operation ('add_ln283_76', sha256_impl.c:283) [654]  (0 ns)
	'add' operation ('add_ln283_12', sha256_impl.c:283) [655]  (4.37 ns)

 <State 34>: 8.13ns
The critical path consists of the following:
	'add' operation ('add_ln256_97', sha256_impl.c:256) [330]  (0 ns)
	'add' operation ('m[48]', sha256_impl.c:256) [331]  (4.37 ns)
	'call' operation ('tmp_34', sha256_impl.c:256) to 'SIG1' [337]  (3.75 ns)

 <State 35>: 8.74ns
The critical path consists of the following:
	'add' operation ('add_ln273_53', sha256_impl.c:273) [668]  (0 ns)
	'add' operation ('add_ln273_54', sha256_impl.c:273) [669]  (4.37 ns)
	'add' operation ('add_ln273_55', sha256_impl.c:273) [670]  (4.37 ns)

 <State 36>: 7.83ns
The critical path consists of the following:
	'add' operation ('add_ln283_77', sha256_impl.c:283) [674]  (0 ns)
	'add' operation ('add_ln283_13', sha256_impl.c:283) [675]  (4.37 ns)
	multiplexor before 'phi' operation ('a_1_13', sha256_impl.c:283) with incoming values : ('add_ln283_13', sha256_impl.c:283) [682]  (1.77 ns)
	'phi' operation ('a_1_13', sha256_impl.c:283) with incoming values : ('add_ln283_13', sha256_impl.c:283) [682]  (0 ns)
	'call' operation ('tmp_5_13', sha256_impl.c:275) to 'MAJ' [692]  (1.69 ns)

 <State 37>: 8.13ns
The critical path consists of the following:
	'add' operation ('add_ln256_109', sha256_impl.c:256) [350]  (0 ns)
	'add' operation ('m[52]', sha256_impl.c:256) [351]  (4.37 ns)
	'call' operation ('tmp_38', sha256_impl.c:256) to 'SIG1' [357]  (3.75 ns)

 <State 38>: 8.74ns
The critical path consists of the following:
	'add' operation ('add_ln273_56', sha256_impl.c:273) [687]  (0 ns)
	'add' operation ('add_ln273_59', sha256_impl.c:273) [690]  (4.37 ns)
	'add' operation ('add_ln283_78', sha256_impl.c:283) [694]  (0 ns)
	'add' operation ('add_ln283_14', sha256_impl.c:283) [695]  (4.37 ns)

 <State 39>: 8.08ns
The critical path consists of the following:
	'add' operation ('add_ln279_14', sha256_impl.c:279) [693]  (2.55 ns)
	multiplexor before 'phi' operation ('e_1_14', sha256_impl.c:279) with incoming values : ('add_ln283_10', sha256_impl.c:283) ('add_ln279_14', sha256_impl.c:279) [699]  (1.77 ns)
	'phi' operation ('e_1_14', sha256_impl.c:279) with incoming values : ('add_ln283_10', sha256_impl.c:283) ('add_ln279_14', sha256_impl.c:279) [699]  (0 ns)
	'call' operation ('tmp_2_14', sha256_impl.c:273) to 'EP1' [705]  (3.75 ns)

 <State 40>: 8.74ns
The critical path consists of the following:
	'add' operation ('add_ln273_61', sha256_impl.c:273) [708]  (0 ns)
	'add' operation ('add_ln273_62', sha256_impl.c:273) [709]  (4.37 ns)
	'add' operation ('add_ln273_63', sha256_impl.c:273) [710]  (4.37 ns)

 <State 41>: 7.83ns
The critical path consists of the following:
	'add' operation ('add_ln283_79', sha256_impl.c:283) [714]  (0 ns)
	'add' operation ('add_ln283_15', sha256_impl.c:283) [715]  (4.37 ns)
	multiplexor before 'phi' operation ('a_1_15', sha256_impl.c:283) with incoming values : ('add_ln283_15', sha256_impl.c:283) [722]  (1.77 ns)
	'phi' operation ('a_1_15', sha256_impl.c:283) with incoming values : ('add_ln283_15', sha256_impl.c:283) [722]  (0 ns)
	'call' operation ('tmp_5_15', sha256_impl.c:275) to 'MAJ' [732]  (1.69 ns)

 <State 42>: 8.13ns
The critical path consists of the following:
	'phi' operation ('e_1_15', sha256_impl.c:279) with incoming values : ('add_ln283_11', sha256_impl.c:283) ('add_ln279_15', sha256_impl.c:279) [719]  (0 ns)
	'call' operation ('tmp_2_15', sha256_impl.c:273) to 'EP1' [725]  (3.75 ns)
	'add' operation ('add_ln273_66', sha256_impl.c:273) [729]  (4.37 ns)

 <State 43>: 8.74ns
The critical path consists of the following:
	'add' operation ('add_ln273_64', sha256_impl.c:273) [727]  (0 ns)
	'add' operation ('add_ln273_67', sha256_impl.c:273) [730]  (4.37 ns)
	'add' operation ('add_ln283_80', sha256_impl.c:283) [734]  (0 ns)
	'add' operation ('add_ln283_16', sha256_impl.c:283) [735]  (4.37 ns)

 <State 44>: 8.08ns
The critical path consists of the following:
	'add' operation ('add_ln279_16', sha256_impl.c:279) [733]  (2.55 ns)
	multiplexor before 'phi' operation ('e_1_16', sha256_impl.c:279) with incoming values : ('add_ln283_12', sha256_impl.c:283) ('add_ln279_16', sha256_impl.c:279) [739]  (1.77 ns)
	'phi' operation ('e_1_16', sha256_impl.c:279) with incoming values : ('add_ln283_12', sha256_impl.c:283) ('add_ln279_16', sha256_impl.c:279) [739]  (0 ns)
	'call' operation ('tmp_2_16', sha256_impl.c:273) to 'EP1' [745]  (3.75 ns)

 <State 45>: 8.74ns
The critical path consists of the following:
	'add' operation ('add_ln273_69', sha256_impl.c:273) [748]  (0 ns)
	'add' operation ('add_ln273_70', sha256_impl.c:273) [749]  (4.37 ns)
	'add' operation ('add_ln273_71', sha256_impl.c:273) [750]  (4.37 ns)

 <State 46>: 8.13ns
The critical path consists of the following:
	'add' operation ('add_ln256_136', sha256_impl.c:256) [395]  (0 ns)
	'add' operation ('m[61]', sha256_impl.c:256) [396]  (4.37 ns)
	'call' operation ('tmp_47', sha256_impl.c:256) to 'SIG1' [399]  (3.75 ns)

 <State 47>: 8.13ns
The critical path consists of the following:
	'phi' operation ('e_1_17', sha256_impl.c:279) with incoming values : ('add_ln283_13', sha256_impl.c:283) ('add_ln279_17', sha256_impl.c:279) [759]  (0 ns)
	'call' operation ('tmp_2_17', sha256_impl.c:273) to 'EP1' [765]  (3.75 ns)
	'add' operation ('add_ln273_74', sha256_impl.c:273) [769]  (4.37 ns)

 <State 48>: 8.74ns
The critical path consists of the following:
	'add' operation ('add_ln273_72', sha256_impl.c:273) [767]  (0 ns)
	'add' operation ('add_ln273_75', sha256_impl.c:273) [770]  (4.37 ns)
	'add' operation ('add_ln283_82', sha256_impl.c:283) [774]  (0 ns)
	'add' operation ('add_ln283_18', sha256_impl.c:283) [775]  (4.37 ns)

 <State 49>: 8.08ns
The critical path consists of the following:
	'add' operation ('add_ln279_18', sha256_impl.c:279) [773]  (2.55 ns)
	multiplexor before 'phi' operation ('e_1_18', sha256_impl.c:279) with incoming values : ('add_ln283_14', sha256_impl.c:283) ('add_ln279_18', sha256_impl.c:279) [779]  (1.77 ns)
	'phi' operation ('e_1_18', sha256_impl.c:279) with incoming values : ('add_ln283_14', sha256_impl.c:283) ('add_ln279_18', sha256_impl.c:279) [779]  (0 ns)
	'call' operation ('tmp_2_18', sha256_impl.c:273) to 'EP1' [785]  (3.75 ns)

 <State 50>: 8.74ns
The critical path consists of the following:
	'add' operation ('add_ln273_77', sha256_impl.c:273) [788]  (0 ns)
	'add' operation ('add_ln273_78', sha256_impl.c:273) [789]  (4.37 ns)
	'add' operation ('add_ln273_79', sha256_impl.c:273) [790]  (4.37 ns)

 <State 51>: 7.83ns
The critical path consists of the following:
	'add' operation ('add_ln283_83', sha256_impl.c:283) [794]  (0 ns)
	'add' operation ('add_ln283_19', sha256_impl.c:283) [795]  (4.37 ns)
	multiplexor before 'phi' operation ('a_1_19', sha256_impl.c:283) with incoming values : ('add_ln283_19', sha256_impl.c:283) [802]  (1.77 ns)
	'phi' operation ('a_1_19', sha256_impl.c:283) with incoming values : ('add_ln283_19', sha256_impl.c:283) [802]  (0 ns)
	'call' operation ('tmp_5_19', sha256_impl.c:275) to 'MAJ' [812]  (1.69 ns)

 <State 52>: 8.13ns
The critical path consists of the following:
	'phi' operation ('e_1_19', sha256_impl.c:279) with incoming values : ('add_ln283_15', sha256_impl.c:283) ('add_ln279_19', sha256_impl.c:279) [799]  (0 ns)
	'call' operation ('tmp_2_19', sha256_impl.c:273) to 'EP1' [805]  (3.75 ns)
	'add' operation ('add_ln273_82', sha256_impl.c:273) [809]  (4.37 ns)

 <State 53>: 8.74ns
The critical path consists of the following:
	'add' operation ('add_ln273_80', sha256_impl.c:273) [807]  (0 ns)
	'add' operation ('add_ln273_83', sha256_impl.c:273) [810]  (4.37 ns)
	'add' operation ('add_ln283_84', sha256_impl.c:283) [814]  (0 ns)
	'add' operation ('add_ln283_20', sha256_impl.c:283) [815]  (4.37 ns)

 <State 54>: 8.08ns
The critical path consists of the following:
	'add' operation ('add_ln279_20', sha256_impl.c:279) [813]  (2.55 ns)
	multiplexor before 'phi' operation ('e_1_20', sha256_impl.c:279) with incoming values : ('add_ln283_16', sha256_impl.c:283) ('add_ln279_20', sha256_impl.c:279) [819]  (1.77 ns)
	'phi' operation ('e_1_20', sha256_impl.c:279) with incoming values : ('add_ln283_16', sha256_impl.c:283) ('add_ln279_20', sha256_impl.c:279) [819]  (0 ns)
	'call' operation ('tmp_2_20', sha256_impl.c:273) to 'EP1' [825]  (3.75 ns)

 <State 55>: 8.74ns
The critical path consists of the following:
	'add' operation ('add_ln273_85', sha256_impl.c:273) [828]  (0 ns)
	'add' operation ('add_ln273_86', sha256_impl.c:273) [829]  (4.37 ns)
	'add' operation ('add_ln273_87', sha256_impl.c:273) [830]  (4.37 ns)

 <State 56>: 7.83ns
The critical path consists of the following:
	'add' operation ('add_ln283_85', sha256_impl.c:283) [834]  (0 ns)
	'add' operation ('add_ln283_21', sha256_impl.c:283) [835]  (4.37 ns)
	multiplexor before 'phi' operation ('a_1_21', sha256_impl.c:283) with incoming values : ('add_ln283_21', sha256_impl.c:283) [842]  (1.77 ns)
	'phi' operation ('a_1_21', sha256_impl.c:283) with incoming values : ('add_ln283_21', sha256_impl.c:283) [842]  (0 ns)
	'call' operation ('tmp_5_21', sha256_impl.c:275) to 'MAJ' [852]  (1.69 ns)

 <State 57>: 8.13ns
The critical path consists of the following:
	'phi' operation ('e_1_21', sha256_impl.c:279) with incoming values : ('add_ln283_17', sha256_impl.c:283) ('add_ln279_21', sha256_impl.c:279) [839]  (0 ns)
	'call' operation ('tmp_2_21', sha256_impl.c:273) to 'EP1' [845]  (3.75 ns)
	'add' operation ('add_ln273_90', sha256_impl.c:273) [849]  (4.37 ns)

 <State 58>: 8.74ns
The critical path consists of the following:
	'add' operation ('add_ln273_88', sha256_impl.c:273) [847]  (0 ns)
	'add' operation ('add_ln273_91', sha256_impl.c:273) [850]  (4.37 ns)
	'add' operation ('add_ln283_86', sha256_impl.c:283) [854]  (0 ns)
	'add' operation ('add_ln283_22', sha256_impl.c:283) [855]  (4.37 ns)

 <State 59>: 8.08ns
The critical path consists of the following:
	'add' operation ('add_ln279_22', sha256_impl.c:279) [853]  (2.55 ns)
	multiplexor before 'phi' operation ('e_1_22', sha256_impl.c:279) with incoming values : ('add_ln283_18', sha256_impl.c:283) ('add_ln279_22', sha256_impl.c:279) [859]  (1.77 ns)
	'phi' operation ('e_1_22', sha256_impl.c:279) with incoming values : ('add_ln283_18', sha256_impl.c:283) ('add_ln279_22', sha256_impl.c:279) [859]  (0 ns)
	'call' operation ('tmp_2_22', sha256_impl.c:273) to 'EP1' [865]  (3.75 ns)

 <State 60>: 8.74ns
The critical path consists of the following:
	'add' operation ('add_ln273_93', sha256_impl.c:273) [868]  (0 ns)
	'add' operation ('add_ln273_94', sha256_impl.c:273) [869]  (4.37 ns)
	'add' operation ('add_ln273_95', sha256_impl.c:273) [870]  (4.37 ns)

 <State 61>: 7.83ns
The critical path consists of the following:
	'add' operation ('add_ln283_87', sha256_impl.c:283) [874]  (0 ns)
	'add' operation ('add_ln283_23', sha256_impl.c:283) [875]  (4.37 ns)
	multiplexor before 'phi' operation ('a_1_23', sha256_impl.c:283) with incoming values : ('add_ln283_23', sha256_impl.c:283) [882]  (1.77 ns)
	'phi' operation ('a_1_23', sha256_impl.c:283) with incoming values : ('add_ln283_23', sha256_impl.c:283) [882]  (0 ns)
	'call' operation ('tmp_5_23', sha256_impl.c:275) to 'MAJ' [892]  (1.69 ns)

 <State 62>: 8.13ns
The critical path consists of the following:
	'phi' operation ('e_1_23', sha256_impl.c:279) with incoming values : ('add_ln283_19', sha256_impl.c:283) ('add_ln279_23', sha256_impl.c:279) [879]  (0 ns)
	'call' operation ('tmp_2_23', sha256_impl.c:273) to 'EP1' [885]  (3.75 ns)
	'add' operation ('add_ln273_97', sha256_impl.c:273) [888]  (0 ns)
	'add' operation ('add_ln273_98', sha256_impl.c:273) [889]  (4.37 ns)

 <State 63>: 8.74ns
The critical path consists of the following:
	'add' operation ('add_ln273_96', sha256_impl.c:273) [887]  (0 ns)
	'add' operation ('add_ln273_99', sha256_impl.c:273) [890]  (4.37 ns)
	'add' operation ('add_ln283_88', sha256_impl.c:283) [894]  (0 ns)
	'add' operation ('add_ln283_24', sha256_impl.c:283) [895]  (4.37 ns)

 <State 64>: 8.08ns
The critical path consists of the following:
	'add' operation ('add_ln279_24', sha256_impl.c:279) [893]  (2.55 ns)
	multiplexor before 'phi' operation ('e_1_24', sha256_impl.c:279) with incoming values : ('add_ln283_20', sha256_impl.c:283) ('add_ln279_24', sha256_impl.c:279) [899]  (1.77 ns)
	'phi' operation ('e_1_24', sha256_impl.c:279) with incoming values : ('add_ln283_20', sha256_impl.c:283) ('add_ln279_24', sha256_impl.c:279) [899]  (0 ns)
	'call' operation ('tmp_2_24', sha256_impl.c:273) to 'EP1' [905]  (3.75 ns)

 <State 65>: 8.74ns
The critical path consists of the following:
	'add' operation ('add_ln273_101', sha256_impl.c:273) [908]  (0 ns)
	'add' operation ('add_ln273_102', sha256_impl.c:273) [909]  (4.37 ns)
	'add' operation ('add_ln273_103', sha256_impl.c:273) [910]  (4.37 ns)

 <State 66>: 7.83ns
The critical path consists of the following:
	'add' operation ('add_ln283_89', sha256_impl.c:283) [914]  (0 ns)
	'add' operation ('add_ln283_25', sha256_impl.c:283) [915]  (4.37 ns)
	multiplexor before 'phi' operation ('a_1_25', sha256_impl.c:283) with incoming values : ('add_ln283_25', sha256_impl.c:283) [922]  (1.77 ns)
	'phi' operation ('a_1_25', sha256_impl.c:283) with incoming values : ('add_ln283_25', sha256_impl.c:283) [922]  (0 ns)
	'call' operation ('tmp_5_25', sha256_impl.c:275) to 'MAJ' [932]  (1.69 ns)

 <State 67>: 8.13ns
The critical path consists of the following:
	'phi' operation ('e_1_25', sha256_impl.c:279) with incoming values : ('add_ln283_21', sha256_impl.c:283) ('add_ln279_25', sha256_impl.c:279) [919]  (0 ns)
	'call' operation ('tmp_2_25', sha256_impl.c:273) to 'EP1' [925]  (3.75 ns)
	'add' operation ('add_ln273_105', sha256_impl.c:273) [928]  (0 ns)
	'add' operation ('add_ln273_106', sha256_impl.c:273) [929]  (4.37 ns)

 <State 68>: 8.74ns
The critical path consists of the following:
	'add' operation ('add_ln273_104', sha256_impl.c:273) [927]  (0 ns)
	'add' operation ('add_ln273_107', sha256_impl.c:273) [930]  (4.37 ns)
	'add' operation ('add_ln283_90', sha256_impl.c:283) [934]  (0 ns)
	'add' operation ('add_ln283_26', sha256_impl.c:283) [935]  (4.37 ns)

 <State 69>: 8.08ns
The critical path consists of the following:
	'add' operation ('add_ln279_26', sha256_impl.c:279) [933]  (2.55 ns)
	multiplexor before 'phi' operation ('e_1_26', sha256_impl.c:279) with incoming values : ('add_ln283_22', sha256_impl.c:283) ('add_ln279_26', sha256_impl.c:279) [939]  (1.77 ns)
	'phi' operation ('e_1_26', sha256_impl.c:279) with incoming values : ('add_ln283_22', sha256_impl.c:283) ('add_ln279_26', sha256_impl.c:279) [939]  (0 ns)
	'call' operation ('tmp_2_26', sha256_impl.c:273) to 'EP1' [945]  (3.75 ns)

 <State 70>: 8.74ns
The critical path consists of the following:
	'add' operation ('add_ln273_109', sha256_impl.c:273) [948]  (0 ns)
	'add' operation ('add_ln273_110', sha256_impl.c:273) [949]  (4.37 ns)
	'add' operation ('add_ln273_111', sha256_impl.c:273) [950]  (4.37 ns)

 <State 71>: 7.83ns
The critical path consists of the following:
	'add' operation ('add_ln283_91', sha256_impl.c:283) [954]  (0 ns)
	'add' operation ('add_ln283_27', sha256_impl.c:283) [955]  (4.37 ns)
	multiplexor before 'phi' operation ('a_1_27', sha256_impl.c:283) with incoming values : ('add_ln283_27', sha256_impl.c:283) [962]  (1.77 ns)
	'phi' operation ('a_1_27', sha256_impl.c:283) with incoming values : ('add_ln283_27', sha256_impl.c:283) [962]  (0 ns)
	'call' operation ('tmp_5_27', sha256_impl.c:275) to 'MAJ' [972]  (1.69 ns)

 <State 72>: 8.13ns
The critical path consists of the following:
	'phi' operation ('e_1_27', sha256_impl.c:279) with incoming values : ('add_ln283_23', sha256_impl.c:283) ('add_ln279_27', sha256_impl.c:279) [959]  (0 ns)
	'call' operation ('tmp_2_27', sha256_impl.c:273) to 'EP1' [965]  (3.75 ns)
	'add' operation ('add_ln273_114', sha256_impl.c:273) [969]  (4.37 ns)

 <State 73>: 8.74ns
The critical path consists of the following:
	'add' operation ('add_ln273_112', sha256_impl.c:273) [967]  (0 ns)
	'add' operation ('add_ln273_115', sha256_impl.c:273) [970]  (4.37 ns)
	'add' operation ('add_ln283_92', sha256_impl.c:283) [974]  (0 ns)
	'add' operation ('add_ln283_28', sha256_impl.c:283) [975]  (4.37 ns)

 <State 74>: 8.08ns
The critical path consists of the following:
	'add' operation ('add_ln279_28', sha256_impl.c:279) [973]  (2.55 ns)
	multiplexor before 'phi' operation ('e_1_28', sha256_impl.c:279) with incoming values : ('add_ln283_24', sha256_impl.c:283) ('add_ln279_28', sha256_impl.c:279) [979]  (1.77 ns)
	'phi' operation ('e_1_28', sha256_impl.c:279) with incoming values : ('add_ln283_24', sha256_impl.c:283) ('add_ln279_28', sha256_impl.c:279) [979]  (0 ns)
	'call' operation ('tmp_2_28', sha256_impl.c:273) to 'EP1' [985]  (3.75 ns)

 <State 75>: 8.74ns
The critical path consists of the following:
	'add' operation ('add_ln273_117', sha256_impl.c:273) [988]  (0 ns)
	'add' operation ('add_ln273_118', sha256_impl.c:273) [989]  (4.37 ns)
	'add' operation ('add_ln273_119', sha256_impl.c:273) [990]  (4.37 ns)

 <State 76>: 7.83ns
The critical path consists of the following:
	'add' operation ('add_ln283_93', sha256_impl.c:283) [994]  (0 ns)
	'add' operation ('add_ln283_29', sha256_impl.c:283) [995]  (4.37 ns)
	multiplexor before 'phi' operation ('a_1_29', sha256_impl.c:283) with incoming values : ('add_ln283_29', sha256_impl.c:283) [1002]  (1.77 ns)
	'phi' operation ('a_1_29', sha256_impl.c:283) with incoming values : ('add_ln283_29', sha256_impl.c:283) [1002]  (0 ns)
	'call' operation ('tmp_5_29', sha256_impl.c:275) to 'MAJ' [1012]  (1.69 ns)

 <State 77>: 8.13ns
The critical path consists of the following:
	'phi' operation ('e_1_29', sha256_impl.c:279) with incoming values : ('add_ln283_25', sha256_impl.c:283) ('add_ln279_29', sha256_impl.c:279) [999]  (0 ns)
	'call' operation ('tmp_2_29', sha256_impl.c:273) to 'EP1' [1005]  (3.75 ns)
	'add' operation ('add_ln273_122', sha256_impl.c:273) [1009]  (4.37 ns)

 <State 78>: 8.74ns
The critical path consists of the following:
	'add' operation ('add_ln273_120', sha256_impl.c:273) [1007]  (0 ns)
	'add' operation ('add_ln273_123', sha256_impl.c:273) [1010]  (4.37 ns)
	'add' operation ('add_ln283_94', sha256_impl.c:283) [1014]  (0 ns)
	'add' operation ('add_ln283_30', sha256_impl.c:283) [1015]  (4.37 ns)

 <State 79>: 8.08ns
The critical path consists of the following:
	'add' operation ('add_ln279_30', sha256_impl.c:279) [1013]  (2.55 ns)
	multiplexor before 'phi' operation ('e_1_30', sha256_impl.c:279) with incoming values : ('add_ln283_26', sha256_impl.c:283) ('add_ln279_30', sha256_impl.c:279) [1019]  (1.77 ns)
	'phi' operation ('e_1_30', sha256_impl.c:279) with incoming values : ('add_ln283_26', sha256_impl.c:283) ('add_ln279_30', sha256_impl.c:279) [1019]  (0 ns)
	'call' operation ('tmp_2_30', sha256_impl.c:273) to 'EP1' [1025]  (3.75 ns)

 <State 80>: 8.74ns
The critical path consists of the following:
	'add' operation ('add_ln273_125', sha256_impl.c:273) [1028]  (0 ns)
	'add' operation ('add_ln273_126', sha256_impl.c:273) [1029]  (4.37 ns)
	'add' operation ('add_ln273_127', sha256_impl.c:273) [1030]  (4.37 ns)

 <State 81>: 7.83ns
The critical path consists of the following:
	'add' operation ('add_ln283_95', sha256_impl.c:283) [1034]  (0 ns)
	'add' operation ('add_ln283_31', sha256_impl.c:283) [1035]  (4.37 ns)
	multiplexor before 'phi' operation ('a_1_31', sha256_impl.c:283) with incoming values : ('add_ln283_31', sha256_impl.c:283) [1042]  (1.77 ns)
	'phi' operation ('a_1_31', sha256_impl.c:283) with incoming values : ('add_ln283_31', sha256_impl.c:283) [1042]  (0 ns)
	'call' operation ('tmp_5_31', sha256_impl.c:275) to 'MAJ' [1052]  (1.69 ns)

 <State 82>: 8.13ns
The critical path consists of the following:
	'phi' operation ('e_1_31', sha256_impl.c:279) with incoming values : ('add_ln283_27', sha256_impl.c:283) ('add_ln279_31', sha256_impl.c:279) [1039]  (0 ns)
	'call' operation ('tmp_2_31', sha256_impl.c:273) to 'EP1' [1045]  (3.75 ns)
	'add' operation ('add_ln273_130', sha256_impl.c:273) [1049]  (4.37 ns)

 <State 83>: 8.74ns
The critical path consists of the following:
	'add' operation ('add_ln273_128', sha256_impl.c:273) [1047]  (0 ns)
	'add' operation ('add_ln273_131', sha256_impl.c:273) [1050]  (4.37 ns)
	'add' operation ('add_ln283_96', sha256_impl.c:283) [1054]  (0 ns)
	'add' operation ('add_ln283_32', sha256_impl.c:283) [1055]  (4.37 ns)

 <State 84>: 8.08ns
The critical path consists of the following:
	'add' operation ('add_ln279_32', sha256_impl.c:279) [1053]  (2.55 ns)
	multiplexor before 'phi' operation ('e_1_32', sha256_impl.c:279) with incoming values : ('add_ln283_28', sha256_impl.c:283) ('add_ln279_32', sha256_impl.c:279) [1059]  (1.77 ns)
	'phi' operation ('e_1_32', sha256_impl.c:279) with incoming values : ('add_ln283_28', sha256_impl.c:283) ('add_ln279_32', sha256_impl.c:279) [1059]  (0 ns)
	'call' operation ('tmp_2_32', sha256_impl.c:273) to 'EP1' [1065]  (3.75 ns)

 <State 85>: 8.74ns
The critical path consists of the following:
	'add' operation ('add_ln273_133', sha256_impl.c:273) [1068]  (0 ns)
	'add' operation ('add_ln273_134', sha256_impl.c:273) [1069]  (4.37 ns)
	'add' operation ('add_ln273_135', sha256_impl.c:273) [1070]  (4.37 ns)

 <State 86>: 7.83ns
The critical path consists of the following:
	'add' operation ('add_ln283_97', sha256_impl.c:283) [1074]  (0 ns)
	'add' operation ('add_ln283_33', sha256_impl.c:283) [1075]  (4.37 ns)
	multiplexor before 'phi' operation ('a_1_33', sha256_impl.c:283) with incoming values : ('add_ln283_33', sha256_impl.c:283) [1082]  (1.77 ns)
	'phi' operation ('a_1_33', sha256_impl.c:283) with incoming values : ('add_ln283_33', sha256_impl.c:283) [1082]  (0 ns)
	'call' operation ('tmp_5_33', sha256_impl.c:275) to 'MAJ' [1092]  (1.69 ns)

 <State 87>: 8.13ns
The critical path consists of the following:
	'phi' operation ('e_1_33', sha256_impl.c:279) with incoming values : ('add_ln283_29', sha256_impl.c:283) ('add_ln279_33', sha256_impl.c:279) [1079]  (0 ns)
	'call' operation ('tmp_2_33', sha256_impl.c:273) to 'EP1' [1085]  (3.75 ns)
	'add' operation ('add_ln273_138', sha256_impl.c:273) [1089]  (4.37 ns)

 <State 88>: 8.74ns
The critical path consists of the following:
	'add' operation ('add_ln273_136', sha256_impl.c:273) [1087]  (0 ns)
	'add' operation ('add_ln273_139', sha256_impl.c:273) [1090]  (4.37 ns)
	'add' operation ('add_ln283_98', sha256_impl.c:283) [1094]  (0 ns)
	'add' operation ('add_ln283_34', sha256_impl.c:283) [1095]  (4.37 ns)

 <State 89>: 8.08ns
The critical path consists of the following:
	'add' operation ('add_ln279_34', sha256_impl.c:279) [1093]  (2.55 ns)
	multiplexor before 'phi' operation ('e_1_34', sha256_impl.c:279) with incoming values : ('add_ln283_30', sha256_impl.c:283) ('add_ln279_34', sha256_impl.c:279) [1099]  (1.77 ns)
	'phi' operation ('e_1_34', sha256_impl.c:279) with incoming values : ('add_ln283_30', sha256_impl.c:283) ('add_ln279_34', sha256_impl.c:279) [1099]  (0 ns)
	'call' operation ('tmp_2_34', sha256_impl.c:273) to 'EP1' [1105]  (3.75 ns)

 <State 90>: 8.74ns
The critical path consists of the following:
	'add' operation ('add_ln273_141', sha256_impl.c:273) [1108]  (0 ns)
	'add' operation ('add_ln273_142', sha256_impl.c:273) [1109]  (4.37 ns)
	'add' operation ('add_ln273_143', sha256_impl.c:273) [1110]  (4.37 ns)

 <State 91>: 7.83ns
The critical path consists of the following:
	'add' operation ('add_ln283_99', sha256_impl.c:283) [1114]  (0 ns)
	'add' operation ('add_ln283_35', sha256_impl.c:283) [1115]  (4.37 ns)
	multiplexor before 'phi' operation ('a_1_35', sha256_impl.c:283) with incoming values : ('add_ln283_35', sha256_impl.c:283) [1122]  (1.77 ns)
	'phi' operation ('a_1_35', sha256_impl.c:283) with incoming values : ('add_ln283_35', sha256_impl.c:283) [1122]  (0 ns)
	'call' operation ('tmp_5_35', sha256_impl.c:275) to 'MAJ' [1132]  (1.69 ns)

 <State 92>: 8.13ns
The critical path consists of the following:
	'phi' operation ('e_1_35', sha256_impl.c:279) with incoming values : ('add_ln283_31', sha256_impl.c:283) ('add_ln279_35', sha256_impl.c:279) [1119]  (0 ns)
	'call' operation ('tmp_2_35', sha256_impl.c:273) to 'EP1' [1125]  (3.75 ns)
	'add' operation ('add_ln273_146', sha256_impl.c:273) [1129]  (4.37 ns)

 <State 93>: 8.74ns
The critical path consists of the following:
	'add' operation ('add_ln273_144', sha256_impl.c:273) [1127]  (0 ns)
	'add' operation ('add_ln273_147', sha256_impl.c:273) [1130]  (4.37 ns)
	'add' operation ('add_ln283_100', sha256_impl.c:283) [1134]  (0 ns)
	'add' operation ('add_ln283_36', sha256_impl.c:283) [1135]  (4.37 ns)

 <State 94>: 8.08ns
The critical path consists of the following:
	'add' operation ('add_ln279_36', sha256_impl.c:279) [1133]  (2.55 ns)
	multiplexor before 'phi' operation ('e_1_36', sha256_impl.c:279) with incoming values : ('add_ln283_32', sha256_impl.c:283) ('add_ln279_36', sha256_impl.c:279) [1139]  (1.77 ns)
	'phi' operation ('e_1_36', sha256_impl.c:279) with incoming values : ('add_ln283_32', sha256_impl.c:283) ('add_ln279_36', sha256_impl.c:279) [1139]  (0 ns)
	'call' operation ('tmp_2_36', sha256_impl.c:273) to 'EP1' [1145]  (3.75 ns)

 <State 95>: 8.74ns
The critical path consists of the following:
	'add' operation ('add_ln273_149', sha256_impl.c:273) [1148]  (0 ns)
	'add' operation ('add_ln273_150', sha256_impl.c:273) [1149]  (4.37 ns)
	'add' operation ('add_ln273_151', sha256_impl.c:273) [1150]  (4.37 ns)

 <State 96>: 7.83ns
The critical path consists of the following:
	'add' operation ('add_ln283_101', sha256_impl.c:283) [1154]  (0 ns)
	'add' operation ('add_ln283_37', sha256_impl.c:283) [1155]  (4.37 ns)
	multiplexor before 'phi' operation ('a_1_37', sha256_impl.c:283) with incoming values : ('add_ln283_37', sha256_impl.c:283) [1162]  (1.77 ns)
	'phi' operation ('a_1_37', sha256_impl.c:283) with incoming values : ('add_ln283_37', sha256_impl.c:283) [1162]  (0 ns)
	'call' operation ('tmp_5_37', sha256_impl.c:275) to 'MAJ' [1172]  (1.69 ns)

 <State 97>: 8.13ns
The critical path consists of the following:
	'phi' operation ('e_1_37', sha256_impl.c:279) with incoming values : ('add_ln283_33', sha256_impl.c:283) ('add_ln279_37', sha256_impl.c:279) [1159]  (0 ns)
	'call' operation ('tmp_2_37', sha256_impl.c:273) to 'EP1' [1165]  (3.75 ns)
	'add' operation ('add_ln273_153', sha256_impl.c:273) [1168]  (0 ns)
	'add' operation ('add_ln273_154', sha256_impl.c:273) [1169]  (4.37 ns)

 <State 98>: 8.74ns
The critical path consists of the following:
	'add' operation ('add_ln273_152', sha256_impl.c:273) [1167]  (0 ns)
	'add' operation ('add_ln273_155', sha256_impl.c:273) [1170]  (4.37 ns)
	'add' operation ('add_ln283_102', sha256_impl.c:283) [1174]  (0 ns)
	'add' operation ('add_ln283_38', sha256_impl.c:283) [1175]  (4.37 ns)

 <State 99>: 8.08ns
The critical path consists of the following:
	'add' operation ('add_ln279_38', sha256_impl.c:279) [1173]  (2.55 ns)
	multiplexor before 'phi' operation ('e_1_38', sha256_impl.c:279) with incoming values : ('add_ln283_34', sha256_impl.c:283) ('add_ln279_38', sha256_impl.c:279) [1179]  (1.77 ns)
	'phi' operation ('e_1_38', sha256_impl.c:279) with incoming values : ('add_ln283_34', sha256_impl.c:283) ('add_ln279_38', sha256_impl.c:279) [1179]  (0 ns)
	'call' operation ('tmp_2_38', sha256_impl.c:273) to 'EP1' [1185]  (3.75 ns)

 <State 100>: 8.74ns
The critical path consists of the following:
	'add' operation ('add_ln273_157', sha256_impl.c:273) [1188]  (0 ns)
	'add' operation ('add_ln273_158', sha256_impl.c:273) [1189]  (4.37 ns)
	'add' operation ('add_ln273_159', sha256_impl.c:273) [1190]  (4.37 ns)

 <State 101>: 7.83ns
The critical path consists of the following:
	'add' operation ('add_ln283_103', sha256_impl.c:283) [1194]  (0 ns)
	'add' operation ('add_ln283_39', sha256_impl.c:283) [1195]  (4.37 ns)
	multiplexor before 'phi' operation ('a_1_39', sha256_impl.c:283) with incoming values : ('add_ln283_39', sha256_impl.c:283) [1202]  (1.77 ns)
	'phi' operation ('a_1_39', sha256_impl.c:283) with incoming values : ('add_ln283_39', sha256_impl.c:283) [1202]  (0 ns)
	'call' operation ('tmp_5_39', sha256_impl.c:275) to 'MAJ' [1212]  (1.69 ns)

 <State 102>: 8.13ns
The critical path consists of the following:
	'phi' operation ('e_1_39', sha256_impl.c:279) with incoming values : ('add_ln283_35', sha256_impl.c:283) ('add_ln279_39', sha256_impl.c:279) [1199]  (0 ns)
	'call' operation ('tmp_2_39', sha256_impl.c:273) to 'EP1' [1205]  (3.75 ns)
	'add' operation ('add_ln273_161', sha256_impl.c:273) [1208]  (0 ns)
	'add' operation ('add_ln273_162', sha256_impl.c:273) [1209]  (4.37 ns)

 <State 103>: 8.74ns
The critical path consists of the following:
	'add' operation ('add_ln273_160', sha256_impl.c:273) [1207]  (0 ns)
	'add' operation ('add_ln273_163', sha256_impl.c:273) [1210]  (4.37 ns)
	'add' operation ('add_ln283_104', sha256_impl.c:283) [1214]  (0 ns)
	'add' operation ('add_ln283_40', sha256_impl.c:283) [1215]  (4.37 ns)

 <State 104>: 8.08ns
The critical path consists of the following:
	'add' operation ('add_ln279_40', sha256_impl.c:279) [1213]  (2.55 ns)
	multiplexor before 'phi' operation ('e_1_40', sha256_impl.c:279) with incoming values : ('add_ln283_36', sha256_impl.c:283) ('add_ln279_40', sha256_impl.c:279) [1219]  (1.77 ns)
	'phi' operation ('e_1_40', sha256_impl.c:279) with incoming values : ('add_ln283_36', sha256_impl.c:283) ('add_ln279_40', sha256_impl.c:279) [1219]  (0 ns)
	'call' operation ('tmp_2_40', sha256_impl.c:273) to 'EP1' [1225]  (3.75 ns)

 <State 105>: 8.74ns
The critical path consists of the following:
	'add' operation ('add_ln273_165', sha256_impl.c:273) [1228]  (0 ns)
	'add' operation ('add_ln273_166', sha256_impl.c:273) [1229]  (4.37 ns)
	'add' operation ('add_ln273_167', sha256_impl.c:273) [1230]  (4.37 ns)

 <State 106>: 7.83ns
The critical path consists of the following:
	'add' operation ('add_ln283_105', sha256_impl.c:283) [1234]  (0 ns)
	'add' operation ('add_ln283_41', sha256_impl.c:283) [1235]  (4.37 ns)
	multiplexor before 'phi' operation ('a_1_41', sha256_impl.c:283) with incoming values : ('add_ln283_41', sha256_impl.c:283) [1242]  (1.77 ns)
	'phi' operation ('a_1_41', sha256_impl.c:283) with incoming values : ('add_ln283_41', sha256_impl.c:283) [1242]  (0 ns)
	'call' operation ('tmp_5_41', sha256_impl.c:275) to 'MAJ' [1252]  (1.69 ns)

 <State 107>: 8.13ns
The critical path consists of the following:
	'phi' operation ('e_1_41', sha256_impl.c:279) with incoming values : ('add_ln283_37', sha256_impl.c:283) ('add_ln279_41', sha256_impl.c:279) [1239]  (0 ns)
	'call' operation ('tmp_2_41', sha256_impl.c:273) to 'EP1' [1245]  (3.75 ns)
	'add' operation ('add_ln273_170', sha256_impl.c:273) [1249]  (4.37 ns)

 <State 108>: 8.74ns
The critical path consists of the following:
	'add' operation ('add_ln273_168', sha256_impl.c:273) [1247]  (0 ns)
	'add' operation ('add_ln273_171', sha256_impl.c:273) [1250]  (4.37 ns)
	'add' operation ('add_ln283_106', sha256_impl.c:283) [1254]  (0 ns)
	'add' operation ('add_ln283_42', sha256_impl.c:283) [1255]  (4.37 ns)

 <State 109>: 8.08ns
The critical path consists of the following:
	'add' operation ('add_ln279_42', sha256_impl.c:279) [1253]  (2.55 ns)
	multiplexor before 'phi' operation ('e_1_42', sha256_impl.c:279) with incoming values : ('add_ln283_38', sha256_impl.c:283) ('add_ln279_42', sha256_impl.c:279) [1259]  (1.77 ns)
	'phi' operation ('e_1_42', sha256_impl.c:279) with incoming values : ('add_ln283_38', sha256_impl.c:283) ('add_ln279_42', sha256_impl.c:279) [1259]  (0 ns)
	'call' operation ('tmp_2_42', sha256_impl.c:273) to 'EP1' [1265]  (3.75 ns)

 <State 110>: 8.74ns
The critical path consists of the following:
	'add' operation ('add_ln273_173', sha256_impl.c:273) [1268]  (0 ns)
	'add' operation ('add_ln273_174', sha256_impl.c:273) [1269]  (4.37 ns)
	'add' operation ('add_ln273_175', sha256_impl.c:273) [1270]  (4.37 ns)

 <State 111>: 7.83ns
The critical path consists of the following:
	'add' operation ('add_ln283_107', sha256_impl.c:283) [1274]  (0 ns)
	'add' operation ('add_ln283_43', sha256_impl.c:283) [1275]  (4.37 ns)
	multiplexor before 'phi' operation ('a_1_43', sha256_impl.c:283) with incoming values : ('add_ln283_43', sha256_impl.c:283) [1282]  (1.77 ns)
	'phi' operation ('a_1_43', sha256_impl.c:283) with incoming values : ('add_ln283_43', sha256_impl.c:283) [1282]  (0 ns)
	'call' operation ('tmp_5_43', sha256_impl.c:275) to 'MAJ' [1292]  (1.69 ns)

 <State 112>: 8.13ns
The critical path consists of the following:
	'phi' operation ('e_1_43', sha256_impl.c:279) with incoming values : ('add_ln283_39', sha256_impl.c:283) ('add_ln279_43', sha256_impl.c:279) [1279]  (0 ns)
	'call' operation ('tmp_2_43', sha256_impl.c:273) to 'EP1' [1285]  (3.75 ns)
	'add' operation ('add_ln273_178', sha256_impl.c:273) [1289]  (4.37 ns)

 <State 113>: 8.74ns
The critical path consists of the following:
	'add' operation ('add_ln273_176', sha256_impl.c:273) [1287]  (0 ns)
	'add' operation ('add_ln273_179', sha256_impl.c:273) [1290]  (4.37 ns)
	'add' operation ('add_ln283_108', sha256_impl.c:283) [1294]  (0 ns)
	'add' operation ('add_ln283_44', sha256_impl.c:283) [1295]  (4.37 ns)

 <State 114>: 8.08ns
The critical path consists of the following:
	'add' operation ('add_ln279_44', sha256_impl.c:279) [1293]  (2.55 ns)
	multiplexor before 'phi' operation ('e_1_44', sha256_impl.c:279) with incoming values : ('add_ln283_40', sha256_impl.c:283) ('add_ln279_44', sha256_impl.c:279) [1299]  (1.77 ns)
	'phi' operation ('e_1_44', sha256_impl.c:279) with incoming values : ('add_ln283_40', sha256_impl.c:283) ('add_ln279_44', sha256_impl.c:279) [1299]  (0 ns)
	'call' operation ('tmp_2_44', sha256_impl.c:273) to 'EP1' [1305]  (3.75 ns)

 <State 115>: 8.74ns
The critical path consists of the following:
	'add' operation ('add_ln273_181', sha256_impl.c:273) [1308]  (0 ns)
	'add' operation ('add_ln273_182', sha256_impl.c:273) [1309]  (4.37 ns)
	'add' operation ('add_ln273_183', sha256_impl.c:273) [1310]  (4.37 ns)

 <State 116>: 7.83ns
The critical path consists of the following:
	'add' operation ('add_ln283_109', sha256_impl.c:283) [1314]  (0 ns)
	'add' operation ('add_ln283_45', sha256_impl.c:283) [1315]  (4.37 ns)
	multiplexor before 'phi' operation ('a_1_45', sha256_impl.c:283) with incoming values : ('add_ln283_45', sha256_impl.c:283) [1322]  (1.77 ns)
	'phi' operation ('a_1_45', sha256_impl.c:283) with incoming values : ('add_ln283_45', sha256_impl.c:283) [1322]  (0 ns)
	'call' operation ('tmp_5_45', sha256_impl.c:275) to 'MAJ' [1332]  (1.69 ns)

 <State 117>: 8.13ns
The critical path consists of the following:
	'phi' operation ('e_1_45', sha256_impl.c:279) with incoming values : ('add_ln283_41', sha256_impl.c:283) ('add_ln279_45', sha256_impl.c:279) [1319]  (0 ns)
	'call' operation ('tmp_2_45', sha256_impl.c:273) to 'EP1' [1325]  (3.75 ns)
	'add' operation ('add_ln273_186', sha256_impl.c:273) [1329]  (4.37 ns)

 <State 118>: 8.74ns
The critical path consists of the following:
	'add' operation ('add_ln273_184', sha256_impl.c:273) [1327]  (0 ns)
	'add' operation ('add_ln273_187', sha256_impl.c:273) [1330]  (4.37 ns)
	'add' operation ('add_ln283_110', sha256_impl.c:283) [1334]  (0 ns)
	'add' operation ('add_ln283_46', sha256_impl.c:283) [1335]  (4.37 ns)

 <State 119>: 8.08ns
The critical path consists of the following:
	'add' operation ('add_ln279_46', sha256_impl.c:279) [1333]  (2.55 ns)
	multiplexor before 'phi' operation ('e_1_46', sha256_impl.c:279) with incoming values : ('add_ln283_42', sha256_impl.c:283) ('add_ln279_46', sha256_impl.c:279) [1339]  (1.77 ns)
	'phi' operation ('e_1_46', sha256_impl.c:279) with incoming values : ('add_ln283_42', sha256_impl.c:283) ('add_ln279_46', sha256_impl.c:279) [1339]  (0 ns)
	'call' operation ('tmp_2_46', sha256_impl.c:273) to 'EP1' [1345]  (3.75 ns)

 <State 120>: 8.74ns
The critical path consists of the following:
	'add' operation ('add_ln273_189', sha256_impl.c:273) [1348]  (0 ns)
	'add' operation ('add_ln273_190', sha256_impl.c:273) [1349]  (4.37 ns)
	'add' operation ('add_ln273_191', sha256_impl.c:273) [1350]  (4.37 ns)

 <State 121>: 7.83ns
The critical path consists of the following:
	'add' operation ('add_ln283_111', sha256_impl.c:283) [1354]  (0 ns)
	'add' operation ('add_ln283_47', sha256_impl.c:283) [1355]  (4.37 ns)
	multiplexor before 'phi' operation ('a_1_47', sha256_impl.c:283) with incoming values : ('add_ln283_47', sha256_impl.c:283) [1362]  (1.77 ns)
	'phi' operation ('a_1_47', sha256_impl.c:283) with incoming values : ('add_ln283_47', sha256_impl.c:283) [1362]  (0 ns)
	'call' operation ('tmp_5_47', sha256_impl.c:275) to 'MAJ' [1372]  (1.69 ns)

 <State 122>: 8.13ns
The critical path consists of the following:
	'phi' operation ('e_1_47', sha256_impl.c:279) with incoming values : ('add_ln283_43', sha256_impl.c:283) ('add_ln279_47', sha256_impl.c:279) [1359]  (0 ns)
	'call' operation ('tmp_2_47', sha256_impl.c:273) to 'EP1' [1365]  (3.75 ns)
	'add' operation ('add_ln273_194', sha256_impl.c:273) [1369]  (4.37 ns)

 <State 123>: 8.74ns
The critical path consists of the following:
	'add' operation ('add_ln273_192', sha256_impl.c:273) [1367]  (0 ns)
	'add' operation ('add_ln273_195', sha256_impl.c:273) [1370]  (4.37 ns)
	'add' operation ('add_ln283_112', sha256_impl.c:283) [1374]  (0 ns)
	'add' operation ('add_ln283_48', sha256_impl.c:283) [1375]  (4.37 ns)

 <State 124>: 8.08ns
The critical path consists of the following:
	'add' operation ('add_ln279_48', sha256_impl.c:279) [1373]  (2.55 ns)
	multiplexor before 'phi' operation ('e_1_48', sha256_impl.c:279) with incoming values : ('add_ln283_44', sha256_impl.c:283) ('add_ln279_48', sha256_impl.c:279) [1379]  (1.77 ns)
	'phi' operation ('e_1_48', sha256_impl.c:279) with incoming values : ('add_ln283_44', sha256_impl.c:283) ('add_ln279_48', sha256_impl.c:279) [1379]  (0 ns)
	'call' operation ('tmp_2_48', sha256_impl.c:273) to 'EP1' [1385]  (3.75 ns)

 <State 125>: 8.74ns
The critical path consists of the following:
	'add' operation ('add_ln273_197', sha256_impl.c:273) [1388]  (0 ns)
	'add' operation ('add_ln273_198', sha256_impl.c:273) [1389]  (4.37 ns)
	'add' operation ('add_ln273_199', sha256_impl.c:273) [1390]  (4.37 ns)

 <State 126>: 7.83ns
The critical path consists of the following:
	'add' operation ('add_ln283_113', sha256_impl.c:283) [1394]  (0 ns)
	'add' operation ('add_ln283_49', sha256_impl.c:283) [1395]  (4.37 ns)
	multiplexor before 'phi' operation ('a_1_49', sha256_impl.c:283) with incoming values : ('add_ln283_49', sha256_impl.c:283) [1402]  (1.77 ns)
	'phi' operation ('a_1_49', sha256_impl.c:283) with incoming values : ('add_ln283_49', sha256_impl.c:283) [1402]  (0 ns)
	'call' operation ('tmp_5_49', sha256_impl.c:275) to 'MAJ' [1412]  (1.69 ns)

 <State 127>: 8.13ns
The critical path consists of the following:
	'phi' operation ('e_1_49', sha256_impl.c:279) with incoming values : ('add_ln283_45', sha256_impl.c:283) ('add_ln279_49', sha256_impl.c:279) [1399]  (0 ns)
	'call' operation ('tmp_2_49', sha256_impl.c:273) to 'EP1' [1405]  (3.75 ns)
	'add' operation ('add_ln273_202', sha256_impl.c:273) [1409]  (4.37 ns)

 <State 128>: 8.74ns
The critical path consists of the following:
	'add' operation ('add_ln273_200', sha256_impl.c:273) [1407]  (0 ns)
	'add' operation ('add_ln273_203', sha256_impl.c:273) [1410]  (4.37 ns)
	'add' operation ('add_ln283_114', sha256_impl.c:283) [1414]  (0 ns)
	'add' operation ('add_ln283_50', sha256_impl.c:283) [1415]  (4.37 ns)

 <State 129>: 8.08ns
The critical path consists of the following:
	'add' operation ('add_ln279_50', sha256_impl.c:279) [1413]  (2.55 ns)
	multiplexor before 'phi' operation ('e_1_50', sha256_impl.c:279) with incoming values : ('add_ln283_46', sha256_impl.c:283) ('add_ln279_50', sha256_impl.c:279) [1419]  (1.77 ns)
	'phi' operation ('e_1_50', sha256_impl.c:279) with incoming values : ('add_ln283_46', sha256_impl.c:283) ('add_ln279_50', sha256_impl.c:279) [1419]  (0 ns)
	'call' operation ('tmp_2_50', sha256_impl.c:273) to 'EP1' [1425]  (3.75 ns)

 <State 130>: 8.74ns
The critical path consists of the following:
	'add' operation ('add_ln273_205', sha256_impl.c:273) [1428]  (0 ns)
	'add' operation ('add_ln273_206', sha256_impl.c:273) [1429]  (4.37 ns)
	'add' operation ('add_ln273_207', sha256_impl.c:273) [1430]  (4.37 ns)

 <State 131>: 7.83ns
The critical path consists of the following:
	'add' operation ('add_ln283_115', sha256_impl.c:283) [1434]  (0 ns)
	'add' operation ('add_ln283_51', sha256_impl.c:283) [1435]  (4.37 ns)
	multiplexor before 'phi' operation ('a_1_51', sha256_impl.c:283) with incoming values : ('add_ln283_51', sha256_impl.c:283) [1442]  (1.77 ns)
	'phi' operation ('a_1_51', sha256_impl.c:283) with incoming values : ('add_ln283_51', sha256_impl.c:283) [1442]  (0 ns)
	'call' operation ('tmp_5_51', sha256_impl.c:275) to 'MAJ' [1452]  (1.69 ns)

 <State 132>: 8.13ns
The critical path consists of the following:
	'phi' operation ('e_1_51', sha256_impl.c:279) with incoming values : ('add_ln283_47', sha256_impl.c:283) ('add_ln279_51', sha256_impl.c:279) [1439]  (0 ns)
	'call' operation ('tmp_2_51', sha256_impl.c:273) to 'EP1' [1445]  (3.75 ns)
	'add' operation ('add_ln273_210', sha256_impl.c:273) [1449]  (4.37 ns)

 <State 133>: 8.74ns
The critical path consists of the following:
	'add' operation ('add_ln273_208', sha256_impl.c:273) [1447]  (0 ns)
	'add' operation ('add_ln273_211', sha256_impl.c:273) [1450]  (4.37 ns)
	'add' operation ('add_ln283_116', sha256_impl.c:283) [1454]  (0 ns)
	'add' operation ('add_ln283_52', sha256_impl.c:283) [1455]  (4.37 ns)

 <State 134>: 8.08ns
The critical path consists of the following:
	'add' operation ('add_ln279_52', sha256_impl.c:279) [1453]  (2.55 ns)
	multiplexor before 'phi' operation ('e_1_52', sha256_impl.c:279) with incoming values : ('add_ln283_48', sha256_impl.c:283) ('add_ln279_52', sha256_impl.c:279) [1459]  (1.77 ns)
	'phi' operation ('e_1_52', sha256_impl.c:279) with incoming values : ('add_ln283_48', sha256_impl.c:283) ('add_ln279_52', sha256_impl.c:279) [1459]  (0 ns)
	'call' operation ('tmp_2_52', sha256_impl.c:273) to 'EP1' [1465]  (3.75 ns)

 <State 135>: 8.74ns
The critical path consists of the following:
	'add' operation ('add_ln273_213', sha256_impl.c:273) [1468]  (0 ns)
	'add' operation ('add_ln273_214', sha256_impl.c:273) [1469]  (4.37 ns)
	'add' operation ('add_ln273_215', sha256_impl.c:273) [1470]  (4.37 ns)

 <State 136>: 7.83ns
The critical path consists of the following:
	'add' operation ('add_ln283_117', sha256_impl.c:283) [1474]  (0 ns)
	'add' operation ('add_ln283_53', sha256_impl.c:283) [1475]  (4.37 ns)
	multiplexor before 'phi' operation ('a_1_53', sha256_impl.c:283) with incoming values : ('add_ln283_53', sha256_impl.c:283) [1482]  (1.77 ns)
	'phi' operation ('a_1_53', sha256_impl.c:283) with incoming values : ('add_ln283_53', sha256_impl.c:283) [1482]  (0 ns)
	'call' operation ('tmp_5_53', sha256_impl.c:275) to 'MAJ' [1492]  (1.69 ns)

 <State 137>: 0ns
The critical path consists of the following:

 <State 138>: 8.13ns
The critical path consists of the following:
	'call' operation ('tmp_2_53', sha256_impl.c:273) to 'EP1' [1485]  (3.75 ns)
	'add' operation ('add_ln273_218', sha256_impl.c:273) [1489]  (4.37 ns)

 <State 139>: 8.74ns
The critical path consists of the following:
	'add' operation ('add_ln273_216', sha256_impl.c:273) [1487]  (0 ns)
	'add' operation ('add_ln273_219', sha256_impl.c:273) [1490]  (4.37 ns)
	'add' operation ('add_ln283_118', sha256_impl.c:283) [1494]  (0 ns)
	'add' operation ('add_ln283_54', sha256_impl.c:283) [1495]  (4.37 ns)

 <State 140>: 3.46ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('c_1_54', sha256_impl.c:283) with incoming values : ('add_ln283_52', sha256_impl.c:283) [1500]  (1.77 ns)
	'phi' operation ('c_1_54', sha256_impl.c:283) with incoming values : ('add_ln283_52', sha256_impl.c:283) [1500]  (0 ns)
	'call' operation ('tmp_5_54', sha256_impl.c:275) to 'MAJ' [1512]  (1.69 ns)

 <State 141>: 8.13ns
The critical path consists of the following:
	'phi' operation ('e_1_54', sha256_impl.c:279) with incoming values : ('add_ln283_50', sha256_impl.c:283) ('add_ln279_54', sha256_impl.c:279) [1499]  (0 ns)
	'call' operation ('tmp_2_54', sha256_impl.c:273) to 'EP1' [1505]  (3.75 ns)
	'add' operation ('add_ln273_222', sha256_impl.c:273) [1509]  (4.37 ns)

 <State 142>: 8.74ns
The critical path consists of the following:
	'add' operation ('add_ln273_220', sha256_impl.c:273) [1507]  (0 ns)
	'add' operation ('add_ln273_223', sha256_impl.c:273) [1510]  (4.37 ns)
	'add' operation ('add_ln283_119', sha256_impl.c:283) [1514]  (0 ns)
	'add' operation ('add_ln283_55', sha256_impl.c:283) [1515]  (4.37 ns)

 <State 143>: 8.08ns
The critical path consists of the following:
	'add' operation ('add_ln279_55', sha256_impl.c:279) [1513]  (2.55 ns)
	multiplexor before 'phi' operation ('e_1_55', sha256_impl.c:279) with incoming values : ('add_ln283_51', sha256_impl.c:283) ('add_ln279_55', sha256_impl.c:279) [1519]  (1.77 ns)
	'phi' operation ('e_1_55', sha256_impl.c:279) with incoming values : ('add_ln283_51', sha256_impl.c:283) ('add_ln279_55', sha256_impl.c:279) [1519]  (0 ns)
	'call' operation ('tmp_2_55', sha256_impl.c:273) to 'EP1' [1525]  (3.75 ns)

 <State 144>: 8.74ns
The critical path consists of the following:
	'add' operation ('add_ln273_225', sha256_impl.c:273) [1528]  (0 ns)
	'add' operation ('add_ln273_226', sha256_impl.c:273) [1529]  (4.37 ns)
	'add' operation ('add_ln273_227', sha256_impl.c:273) [1530]  (4.37 ns)

 <State 145>: 4.37ns
The critical path consists of the following:
	'add' operation ('add_ln283_120', sha256_impl.c:283) [1534]  (0 ns)
	'add' operation ('add_ln283_56', sha256_impl.c:283) [1535]  (4.37 ns)

 <State 146>: 8.13ns
The critical path consists of the following:
	'phi' operation ('e_1_56', sha256_impl.c:279) with incoming values : ('add_ln283_52', sha256_impl.c:283) ('add_ln279_56', sha256_impl.c:279) [1539]  (0 ns)
	'call' operation ('tmp_2_56', sha256_impl.c:273) to 'EP1' [1545]  (3.75 ns)
	'add' operation ('add_ln273_230', sha256_impl.c:273) [1549]  (4.37 ns)

 <State 147>: 8.74ns
The critical path consists of the following:
	'add' operation ('add_ln273_228', sha256_impl.c:273) [1547]  (0 ns)
	'add' operation ('add_ln273_231', sha256_impl.c:273) [1550]  (4.37 ns)
	'add' operation ('add_ln283_121', sha256_impl.c:283) [1554]  (0 ns)
	'add' operation ('add_ln283_57', sha256_impl.c:283) [1555]  (4.37 ns)

 <State 148>: 2.55ns
The critical path consists of the following:
	'add' operation ('add_ln279_57', sha256_impl.c:279) [1553]  (2.55 ns)

 <State 149>: 8.13ns
The critical path consists of the following:
	'phi' operation ('e_1_57', sha256_impl.c:279) with incoming values : ('add_ln283_53', sha256_impl.c:283) ('add_ln279_57', sha256_impl.c:279) [1559]  (0 ns)
	'call' operation ('tmp_2_57', sha256_impl.c:273) to 'EP1' [1565]  (3.75 ns)
	'add' operation ('add_ln273_233', sha256_impl.c:273) [1568]  (0 ns)
	'add' operation ('add_ln273_234', sha256_impl.c:273) [1569]  (4.37 ns)

 <State 150>: 8.74ns
The critical path consists of the following:
	'add' operation ('add_ln273_232', sha256_impl.c:273) [1567]  (0 ns)
	'add' operation ('add_ln273_235', sha256_impl.c:273) [1570]  (4.37 ns)
	'add' operation ('add_ln283_122', sha256_impl.c:283) [1574]  (0 ns)
	'add' operation ('add_ln283_58', sha256_impl.c:283) [1575]  (4.37 ns)

 <State 151>: 3.46ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('c_1_58', sha256_impl.c:283) with incoming values : ('add_ln283_56', sha256_impl.c:283) [1580]  (1.77 ns)
	'phi' operation ('c_1_58', sha256_impl.c:283) with incoming values : ('add_ln283_56', sha256_impl.c:283) [1580]  (0 ns)
	'call' operation ('tmp_5_58', sha256_impl.c:275) to 'MAJ' [1592]  (1.69 ns)

 <State 152>: 8.13ns
The critical path consists of the following:
	'phi' operation ('e_1_58', sha256_impl.c:279) with incoming values : ('add_ln283_54', sha256_impl.c:283) ('add_ln279_58', sha256_impl.c:279) [1579]  (0 ns)
	'call' operation ('tmp_2_58', sha256_impl.c:273) to 'EP1' [1585]  (3.75 ns)
	'add' operation ('add_ln273_237', sha256_impl.c:273) [1588]  (0 ns)
	'add' operation ('add_ln273_238', sha256_impl.c:273) [1589]  (4.37 ns)

 <State 153>: 8.74ns
The critical path consists of the following:
	'add' operation ('add_ln273_236', sha256_impl.c:273) [1587]  (0 ns)
	'add' operation ('add_ln273_239', sha256_impl.c:273) [1590]  (4.37 ns)
	'add' operation ('add_ln283_123', sha256_impl.c:283) [1594]  (0 ns)
	'add' operation ('add_ln283_59', sha256_impl.c:283) [1595]  (4.37 ns)

 <State 154>: 3.46ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('a_1_59', sha256_impl.c:283) with incoming values : ('add_ln283_59', sha256_impl.c:283) [1602]  (1.77 ns)
	'phi' operation ('a_1_59', sha256_impl.c:283) with incoming values : ('add_ln283_59', sha256_impl.c:283) [1602]  (0 ns)
	'call' operation ('tmp_5_59', sha256_impl.c:275) to 'MAJ' [1612]  (1.69 ns)

 <State 155>: 8.13ns
The critical path consists of the following:
	'phi' operation ('e_1_59', sha256_impl.c:279) with incoming values : ('add_ln283_55', sha256_impl.c:283) ('add_ln279_59', sha256_impl.c:279) [1599]  (0 ns)
	'call' operation ('tmp_2_59', sha256_impl.c:273) to 'EP1' [1605]  (3.75 ns)
	'add' operation ('add_ln273_241', sha256_impl.c:273) [1608]  (0 ns)
	'add' operation ('add_ln273_242', sha256_impl.c:273) [1609]  (4.37 ns)

 <State 156>: 8.74ns
The critical path consists of the following:
	'add' operation ('add_ln273_240', sha256_impl.c:273) [1607]  (0 ns)
	'add' operation ('add_ln273_243', sha256_impl.c:273) [1610]  (4.37 ns)
	'add' operation ('add_ln283_124', sha256_impl.c:283) [1614]  (0 ns)
	'add' operation ('add_ln283_60', sha256_impl.c:283) [1615]  (4.37 ns)

 <State 157>: 3.46ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('a_1_60', sha256_impl.c:283) with incoming values : ('add_ln283_60', sha256_impl.c:283) [1622]  (1.77 ns)
	'phi' operation ('a_1_60', sha256_impl.c:283) with incoming values : ('add_ln283_60', sha256_impl.c:283) [1622]  (0 ns)
	'call' operation ('tmp_5_60', sha256_impl.c:275) to 'MAJ' [1632]  (1.69 ns)

 <State 158>: 8.13ns
The critical path consists of the following:
	'phi' operation ('e_1_60', sha256_impl.c:279) with incoming values : ('add_ln283_56', sha256_impl.c:283) ('add_ln279_60', sha256_impl.c:279) [1619]  (0 ns)
	'call' operation ('tmp_2_60', sha256_impl.c:273) to 'EP1' [1625]  (3.75 ns)
	'add' operation ('add_ln273_245', sha256_impl.c:273) [1628]  (0 ns)
	'add' operation ('add_ln273_246', sha256_impl.c:273) [1629]  (4.37 ns)

 <State 159>: 8.74ns
The critical path consists of the following:
	'add' operation ('add_ln273_244', sha256_impl.c:273) [1627]  (0 ns)
	'add' operation ('add_ln273_247', sha256_impl.c:273) [1630]  (4.37 ns)
	'add' operation ('add_ln283_125', sha256_impl.c:283) [1634]  (0 ns)
	'add' operation ('add_ln283_61', sha256_impl.c:283) [1635]  (4.37 ns)

 <State 160>: 8.08ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('e_1_61', sha256_impl.c:279) with incoming values : ('add_ln283_57', sha256_impl.c:283) ('add_ln279_61', sha256_impl.c:279) [1639]  (1.77 ns)
	'phi' operation ('e_1_61', sha256_impl.c:279) with incoming values : ('add_ln283_57', sha256_impl.c:283) ('add_ln279_61', sha256_impl.c:279) [1639]  (0 ns)
	'call' operation ('tmp_2_61', sha256_impl.c:273) to 'EP1' [1645]  (3.75 ns)
	'add' operation ('add_ln273_249', sha256_impl.c:273) [1648]  (2.55 ns)

 <State 161>: 8.74ns
The critical path consists of the following:
	'add' operation ('add_ln273_250', sha256_impl.c:273) [1649]  (0 ns)
	'add' operation ('add_ln273_252', sha256_impl.c:273) [1653]  (4.37 ns)
	'add' operation ('add_ln283_126', sha256_impl.c:283) [1657]  (0 ns)
	'add' operation ('add_ln283_62', sha256_impl.c:283) [1658]  (4.37 ns)

 <State 162>: 2.55ns
The critical path consists of the following:
	'add' operation ('add_ln279_62', sha256_impl.c:279) [1656]  (2.55 ns)

 <State 163>: 6.31ns
The critical path consists of the following:
	'phi' operation ('e_1_62', sha256_impl.c:279) with incoming values : ('add_ln283_58', sha256_impl.c:283) ('add_ln279_62', sha256_impl.c:279) [1662]  (0 ns)
	'call' operation ('tmp_2_62', sha256_impl.c:273) to 'EP1' [1668]  (3.75 ns)
	'add' operation ('add_ln273_257', sha256_impl.c:273) [1671]  (2.55 ns)

 <State 164>: 8.74ns
The critical path consists of the following:
	'add' operation ('add_ln273_258', sha256_impl.c:273) [1672]  (0 ns)
	'add' operation ('add_ln273_255', sha256_impl.c:273) [1676]  (4.37 ns)
	'add' operation ('add_ln283_127', sha256_impl.c:283) [1680]  (0 ns)
	'add' operation ('add_ln283_63', sha256_impl.c:283) [1681]  (4.37 ns)

 <State 165>: 6.87ns
The critical path consists of the following:
	'add' operation ('add_ln279_63', sha256_impl.c:279) [1679]  (2.55 ns)
	multiplexor before 'phi' operation ('e_1_63', sha256_impl.c:279) with incoming values : ('add_ln283_59', sha256_impl.c:283) ('add_ln279_63', sha256_impl.c:279) [1685]  (1.77 ns)
	'phi' operation ('e_1_63', sha256_impl.c:279) with incoming values : ('add_ln283_59', sha256_impl.c:283) ('add_ln279_63', sha256_impl.c:279) [1685]  (0 ns)
	'add' operation ('add_ln312', sha256_impl.c:312) [1693]  (2.55 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22
	State 23
	State 24
	State 25
	State 26
	State 27
	State 28
	State 29
	State 30
	State 31
	State 32
	State 33
	State 34
	State 35
	State 36
	State 37
	State 38
	State 39
	State 40
	State 41
	State 42
	State 43
	State 44
	State 45
	State 46
	State 47
	State 48
	State 49
	State 50
	State 51
	State 52
	State 53
	State 54
	State 55
	State 56
	State 57
	State 58
	State 59
	State 60
	State 61
	State 62
	State 63
	State 64
	State 65
	State 66
	State 67
	State 68
	State 69
	State 70
	State 71
	State 72
	State 73
	State 74
	State 75
	State 76
	State 77
	State 78
	State 79
	State 80
	State 81
	State 82
	State 83
	State 84
	State 85
	State 86
	State 87
	State 88
	State 89
	State 90
	State 91
	State 92
	State 93
	State 94
	State 95
	State 96
	State 97
	State 98
	State 99
	State 100
	State 101
	State 102
	State 103
	State 104
	State 105
	State 106
	State 107
	State 108
	State 109
	State 110
	State 111
	State 112
	State 113
	State 114
	State 115
	State 116
	State 117
	State 118
	State 119
	State 120
	State 121
	State 122
	State 123
	State 124
	State 125
	State 126
	State 127
	State 128
	State 129
	State 130
	State 131
	State 132
	State 133
	State 134
	State 135
	State 136
	State 137
	State 138
	State 139
	State 140
	State 141
	State 142
	State 143
	State 144
	State 145
	State 146
	State 147
	State 148
	State 149
	State 150
	State 151
	State 152
	State 153
	State 154
	State 155
	State 156
	State 157
	State 158
	State 159
	State 160
	State 161
	State 162
	State 163
	State 164
	State 165


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
