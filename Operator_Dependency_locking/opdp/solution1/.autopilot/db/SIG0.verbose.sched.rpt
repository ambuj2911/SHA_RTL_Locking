

================================================================
== Vivado HLS Report for 'SIG0'
================================================================
* Date:           Sat Apr 10 18:02:12 2021

* Version:        2019.1 (Build 2552052 on Fri May 24 15:28:33 MDT 2019)
* Project:        opdp
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z020-clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|     3.755|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+----------+
    |  Latency  |  Interval | Pipeline |
    | min | max | min | max |   Type   |
    +-----+-----+-----+-----+----------+
    |    0|    0|    1|    1| function |
    +-----+-----+-----+-----+----------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 0
IsPipeline: 1
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 1


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 1
* Pipeline : 1
  Pipeline-0 : II = 1, D = 1, States = { 1 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 3.75>
ST_1 : Operation 2 [1/1] (0.00ns)   --->   "%x_read = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %x) nounwind" [sha256_impl.c:196]   --->   Operation 2 'read' 'x_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 3 [1/1] (0.00ns)   --->   "%rtl_key_load = load i32* @rtl_key_r, align 4" [sha256_impl.c:198]   --->   Operation 3 'load' 'rtl_key_load' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 4 [1/1] (0.00ns)   --->   "%tmp = call i1 @_ssdm_op_BitSelect.i1.i32.i32(i32 %rtl_key_load, i32 1)" [sha256_impl.c:200]   --->   Operation 4 'bitselect' 'tmp' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 5 [1/1] (0.00ns)   --->   "%tmp_3 = call i1 @_ssdm_op_BitSelect.i1.i32.i32(i32 %rtl_key_load, i32 6)" [sha256_impl.c:51->sha256_impl.c:202]   --->   Operation 5 'bitselect' 'tmp_3' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "br i1 %tmp, label %2, label %1" [sha256_impl.c:200]   --->   Operation 6 'br' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns) (grouped into LUT with out node xor_ln202_1)   --->   "%trunc_ln53_5 = trunc i32 %x_read to i25" [sha256_impl.c:53->sha256_impl.c:202]   --->   Operation 7 'trunc' 'trunc_ln53_5' <Predicate = (!tmp & !tmp_3)> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns) (grouped into LUT with out node xor_ln202_1)   --->   "%lshr_ln = call i7 @_ssdm_op_PartSelect.i7.i32.i32.i32(i32 %x_read, i32 25, i32 31)" [sha256_impl.c:53->sha256_impl.c:202]   --->   Operation 8 'partselect' 'lshr_ln' <Predicate = (!tmp & !tmp_3)> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns) (grouped into LUT with out node xor_ln202_1)   --->   "%or_ln = call i32 @_ssdm_op_BitConcatenate.i32.i25.i7(i25 %trunc_ln53_5, i7 %lshr_ln)" [sha256_impl.c:53->sha256_impl.c:202]   --->   Operation 9 'bitconcatenate' 'or_ln' <Predicate = (!tmp & !tmp_3)> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns) (grouped into LUT with out node xor_ln202_1)   --->   "%lshr_ln7 = call i25 @_ssdm_op_PartSelect.i25.i32.i32.i32(i32 %x_read, i32 7, i32 31)" [sha256_impl.c:57->sha256_impl.c:202]   --->   Operation 10 'partselect' 'lshr_ln7' <Predicate = (!tmp & tmp_3)> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns) (grouped into LUT with out node xor_ln202_1)   --->   "%trunc_ln57_5 = trunc i32 %x_read to i7" [sha256_impl.c:57->sha256_impl.c:202]   --->   Operation 11 'trunc' 'trunc_ln57_5' <Predicate = (!tmp & tmp_3)> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns) (grouped into LUT with out node xor_ln202_1)   --->   "%or_ln2 = call i32 @_ssdm_op_BitConcatenate.i32.i7.i25(i7 %trunc_ln57_5, i25 %lshr_ln7)" [sha256_impl.c:57->sha256_impl.c:202]   --->   Operation 12 'bitconcatenate' 'or_ln2' <Predicate = (!tmp & tmp_3)> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns) (grouped into LUT with out node xor_ln202_1)   --->   "%select_ln51 = select i1 %tmp_3, i32 %or_ln2, i32 %or_ln" [sha256_impl.c:51->sha256_impl.c:202]   --->   Operation 13 'select' 'select_ln51' <Predicate = (!tmp)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 14 [1/1] (0.00ns) (grouped into LUT with out node xor_ln202)   --->   "%trunc_ln53_6 = trunc i32 %x_read to i14" [sha256_impl.c:53->sha256_impl.c:202]   --->   Operation 14 'trunc' 'trunc_ln53_6' <Predicate = (!tmp & !tmp_3)> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns) (grouped into LUT with out node xor_ln202)   --->   "%lshr_ln53_4 = call i18 @_ssdm_op_PartSelect.i18.i32.i32.i32(i32 %x_read, i32 14, i32 31)" [sha256_impl.c:53->sha256_impl.c:202]   --->   Operation 15 'partselect' 'lshr_ln53_4' <Predicate = (!tmp & !tmp_3)> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns) (grouped into LUT with out node xor_ln202)   --->   "%or_ln53_4 = call i32 @_ssdm_op_BitConcatenate.i32.i14.i18(i14 %trunc_ln53_6, i18 %lshr_ln53_4)" [sha256_impl.c:53->sha256_impl.c:202]   --->   Operation 16 'bitconcatenate' 'or_ln53_4' <Predicate = (!tmp & !tmp_3)> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns) (grouped into LUT with out node xor_ln202)   --->   "%lshr_ln57_4 = call i14 @_ssdm_op_PartSelect.i14.i32.i32.i32(i32 %x_read, i32 18, i32 31)" [sha256_impl.c:57->sha256_impl.c:202]   --->   Operation 17 'partselect' 'lshr_ln57_4' <Predicate = (!tmp & tmp_3)> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns) (grouped into LUT with out node xor_ln202)   --->   "%trunc_ln57_6 = trunc i32 %x_read to i18" [sha256_impl.c:57->sha256_impl.c:202]   --->   Operation 18 'trunc' 'trunc_ln57_6' <Predicate = (!tmp & tmp_3)> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns) (grouped into LUT with out node xor_ln202)   --->   "%or_ln57_4 = call i32 @_ssdm_op_BitConcatenate.i32.i18.i14(i18 %trunc_ln57_6, i14 %lshr_ln57_4)" [sha256_impl.c:57->sha256_impl.c:202]   --->   Operation 19 'bitconcatenate' 'or_ln57_4' <Predicate = (!tmp & tmp_3)> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns) (grouped into LUT with out node xor_ln202)   --->   "%select_ln51_4 = select i1 %tmp_3, i32 %or_ln57_4, i32 %or_ln53_4" [sha256_impl.c:51->sha256_impl.c:202]   --->   Operation 20 'select' 'select_ln51_4' <Predicate = (!tmp)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 21 [1/1] (0.00ns) (grouped into LUT with out node xor_ln202)   --->   "%lshr_ln8 = call i29 @_ssdm_op_PartSelect.i29.i32.i32.i32(i32 %x_read, i32 3, i32 31)" [sha256_impl.c:202]   --->   Operation 21 'partselect' 'lshr_ln8' <Predicate = (!tmp)> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (0.00ns) (grouped into LUT with out node xor_ln202)   --->   "%zext_ln202 = zext i29 %lshr_ln8 to i32" [sha256_impl.c:202]   --->   Operation 22 'zext' 'zext_ln202' <Predicate = (!tmp)> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (0.99ns) (out node of the LUT)   --->   "%xor_ln202 = xor i32 %zext_ln202, %select_ln51_4" [sha256_impl.c:202]   --->   Operation 23 'xor' 'xor_ln202' <Predicate = (!tmp)> <Delay = 0.99> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 24 [1/1] (0.99ns) (out node of the LUT)   --->   "%xor_ln202_1 = xor i32 %xor_ln202, %select_ln51" [sha256_impl.c:202]   --->   Operation 24 'xor' 'xor_ln202_1' <Predicate = (!tmp)> <Delay = 0.99> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 25 [1/1] (1.76ns)   --->   "br label %3" [sha256_impl.c:202]   --->   Operation 25 'br' <Predicate = (!tmp)> <Delay = 1.76>
ST_1 : Operation 26 [1/1] (0.00ns) (grouped into LUT with out node xor_ln207)   --->   "%trunc_ln53 = trunc i32 %x_read to i26" [sha256_impl.c:53->sha256_impl.c:207]   --->   Operation 26 'trunc' 'trunc_ln53' <Predicate = (tmp & !tmp_3)> <Delay = 0.00>
ST_1 : Operation 27 [1/1] (0.00ns) (grouped into LUT with out node xor_ln207)   --->   "%lshr_ln53_5 = call i6 @_ssdm_op_PartSelect.i6.i32.i32.i32(i32 %x_read, i32 26, i32 31)" [sha256_impl.c:53->sha256_impl.c:207]   --->   Operation 27 'partselect' 'lshr_ln53_5' <Predicate = (tmp & !tmp_3)> <Delay = 0.00>
ST_1 : Operation 28 [1/1] (0.00ns) (grouped into LUT with out node xor_ln207)   --->   "%or_ln53_5 = call i32 @_ssdm_op_BitConcatenate.i32.i26.i6(i26 %trunc_ln53, i6 %lshr_ln53_5)" [sha256_impl.c:53->sha256_impl.c:207]   --->   Operation 28 'bitconcatenate' 'or_ln53_5' <Predicate = (tmp & !tmp_3)> <Delay = 0.00>
ST_1 : Operation 29 [1/1] (0.00ns) (grouped into LUT with out node xor_ln207)   --->   "%lshr_ln57_5 = call i26 @_ssdm_op_PartSelect.i26.i32.i32.i32(i32 %x_read, i32 6, i32 31)" [sha256_impl.c:57->sha256_impl.c:207]   --->   Operation 29 'partselect' 'lshr_ln57_5' <Predicate = (tmp & tmp_3)> <Delay = 0.00>
ST_1 : Operation 30 [1/1] (0.00ns) (grouped into LUT with out node xor_ln207)   --->   "%trunc_ln57 = trunc i32 %x_read to i6" [sha256_impl.c:57->sha256_impl.c:207]   --->   Operation 30 'trunc' 'trunc_ln57' <Predicate = (tmp & tmp_3)> <Delay = 0.00>
ST_1 : Operation 31 [1/1] (0.00ns) (grouped into LUT with out node xor_ln207)   --->   "%or_ln57_5 = call i32 @_ssdm_op_BitConcatenate.i32.i6.i26(i6 %trunc_ln57, i26 %lshr_ln57_5)" [sha256_impl.c:57->sha256_impl.c:207]   --->   Operation 31 'bitconcatenate' 'or_ln57_5' <Predicate = (tmp & tmp_3)> <Delay = 0.00>
ST_1 : Operation 32 [1/1] (0.00ns) (grouped into LUT with out node xor_ln207)   --->   "%select_ln51_5 = select i1 %tmp_3, i32 %or_ln57_5, i32 %or_ln53_5" [sha256_impl.c:51->sha256_impl.c:207]   --->   Operation 32 'select' 'select_ln51_5' <Predicate = (tmp)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 33 [1/1] (0.00ns) (grouped into LUT with out node xor_ln207)   --->   "%trunc_ln53_4 = trunc i32 %x_read to i24" [sha256_impl.c:53->sha256_impl.c:207]   --->   Operation 33 'trunc' 'trunc_ln53_4' <Predicate = (tmp & !tmp_3)> <Delay = 0.00>
ST_1 : Operation 34 [1/1] (0.00ns) (grouped into LUT with out node xor_ln207)   --->   "%lshr_ln53_6 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %x_read, i32 24, i32 31)" [sha256_impl.c:53->sha256_impl.c:207]   --->   Operation 34 'partselect' 'lshr_ln53_6' <Predicate = (tmp & !tmp_3)> <Delay = 0.00>
ST_1 : Operation 35 [1/1] (0.00ns) (grouped into LUT with out node xor_ln207)   --->   "%or_ln53_6 = call i32 @_ssdm_op_BitConcatenate.i32.i24.i8(i24 %trunc_ln53_4, i8 %lshr_ln53_6)" [sha256_impl.c:53->sha256_impl.c:207]   --->   Operation 35 'bitconcatenate' 'or_ln53_6' <Predicate = (tmp & !tmp_3)> <Delay = 0.00>
ST_1 : Operation 36 [1/1] (0.00ns) (grouped into LUT with out node xor_ln207)   --->   "%lshr_ln57_6 = call i24 @_ssdm_op_PartSelect.i24.i32.i32.i32(i32 %x_read, i32 8, i32 31)" [sha256_impl.c:57->sha256_impl.c:207]   --->   Operation 36 'partselect' 'lshr_ln57_6' <Predicate = (tmp & tmp_3)> <Delay = 0.00>
ST_1 : Operation 37 [1/1] (0.00ns) (grouped into LUT with out node xor_ln207)   --->   "%trunc_ln57_4 = trunc i32 %x_read to i8" [sha256_impl.c:57->sha256_impl.c:207]   --->   Operation 37 'trunc' 'trunc_ln57_4' <Predicate = (tmp & tmp_3)> <Delay = 0.00>
ST_1 : Operation 38 [1/1] (0.00ns) (grouped into LUT with out node xor_ln207)   --->   "%or_ln57_6 = call i32 @_ssdm_op_BitConcatenate.i32.i8.i24(i8 %trunc_ln57_4, i24 %lshr_ln57_6)" [sha256_impl.c:57->sha256_impl.c:207]   --->   Operation 38 'bitconcatenate' 'or_ln57_6' <Predicate = (tmp & tmp_3)> <Delay = 0.00>
ST_1 : Operation 39 [1/1] (0.00ns) (grouped into LUT with out node xor_ln207)   --->   "%select_ln51_6 = select i1 %tmp_3, i32 %or_ln57_6, i32 %or_ln53_6" [sha256_impl.c:51->sha256_impl.c:207]   --->   Operation 39 'select' 'select_ln51_6' <Predicate = (tmp)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 40 [1/1] (0.99ns) (out node of the LUT)   --->   "%xor_ln207 = xor i32 %select_ln51_6, %select_ln51_5" [sha256_impl.c:207]   --->   Operation 40 'xor' 'xor_ln207' <Predicate = (tmp)> <Delay = 0.99> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 41 [1/1] (1.76ns)   --->   "br label %3" [sha256_impl.c:207]   --->   Operation 41 'br' <Predicate = (tmp)> <Delay = 1.76>
ST_1 : Operation 42 [1/1] (0.00ns)   --->   "%p_0 = phi i32 [ %xor_ln202_1, %1 ], [ %xor_ln207, %2 ]" [sha256_impl.c:202]   --->   Operation 42 'phi' 'p_0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 43 [1/1] (0.00ns)   --->   "ret i32 %p_0" [sha256_impl.c:215]   --->   Operation 43 'ret' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 3.75ns
The critical path consists of the following:
	wire read on port 'x' (sha256_impl.c:196) [3]  (0 ns)
	'xor' operation ('xor_ln202', sha256_impl.c:202) [25]  (0.993 ns)
	'xor' operation ('xor_ln202_1', sha256_impl.c:202) [26]  (0.993 ns)
	multiplexor before 'phi' operation ('p_0', sha256_impl.c:202) with incoming values : ('xor_ln202_1', sha256_impl.c:202) ('xor_ln207', sha256_impl.c:207) [46]  (1.77 ns)
	'phi' operation ('p_0', sha256_impl.c:202) with incoming values : ('xor_ln202_1', sha256_impl.c:202) ('xor_ln207', sha256_impl.c:207) [46]  (0 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
