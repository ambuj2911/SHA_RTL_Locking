-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2019.1
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity EP1 is
port (
    ap_ready : OUT STD_LOGIC;
    x : IN STD_LOGIC_VECTOR (31 downto 0);
    rtl_key_r : IN STD_LOGIC_VECTOR (31 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of EP1 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_logic_0 : STD_LOGIC := '0';

    signal xor_ln184_fu_211_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_p_0_phi_fu_81_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_fu_91_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln189_1_fu_380_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln56_9_fu_107_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal lshr_ln_fu_111_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln60_9_fu_139_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal lshr_ln9_fu_129_p4 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_5_fu_99_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln3_fu_143_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln_fu_121_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln56_10_fu_159_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal lshr_ln56_7_fu_163_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln60_10_fu_191_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal lshr_ln60_7_fu_181_p4 : STD_LOGIC_VECTOR (21 downto 0);
    signal or_ln60_7_fu_195_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln56_7_fu_173_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln54_7_fu_203_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln54_fu_151_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln56_fu_218_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal lshr_ln56_8_fu_222_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln60_fu_250_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal lshr_ln60_8_fu_240_p4 : STD_LOGIC_VECTOR (25 downto 0);
    signal or_ln60_8_fu_254_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln56_8_fu_232_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln56_7_fu_270_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal lshr_ln56_9_fu_274_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln60_7_fu_302_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal lshr_ln60_9_fu_292_p4 : STD_LOGIC_VECTOR (20 downto 0);
    signal or_ln60_9_fu_306_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln56_9_fu_284_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln56_8_fu_322_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal lshr_ln56_s_fu_326_p4 : STD_LOGIC_VECTOR (24 downto 0);
    signal trunc_ln60_8_fu_354_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal lshr_ln60_s_fu_344_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal or_ln60_s_fu_358_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln56_s_fu_336_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln54_8_fu_262_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln54_10_fu_366_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal xor_ln189_fu_374_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln54_9_fu_314_p3 : STD_LOGIC_VECTOR (31 downto 0);


begin




    ap_phi_mux_p_0_phi_fu_81_p4_assign_proc : process(xor_ln184_fu_211_p2, tmp_fu_91_p3, xor_ln189_1_fu_380_p2)
    begin
        if ((tmp_fu_91_p3 = ap_const_lv1_1)) then 
            ap_phi_mux_p_0_phi_fu_81_p4 <= xor_ln189_1_fu_380_p2;
        elsif ((tmp_fu_91_p3 = ap_const_lv1_0)) then 
            ap_phi_mux_p_0_phi_fu_81_p4 <= xor_ln184_fu_211_p2;
        else 
            ap_phi_mux_p_0_phi_fu_81_p4 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    ap_ready <= ap_const_logic_1;
    ap_return <= ap_phi_mux_p_0_phi_fu_81_p4;
    lshr_ln56_7_fu_163_p4 <= x(31 downto 22);
    lshr_ln56_8_fu_222_p4 <= x(31 downto 26);
    lshr_ln56_9_fu_274_p4 <= x(31 downto 21);
    lshr_ln56_s_fu_326_p4 <= x(31 downto 7);
    lshr_ln60_7_fu_181_p4 <= x(31 downto 10);
    lshr_ln60_8_fu_240_p4 <= x(31 downto 6);
    lshr_ln60_9_fu_292_p4 <= x(31 downto 11);
    lshr_ln60_s_fu_344_p4 <= x(31 downto 25);
    lshr_ln9_fu_129_p4 <= x(31 downto 4);
    lshr_ln_fu_111_p4 <= x(31 downto 28);
    or_ln3_fu_143_p3 <= (trunc_ln60_9_fu_139_p1 & lshr_ln9_fu_129_p4);
    or_ln56_7_fu_173_p3 <= (trunc_ln56_10_fu_159_p1 & lshr_ln56_7_fu_163_p4);
    or_ln56_8_fu_232_p3 <= (trunc_ln56_fu_218_p1 & lshr_ln56_8_fu_222_p4);
    or_ln56_9_fu_284_p3 <= (trunc_ln56_7_fu_270_p1 & lshr_ln56_9_fu_274_p4);
    or_ln56_s_fu_336_p3 <= (trunc_ln56_8_fu_322_p1 & lshr_ln56_s_fu_326_p4);
    or_ln60_7_fu_195_p3 <= (trunc_ln60_10_fu_191_p1 & lshr_ln60_7_fu_181_p4);
    or_ln60_8_fu_254_p3 <= (trunc_ln60_fu_250_p1 & lshr_ln60_8_fu_240_p4);
    or_ln60_9_fu_306_p3 <= (trunc_ln60_7_fu_302_p1 & lshr_ln60_9_fu_292_p4);
    or_ln60_s_fu_358_p3 <= (trunc_ln60_8_fu_354_p1 & lshr_ln60_s_fu_344_p4);
    or_ln_fu_121_p3 <= (trunc_ln56_9_fu_107_p1 & lshr_ln_fu_111_p4);
    select_ln54_10_fu_366_p3 <= 
        or_ln60_s_fu_358_p3 when (tmp_5_fu_99_p3(0) = '1') else 
        or_ln56_s_fu_336_p3;
    select_ln54_7_fu_203_p3 <= 
        or_ln60_7_fu_195_p3 when (tmp_5_fu_99_p3(0) = '1') else 
        or_ln56_7_fu_173_p3;
    select_ln54_8_fu_262_p3 <= 
        or_ln60_8_fu_254_p3 when (tmp_5_fu_99_p3(0) = '1') else 
        or_ln56_8_fu_232_p3;
    select_ln54_9_fu_314_p3 <= 
        or_ln60_9_fu_306_p3 when (tmp_5_fu_99_p3(0) = '1') else 
        or_ln56_9_fu_284_p3;
    select_ln54_fu_151_p3 <= 
        or_ln3_fu_143_p3 when (tmp_5_fu_99_p3(0) = '1') else 
        or_ln_fu_121_p3;
    tmp_5_fu_99_p3 <= rtl_key_r(6 downto 6);
    tmp_fu_91_p3 <= rtl_key_r(2 downto 2);
    trunc_ln56_10_fu_159_p1 <= x(22 - 1 downto 0);
    trunc_ln56_7_fu_270_p1 <= x(21 - 1 downto 0);
    trunc_ln56_8_fu_322_p1 <= x(7 - 1 downto 0);
    trunc_ln56_9_fu_107_p1 <= x(28 - 1 downto 0);
    trunc_ln56_fu_218_p1 <= x(26 - 1 downto 0);
    trunc_ln60_10_fu_191_p1 <= x(10 - 1 downto 0);
    trunc_ln60_7_fu_302_p1 <= x(11 - 1 downto 0);
    trunc_ln60_8_fu_354_p1 <= x(25 - 1 downto 0);
    trunc_ln60_9_fu_139_p1 <= x(4 - 1 downto 0);
    trunc_ln60_fu_250_p1 <= x(6 - 1 downto 0);
    xor_ln184_fu_211_p2 <= (select_ln54_fu_151_p3 xor select_ln54_7_fu_203_p3);
    xor_ln189_1_fu_380_p2 <= (xor_ln189_fu_374_p2 xor select_ln54_9_fu_314_p3);
    xor_ln189_fu_374_p2 <= (select_ln54_8_fu_262_p3 xor select_ln54_10_fu_366_p3);
end behav;
