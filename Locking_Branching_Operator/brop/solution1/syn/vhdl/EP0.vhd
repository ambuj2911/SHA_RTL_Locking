-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2019.1
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity EP0 is
port (
    ap_ready : OUT STD_LOGIC;
    x : IN STD_LOGIC_VECTOR (31 downto 0);
    rtl_key_r : IN STD_LOGIC_VECTOR (31 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of EP0 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_logic_0 : STD_LOGIC := '0';

    signal xor_ln161_1_fu_269_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_p_0_phi_fu_81_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_fu_91_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln167_fu_380_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln56_12_fu_107_p1 : STD_LOGIC_VECTOR (29 downto 0);
    signal lshr_ln_fu_111_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln60_12_fu_139_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal lshr_ln1_fu_129_p4 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_6_fu_99_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln4_fu_143_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln_fu_121_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln56_13_fu_159_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal lshr_ln56_s_fu_163_p4 : STD_LOGIC_VECTOR (12 downto 0);
    signal trunc_ln60_13_fu_191_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal lshr_ln60_s_fu_181_p4 : STD_LOGIC_VECTOR (18 downto 0);
    signal or_ln60_s_fu_195_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln56_s_fu_173_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln56_14_fu_211_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal lshr_ln56_1_fu_215_p4 : STD_LOGIC_VECTOR (21 downto 0);
    signal trunc_ln60_14_fu_243_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal lshr_ln60_1_fu_233_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal or_ln60_1_fu_247_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln56_1_fu_225_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln54_fu_151_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln54_12_fu_255_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal xor_ln161_fu_263_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln54_11_fu_203_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln56_fu_276_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal lshr_ln56_2_fu_280_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln60_fu_308_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal lshr_ln60_2_fu_298_p4 : STD_LOGIC_VECTOR (25 downto 0);
    signal or_ln60_2_fu_312_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln56_2_fu_290_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln56_11_fu_328_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal lshr_ln56_3_fu_332_p4 : STD_LOGIC_VECTOR (17 downto 0);
    signal trunc_ln60_11_fu_360_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal lshr_ln60_3_fu_350_p4 : STD_LOGIC_VECTOR (13 downto 0);
    signal or_ln60_3_fu_364_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln56_3_fu_342_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln54_14_fu_372_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln54_13_fu_320_p3 : STD_LOGIC_VECTOR (31 downto 0);


begin




    ap_phi_mux_p_0_phi_fu_81_p4_assign_proc : process(xor_ln161_1_fu_269_p2, tmp_fu_91_p3, xor_ln167_fu_380_p2)
    begin
        if ((tmp_fu_91_p3 = ap_const_lv1_1)) then 
            ap_phi_mux_p_0_phi_fu_81_p4 <= xor_ln167_fu_380_p2;
        elsif ((tmp_fu_91_p3 = ap_const_lv1_0)) then 
            ap_phi_mux_p_0_phi_fu_81_p4 <= xor_ln161_1_fu_269_p2;
        else 
            ap_phi_mux_p_0_phi_fu_81_p4 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    ap_ready <= ap_const_logic_1;
    ap_return <= ap_phi_mux_p_0_phi_fu_81_p4;
    lshr_ln1_fu_129_p4 <= x(31 downto 2);
    lshr_ln56_1_fu_215_p4 <= x(31 downto 10);
    lshr_ln56_2_fu_280_p4 <= x(31 downto 26);
    lshr_ln56_3_fu_332_p4 <= x(31 downto 14);
    lshr_ln56_s_fu_163_p4 <= x(31 downto 19);
    lshr_ln60_1_fu_233_p4 <= x(31 downto 22);
    lshr_ln60_2_fu_298_p4 <= x(31 downto 6);
    lshr_ln60_3_fu_350_p4 <= x(31 downto 18);
    lshr_ln60_s_fu_181_p4 <= x(31 downto 13);
    lshr_ln_fu_111_p4 <= x(31 downto 30);
    or_ln4_fu_143_p3 <= (trunc_ln60_12_fu_139_p1 & lshr_ln1_fu_129_p4);
    or_ln56_1_fu_225_p3 <= (trunc_ln56_14_fu_211_p1 & lshr_ln56_1_fu_215_p4);
    or_ln56_2_fu_290_p3 <= (trunc_ln56_fu_276_p1 & lshr_ln56_2_fu_280_p4);
    or_ln56_3_fu_342_p3 <= (trunc_ln56_11_fu_328_p1 & lshr_ln56_3_fu_332_p4);
    or_ln56_s_fu_173_p3 <= (trunc_ln56_13_fu_159_p1 & lshr_ln56_s_fu_163_p4);
    or_ln60_1_fu_247_p3 <= (trunc_ln60_14_fu_243_p1 & lshr_ln60_1_fu_233_p4);
    or_ln60_2_fu_312_p3 <= (trunc_ln60_fu_308_p1 & lshr_ln60_2_fu_298_p4);
    or_ln60_3_fu_364_p3 <= (trunc_ln60_11_fu_360_p1 & lshr_ln60_3_fu_350_p4);
    or_ln60_s_fu_195_p3 <= (trunc_ln60_13_fu_191_p1 & lshr_ln60_s_fu_181_p4);
    or_ln_fu_121_p3 <= (trunc_ln56_12_fu_107_p1 & lshr_ln_fu_111_p4);
    select_ln54_11_fu_203_p3 <= 
        or_ln60_s_fu_195_p3 when (tmp_6_fu_99_p3(0) = '1') else 
        or_ln56_s_fu_173_p3;
    select_ln54_12_fu_255_p3 <= 
        or_ln60_1_fu_247_p3 when (tmp_6_fu_99_p3(0) = '1') else 
        or_ln56_1_fu_225_p3;
    select_ln54_13_fu_320_p3 <= 
        or_ln60_2_fu_312_p3 when (tmp_6_fu_99_p3(0) = '1') else 
        or_ln56_2_fu_290_p3;
    select_ln54_14_fu_372_p3 <= 
        or_ln60_3_fu_364_p3 when (tmp_6_fu_99_p3(0) = '1') else 
        or_ln56_3_fu_342_p3;
    select_ln54_fu_151_p3 <= 
        or_ln4_fu_143_p3 when (tmp_6_fu_99_p3(0) = '1') else 
        or_ln_fu_121_p3;
    tmp_6_fu_99_p3 <= rtl_key_r(6 downto 6);
    tmp_fu_91_p3 <= rtl_key_r(3 downto 3);
    trunc_ln56_11_fu_328_p1 <= x(14 - 1 downto 0);
    trunc_ln56_12_fu_107_p1 <= x(30 - 1 downto 0);
    trunc_ln56_13_fu_159_p1 <= x(19 - 1 downto 0);
    trunc_ln56_14_fu_211_p1 <= x(10 - 1 downto 0);
    trunc_ln56_fu_276_p1 <= x(26 - 1 downto 0);
    trunc_ln60_11_fu_360_p1 <= x(18 - 1 downto 0);
    trunc_ln60_12_fu_139_p1 <= x(2 - 1 downto 0);
    trunc_ln60_13_fu_191_p1 <= x(13 - 1 downto 0);
    trunc_ln60_14_fu_243_p1 <= x(22 - 1 downto 0);
    trunc_ln60_fu_308_p1 <= x(6 - 1 downto 0);
    xor_ln161_1_fu_269_p2 <= (xor_ln161_fu_263_p2 xor select_ln54_11_fu_203_p3);
    xor_ln161_fu_263_p2 <= (select_ln54_fu_151_p3 xor select_ln54_12_fu_255_p3);
    xor_ln167_fu_380_p2 <= (select_ln54_14_fu_372_p3 xor select_ln54_13_fu_320_p3);
end behav;
