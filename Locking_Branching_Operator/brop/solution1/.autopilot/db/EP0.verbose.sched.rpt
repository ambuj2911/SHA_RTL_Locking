

================================================================
== Vivado HLS Report for 'EP0'
================================================================
* Date:           Sat Apr 10 17:46:53 2021

* Version:        2019.1 (Build 2552052 on Fri May 24 15:28:33 MDT 2019)
* Project:        brop
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z020-clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|     3.755|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+----------+
    |  Latency  |  Interval | Pipeline |
    | min | max | min | max |   Type   |
    +-----+-----+-----+-----+----------+
    |    0|    0|    1|    1| function |
    +-----+-----+-----+-----+----------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 0
IsPipeline: 1
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 1


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 1
* Pipeline : 1
  Pipeline-0 : II = 1, D = 1, States = { 1 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 3.75>
ST_1 : Operation 2 [1/1] (0.00ns)   --->   "%x_read = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %x) nounwind" [sha256_impl.c:155]   --->   Operation 2 'read' 'x_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 3 [1/1] (0.00ns)   --->   "%rtl_key_load = load i32* @rtl_key_r, align 4" [sha256_impl.c:157]   --->   Operation 3 'load' 'rtl_key_load' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 4 [1/1] (0.00ns)   --->   "%tmp = call i1 @_ssdm_op_BitSelect.i1.i32.i32(i32 %rtl_key_load, i32 3)" [sha256_impl.c:159]   --->   Operation 4 'bitselect' 'tmp' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 5 [1/1] (0.00ns)   --->   "%tmp_6 = call i1 @_ssdm_op_BitSelect.i1.i32.i32(i32 %rtl_key_load, i32 6)" [sha256_impl.c:54->sha256_impl.c:161]   --->   Operation 5 'bitselect' 'tmp_6' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "br i1 %tmp, label %2, label %1" [sha256_impl.c:159]   --->   Operation 6 'br' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns) (grouped into LUT with out node xor_ln161)   --->   "%trunc_ln56_12 = trunc i32 %x_read to i30" [sha256_impl.c:56->sha256_impl.c:161]   --->   Operation 7 'trunc' 'trunc_ln56_12' <Predicate = (!tmp & !tmp_6)> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns) (grouped into LUT with out node xor_ln161)   --->   "%lshr_ln = call i2 @_ssdm_op_PartSelect.i2.i32.i32.i32(i32 %x_read, i32 30, i32 31)" [sha256_impl.c:56->sha256_impl.c:161]   --->   Operation 8 'partselect' 'lshr_ln' <Predicate = (!tmp & !tmp_6)> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns) (grouped into LUT with out node xor_ln161)   --->   "%or_ln = call i32 @_ssdm_op_BitConcatenate.i32.i30.i2(i30 %trunc_ln56_12, i2 %lshr_ln)" [sha256_impl.c:56->sha256_impl.c:161]   --->   Operation 9 'bitconcatenate' 'or_ln' <Predicate = (!tmp & !tmp_6)> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns) (grouped into LUT with out node xor_ln161)   --->   "%lshr_ln1 = call i30 @_ssdm_op_PartSelect.i30.i32.i32.i32(i32 %x_read, i32 2, i32 31)" [sha256_impl.c:60->sha256_impl.c:161]   --->   Operation 10 'partselect' 'lshr_ln1' <Predicate = (!tmp & tmp_6)> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns) (grouped into LUT with out node xor_ln161)   --->   "%trunc_ln60_12 = trunc i32 %x_read to i2" [sha256_impl.c:60->sha256_impl.c:161]   --->   Operation 11 'trunc' 'trunc_ln60_12' <Predicate = (!tmp & tmp_6)> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns) (grouped into LUT with out node xor_ln161)   --->   "%or_ln4 = call i32 @_ssdm_op_BitConcatenate.i32.i2.i30(i2 %trunc_ln60_12, i30 %lshr_ln1)" [sha256_impl.c:60->sha256_impl.c:161]   --->   Operation 12 'bitconcatenate' 'or_ln4' <Predicate = (!tmp & tmp_6)> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns) (grouped into LUT with out node xor_ln161)   --->   "%select_ln54 = select i1 %tmp_6, i32 %or_ln4, i32 %or_ln" [sha256_impl.c:54->sha256_impl.c:161]   --->   Operation 13 'select' 'select_ln54' <Predicate = (!tmp)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 14 [1/1] (0.00ns) (grouped into LUT with out node xor_ln161_1)   --->   "%trunc_ln56_13 = trunc i32 %x_read to i19" [sha256_impl.c:56->sha256_impl.c:161]   --->   Operation 14 'trunc' 'trunc_ln56_13' <Predicate = (!tmp & !tmp_6)> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns) (grouped into LUT with out node xor_ln161_1)   --->   "%lshr_ln56_s = call i13 @_ssdm_op_PartSelect.i13.i32.i32.i32(i32 %x_read, i32 19, i32 31)" [sha256_impl.c:56->sha256_impl.c:161]   --->   Operation 15 'partselect' 'lshr_ln56_s' <Predicate = (!tmp & !tmp_6)> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns) (grouped into LUT with out node xor_ln161_1)   --->   "%or_ln56_s = call i32 @_ssdm_op_BitConcatenate.i32.i19.i13(i19 %trunc_ln56_13, i13 %lshr_ln56_s)" [sha256_impl.c:56->sha256_impl.c:161]   --->   Operation 16 'bitconcatenate' 'or_ln56_s' <Predicate = (!tmp & !tmp_6)> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns) (grouped into LUT with out node xor_ln161_1)   --->   "%lshr_ln60_s = call i19 @_ssdm_op_PartSelect.i19.i32.i32.i32(i32 %x_read, i32 13, i32 31)" [sha256_impl.c:60->sha256_impl.c:161]   --->   Operation 17 'partselect' 'lshr_ln60_s' <Predicate = (!tmp & tmp_6)> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns) (grouped into LUT with out node xor_ln161_1)   --->   "%trunc_ln60_13 = trunc i32 %x_read to i13" [sha256_impl.c:60->sha256_impl.c:161]   --->   Operation 18 'trunc' 'trunc_ln60_13' <Predicate = (!tmp & tmp_6)> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns) (grouped into LUT with out node xor_ln161_1)   --->   "%or_ln60_s = call i32 @_ssdm_op_BitConcatenate.i32.i13.i19(i13 %trunc_ln60_13, i19 %lshr_ln60_s)" [sha256_impl.c:60->sha256_impl.c:161]   --->   Operation 19 'bitconcatenate' 'or_ln60_s' <Predicate = (!tmp & tmp_6)> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns) (grouped into LUT with out node xor_ln161_1)   --->   "%select_ln54_11 = select i1 %tmp_6, i32 %or_ln60_s, i32 %or_ln56_s" [sha256_impl.c:54->sha256_impl.c:161]   --->   Operation 20 'select' 'select_ln54_11' <Predicate = (!tmp)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 21 [1/1] (0.00ns) (grouped into LUT with out node xor_ln161)   --->   "%trunc_ln56_14 = trunc i32 %x_read to i10" [sha256_impl.c:56->sha256_impl.c:161]   --->   Operation 21 'trunc' 'trunc_ln56_14' <Predicate = (!tmp & !tmp_6)> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (0.00ns) (grouped into LUT with out node xor_ln161)   --->   "%lshr_ln56_1 = call i22 @_ssdm_op_PartSelect.i22.i32.i32.i32(i32 %x_read, i32 10, i32 31)" [sha256_impl.c:56->sha256_impl.c:161]   --->   Operation 22 'partselect' 'lshr_ln56_1' <Predicate = (!tmp & !tmp_6)> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (0.00ns) (grouped into LUT with out node xor_ln161)   --->   "%or_ln56_1 = call i32 @_ssdm_op_BitConcatenate.i32.i10.i22(i10 %trunc_ln56_14, i22 %lshr_ln56_1)" [sha256_impl.c:56->sha256_impl.c:161]   --->   Operation 23 'bitconcatenate' 'or_ln56_1' <Predicate = (!tmp & !tmp_6)> <Delay = 0.00>
ST_1 : Operation 24 [1/1] (0.00ns) (grouped into LUT with out node xor_ln161)   --->   "%lshr_ln60_1 = call i10 @_ssdm_op_PartSelect.i10.i32.i32.i32(i32 %x_read, i32 22, i32 31)" [sha256_impl.c:60->sha256_impl.c:161]   --->   Operation 24 'partselect' 'lshr_ln60_1' <Predicate = (!tmp & tmp_6)> <Delay = 0.00>
ST_1 : Operation 25 [1/1] (0.00ns) (grouped into LUT with out node xor_ln161)   --->   "%trunc_ln60_14 = trunc i32 %x_read to i22" [sha256_impl.c:60->sha256_impl.c:161]   --->   Operation 25 'trunc' 'trunc_ln60_14' <Predicate = (!tmp & tmp_6)> <Delay = 0.00>
ST_1 : Operation 26 [1/1] (0.00ns) (grouped into LUT with out node xor_ln161)   --->   "%or_ln60_1 = call i32 @_ssdm_op_BitConcatenate.i32.i22.i10(i22 %trunc_ln60_14, i10 %lshr_ln60_1)" [sha256_impl.c:60->sha256_impl.c:161]   --->   Operation 26 'bitconcatenate' 'or_ln60_1' <Predicate = (!tmp & tmp_6)> <Delay = 0.00>
ST_1 : Operation 27 [1/1] (0.00ns) (grouped into LUT with out node xor_ln161)   --->   "%select_ln54_12 = select i1 %tmp_6, i32 %or_ln60_1, i32 %or_ln56_1" [sha256_impl.c:54->sha256_impl.c:161]   --->   Operation 27 'select' 'select_ln54_12' <Predicate = (!tmp)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 28 [1/1] (0.99ns) (out node of the LUT)   --->   "%xor_ln161 = xor i32 %select_ln54, %select_ln54_12" [sha256_impl.c:161]   --->   Operation 28 'xor' 'xor_ln161' <Predicate = (!tmp)> <Delay = 0.99> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 29 [1/1] (0.99ns) (out node of the LUT)   --->   "%xor_ln161_1 = xor i32 %xor_ln161, %select_ln54_11" [sha256_impl.c:161]   --->   Operation 29 'xor' 'xor_ln161_1' <Predicate = (!tmp)> <Delay = 0.99> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 30 [1/1] (1.76ns)   --->   "br label %3" [sha256_impl.c:161]   --->   Operation 30 'br' <Predicate = (!tmp)> <Delay = 1.76>
ST_1 : Operation 31 [1/1] (0.00ns) (grouped into LUT with out node xor_ln167)   --->   "%trunc_ln56 = trunc i32 %x_read to i26" [sha256_impl.c:56->sha256_impl.c:167]   --->   Operation 31 'trunc' 'trunc_ln56' <Predicate = (tmp & !tmp_6)> <Delay = 0.00>
ST_1 : Operation 32 [1/1] (0.00ns) (grouped into LUT with out node xor_ln167)   --->   "%lshr_ln56_2 = call i6 @_ssdm_op_PartSelect.i6.i32.i32.i32(i32 %x_read, i32 26, i32 31)" [sha256_impl.c:56->sha256_impl.c:167]   --->   Operation 32 'partselect' 'lshr_ln56_2' <Predicate = (tmp & !tmp_6)> <Delay = 0.00>
ST_1 : Operation 33 [1/1] (0.00ns) (grouped into LUT with out node xor_ln167)   --->   "%or_ln56_2 = call i32 @_ssdm_op_BitConcatenate.i32.i26.i6(i26 %trunc_ln56, i6 %lshr_ln56_2)" [sha256_impl.c:56->sha256_impl.c:167]   --->   Operation 33 'bitconcatenate' 'or_ln56_2' <Predicate = (tmp & !tmp_6)> <Delay = 0.00>
ST_1 : Operation 34 [1/1] (0.00ns) (grouped into LUT with out node xor_ln167)   --->   "%lshr_ln60_2 = call i26 @_ssdm_op_PartSelect.i26.i32.i32.i32(i32 %x_read, i32 6, i32 31)" [sha256_impl.c:60->sha256_impl.c:167]   --->   Operation 34 'partselect' 'lshr_ln60_2' <Predicate = (tmp & tmp_6)> <Delay = 0.00>
ST_1 : Operation 35 [1/1] (0.00ns) (grouped into LUT with out node xor_ln167)   --->   "%trunc_ln60 = trunc i32 %x_read to i6" [sha256_impl.c:60->sha256_impl.c:167]   --->   Operation 35 'trunc' 'trunc_ln60' <Predicate = (tmp & tmp_6)> <Delay = 0.00>
ST_1 : Operation 36 [1/1] (0.00ns) (grouped into LUT with out node xor_ln167)   --->   "%or_ln60_2 = call i32 @_ssdm_op_BitConcatenate.i32.i6.i26(i6 %trunc_ln60, i26 %lshr_ln60_2)" [sha256_impl.c:60->sha256_impl.c:167]   --->   Operation 36 'bitconcatenate' 'or_ln60_2' <Predicate = (tmp & tmp_6)> <Delay = 0.00>
ST_1 : Operation 37 [1/1] (0.00ns) (grouped into LUT with out node xor_ln167)   --->   "%select_ln54_13 = select i1 %tmp_6, i32 %or_ln60_2, i32 %or_ln56_2" [sha256_impl.c:54->sha256_impl.c:167]   --->   Operation 37 'select' 'select_ln54_13' <Predicate = (tmp)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 38 [1/1] (0.00ns) (grouped into LUT with out node xor_ln167)   --->   "%trunc_ln56_11 = trunc i32 %x_read to i14" [sha256_impl.c:56->sha256_impl.c:167]   --->   Operation 38 'trunc' 'trunc_ln56_11' <Predicate = (tmp & !tmp_6)> <Delay = 0.00>
ST_1 : Operation 39 [1/1] (0.00ns) (grouped into LUT with out node xor_ln167)   --->   "%lshr_ln56_3 = call i18 @_ssdm_op_PartSelect.i18.i32.i32.i32(i32 %x_read, i32 14, i32 31)" [sha256_impl.c:56->sha256_impl.c:167]   --->   Operation 39 'partselect' 'lshr_ln56_3' <Predicate = (tmp & !tmp_6)> <Delay = 0.00>
ST_1 : Operation 40 [1/1] (0.00ns) (grouped into LUT with out node xor_ln167)   --->   "%or_ln56_3 = call i32 @_ssdm_op_BitConcatenate.i32.i14.i18(i14 %trunc_ln56_11, i18 %lshr_ln56_3)" [sha256_impl.c:56->sha256_impl.c:167]   --->   Operation 40 'bitconcatenate' 'or_ln56_3' <Predicate = (tmp & !tmp_6)> <Delay = 0.00>
ST_1 : Operation 41 [1/1] (0.00ns) (grouped into LUT with out node xor_ln167)   --->   "%lshr_ln60_3 = call i14 @_ssdm_op_PartSelect.i14.i32.i32.i32(i32 %x_read, i32 18, i32 31)" [sha256_impl.c:60->sha256_impl.c:167]   --->   Operation 41 'partselect' 'lshr_ln60_3' <Predicate = (tmp & tmp_6)> <Delay = 0.00>
ST_1 : Operation 42 [1/1] (0.00ns) (grouped into LUT with out node xor_ln167)   --->   "%trunc_ln60_11 = trunc i32 %x_read to i18" [sha256_impl.c:60->sha256_impl.c:167]   --->   Operation 42 'trunc' 'trunc_ln60_11' <Predicate = (tmp & tmp_6)> <Delay = 0.00>
ST_1 : Operation 43 [1/1] (0.00ns) (grouped into LUT with out node xor_ln167)   --->   "%or_ln60_3 = call i32 @_ssdm_op_BitConcatenate.i32.i18.i14(i18 %trunc_ln60_11, i14 %lshr_ln60_3)" [sha256_impl.c:60->sha256_impl.c:167]   --->   Operation 43 'bitconcatenate' 'or_ln60_3' <Predicate = (tmp & tmp_6)> <Delay = 0.00>
ST_1 : Operation 44 [1/1] (0.00ns) (grouped into LUT with out node xor_ln167)   --->   "%select_ln54_14 = select i1 %tmp_6, i32 %or_ln60_3, i32 %or_ln56_3" [sha256_impl.c:54->sha256_impl.c:167]   --->   Operation 44 'select' 'select_ln54_14' <Predicate = (tmp)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 45 [1/1] (0.99ns) (out node of the LUT)   --->   "%xor_ln167 = xor i32 %select_ln54_14, %select_ln54_13" [sha256_impl.c:167]   --->   Operation 45 'xor' 'xor_ln167' <Predicate = (tmp)> <Delay = 0.99> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 46 [1/1] (1.76ns)   --->   "br label %3" [sha256_impl.c:167]   --->   Operation 46 'br' <Predicate = (tmp)> <Delay = 1.76>
ST_1 : Operation 47 [1/1] (0.00ns)   --->   "%p_0 = phi i32 [ %xor_ln161_1, %1 ], [ %xor_ln167, %2 ]" [sha256_impl.c:161]   --->   Operation 47 'phi' 'p_0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 48 [1/1] (0.00ns)   --->   "ret i32 %p_0" [sha256_impl.c:174]   --->   Operation 48 'ret' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 3.75ns
The critical path consists of the following:
	wire read on port 'x' (sha256_impl.c:155) [3]  (0 ns)
	'select' operation ('select_ln54_12', sha256_impl.c:54->sha256_impl.c:161) [29]  (0 ns)
	'xor' operation ('xor_ln161', sha256_impl.c:161) [30]  (0.993 ns)
	'xor' operation ('xor_ln161_1', sha256_impl.c:161) [31]  (0.993 ns)
	multiplexor before 'phi' operation ('p_0', sha256_impl.c:161) with incoming values : ('xor_ln161_1', sha256_impl.c:161) ('xor_ln167', sha256_impl.c:167) [51]  (1.77 ns)
	'phi' operation ('p_0', sha256_impl.c:161) with incoming values : ('xor_ln161_1', sha256_impl.c:161) ('xor_ln167', sha256_impl.c:167) [51]  (0 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
